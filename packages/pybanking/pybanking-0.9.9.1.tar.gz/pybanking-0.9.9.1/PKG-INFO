Metadata-Version: 2.1
Name: pybanking
Version: 0.9.9.1
Summary: Machine learning module for banking
Home-page: https://github.com/shorthillstech/pybanking
Author: Shorthills Tech
Author-email: apurv@shorthillstech.com
License: MIT
Keywords: banking project
Platform: UNKNOWN
Description-Content-Type: text/markdown

<h3><img align="center" src="logo.png"> Banking Machine Learning - Pybanking is an open source library </h3>

## Banking Project
Pybanking is an open source library that has the state of the art machine learning models for the banking industry. [Documentation](https://pybanking.gitbook.io/pybanking-shorthillstech/) can be found here along with tutorials and sample datasets. To [contribute](https://github.com/shorthillstech/Pybanking/) to the project please feel free to send a pull request and [our team](https://www.shorthillstech.com/) will review is at soon as possible. The project is being maintained by [Shorthills Tech](https://www.shorthillstech.com/about), which is a leading data engineering services provider. Machine Learning is important for banking and finance because it can help banks and financial institutions to automate and improve their processes. Machine learning can help banks to identify and prevent fraud, to better assess risk, and to make better lending and investment decisions. Machine learning can also help financial institutions to better understand and predict customer behavior. This is an opensource library which aims to create state of the art machine learning models to help all financial institutions deploy technology at scale.

## Installing

```bash
    pip install pybanking
```

## Usage

```python
from pybanking.example import custom_sklearn
custom_sklearn.get_sklearn_version()
'0.24.2'
```

## Churn Prediction

```python
    from pybanking.churn_prediction import model_churn
    df = model_churn.get_data()
    model = model_churn.pretrained("Logistic_Regression")
    X, y = model_churn.preprocess_inputs(df)
    model_churn.predict(X, model)
```   

## Marketing Prediction


```python
    from pybanking.deposit_prediction import model_banking_deposit
    df = model_banking_deposit.get_data()
    model = model_banking_deposit.pretrained("Logistic_Regression")
    X, y = model_banking_deposit.preprocess_inputs(df)
    model_banking_deposit.predict(X, model)
```
    
## Transaction Prediction

```python
    from pybanking.transaction_prediction import model_transaction
    df = model_transaction.get_data()
    model = model_transaction.pretrained("Logistic_Regression")
    X, y = model_transaction.preprocess_inputs(df)
    model_transaction.predict(X, model)
```
## Contributing to Pybanking

We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:

- Reporting a bug
- Discussing the current state of the code
- Submitting a fix
- Proposing new features
- Becoming a maintainer

