Metadata-Version: 2.1
Name: django-userdefinedtables
Version: 0.0.8
Summary: Generic EAV-style table creation in the user's hands
Home-page: https://github.com/peterelmwood/django_userdefinedtables
Author: Peter Wood
Author-email: peterelmwood@gmail.com
Maintainer: Peter Wood
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.1
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django (>=2.2)
Requires-Dist: Pillow
Requires-Dist: django-bootstrap-v5

![Tests passing](https://github.com/peterelmwood/django_userdefinedtables/actions/workflows/publish-to-test-pypi.yml/badge.svg)
![Latest is on pypi](https://github.com/peterelmwood/django_userdefinedtables/actions/workflows/publish-to-pypi.yml/badge.svg)

# django_userdefinedtables
This application is intended to be used as a way for an end user to define their own database tables.

It is loosely inspired by the way SharePoint lists work.

## Installation

To install django_userdefinedtables, use the following command:
``pip install django_userdefinedtables``

`userdefinedtables` should then added to the `APPS` list in the Django settings.

## Use

### Models
The models which are available for use are:
- *List*: Akin to a table in a relational database.
- *Column*: Akin to a column/attribute in a relational database. The naked _Column_ model should not be used, as it is the parent in a [multi-table inheritance](https://docs.djangoproject.com/en/4.0/topics/db/models/#multi-table-inheritance) scheme used among the various column models.
- *Row*: Akin to a row in a relational database. Manages order and membership of data entries.

## Active Development & Contribution

This project is still in a nascent stage, and is volatile, to a degree. Contribution by other members of the community is welcome, whether in the form of pull requests or ideas.
