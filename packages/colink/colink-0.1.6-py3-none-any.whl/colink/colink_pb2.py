# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: colink.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x63olink.proto\x12\x06\x63olink\"\x07\n\x05\x45mpty\"\x12\n\x03Jwt\x12\x0b\n\x03jwt\x18\x01 \x01(\t\"C\n\x0cStorageEntry\x12\x10\n\x08key_name\x18\x01 \x01(\t\x12\x10\n\x08key_path\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\"7\n\x0eStorageEntries\x12%\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x14.colink.StorageEntry\".\n\x13RefreshTokenRequest\x12\x17\n\x0f\x65xpiration_time\x18\x01 \x01(\x03\"o\n\x0bUserConsent\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12\x1b\n\x13signature_timestamp\x18\x02 \x01(\x03\x12\x1c\n\x14\x65xpiration_timestamp\x18\x04 \x01(\x03\x12\x11\n\tsignature\x18\x03 \x01(\x0c\":\n\x0fReadKeysRequest\x12\x0e\n\x06prefix\x18\x01 \x01(\t\x12\x17\n\x0finclude_history\x18\x02 \x01(\x08\"-\n\x0bParticipant\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\r\n\x05ptype\x18\x02 \x01(\t\"\x9b\x01\n\x08\x44\x65\x63ision\x12\x13\n\x0bis_approved\x18\x01 \x01(\x08\x12\x13\n\x0bis_rejected\x18\x02 \x01(\x08\x12\x0e\n\x06reason\x18\x03 \x01(\t\x12\x11\n\tsignature\x18\x04 \x01(\x0c\x12\x17\n\x0f\x63ore_public_key\x18\x05 \x01(\x0c\x12)\n\x0cuser_consent\x18\x06 \x01(\x0b\x32\x13.colink.UserConsent\"\xef\x01\n\x04Task\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x15\n\rprotocol_name\x18\x02 \x01(\t\x12\x16\n\x0eprotocol_param\x18\x03 \x01(\x0c\x12)\n\x0cparticipants\x18\x04 \x03(\x0b\x32\x13.colink.Participant\x12\x13\n\x0bparent_task\x18\x05 \x01(\t\x12\x19\n\x11require_agreement\x18\t \x01(\x08\x12#\n\tdecisions\x18\x06 \x03(\x0b\x32\x10.colink.Decision\x12\x0e\n\x06status\x18\x07 \x01(\t\x12\x17\n\x0f\x65xpiration_time\x18\x08 \x01(\x03\"I\n\x12\x43onfirmTaskRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\"\n\x08\x64\x65\x63ision\x18\x02 \x01(\x0b\x32\x10.colink.Decision\"3\n\x08\x43oreInfo\x12\x0e\n\x06mq_uri\x18\x01 \x01(\t\x12\x17\n\x0f\x63ore_public_key\x18\x02 \x01(\x0c\"=\n\x10SubscribeRequest\x12\x10\n\x08key_name\x18\x01 \x01(\t\x12\x17\n\x0fstart_timestamp\x18\x02 \x01(\x03\"M\n\x13SubscriptionMessage\x12\x13\n\x0b\x63hange_type\x18\x01 \x01(\t\x12\x10\n\x08key_path\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\"!\n\x0bMQQueueName\x12\x12\n\nqueue_name\x18\x01 \x01(\t\"D\n\x1f\x43oLinkInternalTaskIDWithKeyPath\x12\x10\n\x08key_path\x18\x01 \x01(\t\x12\x0f\n\x07task_id\x18\x02 \x01(\t\"d\n\x18\x43oLinkInternalTaskIDList\x12H\n\x17task_ids_with_key_paths\x18\x01 \x03(\x0b\x32\'.colink.CoLinkInternalTaskIDWithKeyPath2\x83\x06\n\x06\x43oLink\x12\x38\n\x0cRefreshToken\x12\x1b.colink.RefreshTokenRequest\x1a\x0b.colink.Jwt\x12.\n\nImportUser\x12\x13.colink.UserConsent\x1a\x0b.colink.Jwt\x12\x39\n\x0b\x43reateEntry\x12\x14.colink.StorageEntry\x1a\x14.colink.StorageEntry\x12=\n\x0bReadEntries\x12\x16.colink.StorageEntries\x1a\x16.colink.StorageEntries\x12\x39\n\x0bUpdateEntry\x12\x14.colink.StorageEntry\x1a\x14.colink.StorageEntry\x12\x39\n\x0b\x44\x65leteEntry\x12\x14.colink.StorageEntry\x1a\x14.colink.StorageEntry\x12;\n\x08ReadKeys\x12\x17.colink.ReadKeysRequest\x1a\x16.colink.StorageEntries\x12(\n\nCreateTask\x12\x0c.colink.Task\x1a\x0c.colink.Task\x12\x38\n\x0b\x43onfirmTask\x12\x1a.colink.ConfirmTaskRequest\x1a\r.colink.Empty\x12)\n\nFinishTask\x12\x0c.colink.Task\x1a\r.colink.Empty\x12\x32\n\x0fRequestCoreInfo\x12\r.colink.Empty\x1a\x10.colink.CoreInfo\x12:\n\tSubscribe\x12\x18.colink.SubscribeRequest\x1a\x13.colink.MQQueueName\x12\x31\n\x0bUnsubscribe\x12\x13.colink.MQQueueName\x1a\r.colink.Empty\x12\x30\n\x11InterCoreSyncTask\x12\x0c.colink.Task\x1a\r.colink.Emptyb\x06proto3')



_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_JWT = DESCRIPTOR.message_types_by_name['Jwt']
_STORAGEENTRY = DESCRIPTOR.message_types_by_name['StorageEntry']
_STORAGEENTRIES = DESCRIPTOR.message_types_by_name['StorageEntries']
_REFRESHTOKENREQUEST = DESCRIPTOR.message_types_by_name['RefreshTokenRequest']
_USERCONSENT = DESCRIPTOR.message_types_by_name['UserConsent']
_READKEYSREQUEST = DESCRIPTOR.message_types_by_name['ReadKeysRequest']
_PARTICIPANT = DESCRIPTOR.message_types_by_name['Participant']
_DECISION = DESCRIPTOR.message_types_by_name['Decision']
_TASK = DESCRIPTOR.message_types_by_name['Task']
_CONFIRMTASKREQUEST = DESCRIPTOR.message_types_by_name['ConfirmTaskRequest']
_COREINFO = DESCRIPTOR.message_types_by_name['CoreInfo']
_SUBSCRIBEREQUEST = DESCRIPTOR.message_types_by_name['SubscribeRequest']
_SUBSCRIPTIONMESSAGE = DESCRIPTOR.message_types_by_name['SubscriptionMessage']
_MQQUEUENAME = DESCRIPTOR.message_types_by_name['MQQueueName']
_COLINKINTERNALTASKIDWITHKEYPATH = DESCRIPTOR.message_types_by_name['CoLinkInternalTaskIDWithKeyPath']
_COLINKINTERNALTASKIDLIST = DESCRIPTOR.message_types_by_name['CoLinkInternalTaskIDList']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.Empty)
  })
_sym_db.RegisterMessage(Empty)

Jwt = _reflection.GeneratedProtocolMessageType('Jwt', (_message.Message,), {
  'DESCRIPTOR' : _JWT,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.Jwt)
  })
_sym_db.RegisterMessage(Jwt)

StorageEntry = _reflection.GeneratedProtocolMessageType('StorageEntry', (_message.Message,), {
  'DESCRIPTOR' : _STORAGEENTRY,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.StorageEntry)
  })
_sym_db.RegisterMessage(StorageEntry)

StorageEntries = _reflection.GeneratedProtocolMessageType('StorageEntries', (_message.Message,), {
  'DESCRIPTOR' : _STORAGEENTRIES,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.StorageEntries)
  })
_sym_db.RegisterMessage(StorageEntries)

RefreshTokenRequest = _reflection.GeneratedProtocolMessageType('RefreshTokenRequest', (_message.Message,), {
  'DESCRIPTOR' : _REFRESHTOKENREQUEST,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.RefreshTokenRequest)
  })
_sym_db.RegisterMessage(RefreshTokenRequest)

UserConsent = _reflection.GeneratedProtocolMessageType('UserConsent', (_message.Message,), {
  'DESCRIPTOR' : _USERCONSENT,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.UserConsent)
  })
_sym_db.RegisterMessage(UserConsent)

ReadKeysRequest = _reflection.GeneratedProtocolMessageType('ReadKeysRequest', (_message.Message,), {
  'DESCRIPTOR' : _READKEYSREQUEST,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.ReadKeysRequest)
  })
_sym_db.RegisterMessage(ReadKeysRequest)

Participant = _reflection.GeneratedProtocolMessageType('Participant', (_message.Message,), {
  'DESCRIPTOR' : _PARTICIPANT,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.Participant)
  })
_sym_db.RegisterMessage(Participant)

Decision = _reflection.GeneratedProtocolMessageType('Decision', (_message.Message,), {
  'DESCRIPTOR' : _DECISION,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.Decision)
  })
_sym_db.RegisterMessage(Decision)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), {
  'DESCRIPTOR' : _TASK,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.Task)
  })
_sym_db.RegisterMessage(Task)

ConfirmTaskRequest = _reflection.GeneratedProtocolMessageType('ConfirmTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONFIRMTASKREQUEST,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.ConfirmTaskRequest)
  })
_sym_db.RegisterMessage(ConfirmTaskRequest)

CoreInfo = _reflection.GeneratedProtocolMessageType('CoreInfo', (_message.Message,), {
  'DESCRIPTOR' : _COREINFO,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.CoreInfo)
  })
_sym_db.RegisterMessage(CoreInfo)

SubscribeRequest = _reflection.GeneratedProtocolMessageType('SubscribeRequest', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBEREQUEST,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.SubscribeRequest)
  })
_sym_db.RegisterMessage(SubscribeRequest)

SubscriptionMessage = _reflection.GeneratedProtocolMessageType('SubscriptionMessage', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIPTIONMESSAGE,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.SubscriptionMessage)
  })
_sym_db.RegisterMessage(SubscriptionMessage)

MQQueueName = _reflection.GeneratedProtocolMessageType('MQQueueName', (_message.Message,), {
  'DESCRIPTOR' : _MQQUEUENAME,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.MQQueueName)
  })
_sym_db.RegisterMessage(MQQueueName)

CoLinkInternalTaskIDWithKeyPath = _reflection.GeneratedProtocolMessageType('CoLinkInternalTaskIDWithKeyPath', (_message.Message,), {
  'DESCRIPTOR' : _COLINKINTERNALTASKIDWITHKEYPATH,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.CoLinkInternalTaskIDWithKeyPath)
  })
_sym_db.RegisterMessage(CoLinkInternalTaskIDWithKeyPath)

CoLinkInternalTaskIDList = _reflection.GeneratedProtocolMessageType('CoLinkInternalTaskIDList', (_message.Message,), {
  'DESCRIPTOR' : _COLINKINTERNALTASKIDLIST,
  '__module__' : 'colink_pb2'
  # @@protoc_insertion_point(class_scope:colink.CoLinkInternalTaskIDList)
  })
_sym_db.RegisterMessage(CoLinkInternalTaskIDList)

_COLINK = DESCRIPTOR.services_by_name['CoLink']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EMPTY._serialized_start=24
  _EMPTY._serialized_end=31
  _JWT._serialized_start=33
  _JWT._serialized_end=51
  _STORAGEENTRY._serialized_start=53
  _STORAGEENTRY._serialized_end=120
  _STORAGEENTRIES._serialized_start=122
  _STORAGEENTRIES._serialized_end=177
  _REFRESHTOKENREQUEST._serialized_start=179
  _REFRESHTOKENREQUEST._serialized_end=225
  _USERCONSENT._serialized_start=227
  _USERCONSENT._serialized_end=338
  _READKEYSREQUEST._serialized_start=340
  _READKEYSREQUEST._serialized_end=398
  _PARTICIPANT._serialized_start=400
  _PARTICIPANT._serialized_end=445
  _DECISION._serialized_start=448
  _DECISION._serialized_end=603
  _TASK._serialized_start=606
  _TASK._serialized_end=845
  _CONFIRMTASKREQUEST._serialized_start=847
  _CONFIRMTASKREQUEST._serialized_end=920
  _COREINFO._serialized_start=922
  _COREINFO._serialized_end=973
  _SUBSCRIBEREQUEST._serialized_start=975
  _SUBSCRIBEREQUEST._serialized_end=1036
  _SUBSCRIPTIONMESSAGE._serialized_start=1038
  _SUBSCRIPTIONMESSAGE._serialized_end=1115
  _MQQUEUENAME._serialized_start=1117
  _MQQUEUENAME._serialized_end=1150
  _COLINKINTERNALTASKIDWITHKEYPATH._serialized_start=1152
  _COLINKINTERNALTASKIDWITHKEYPATH._serialized_end=1220
  _COLINKINTERNALTASKIDLIST._serialized_start=1222
  _COLINKINTERNALTASKIDLIST._serialized_end=1322
  _COLINK._serialized_start=1325
  _COLINK._serialized_end=2096
# @@protoc_insertion_point(module_scope)
