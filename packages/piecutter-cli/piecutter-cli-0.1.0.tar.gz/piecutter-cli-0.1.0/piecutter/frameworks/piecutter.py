"""Write piecutter project-wide files"""


def write_makefile() -> str:
    """Writes the project Makefile.

    Returns:
        str: Makefile string content.
    """
    return "\n".join((""))


def write_requirements_txt_file() -> str:
    """
    Writes the requirements.txt file with minimal required
    packages.

    Returns:
        str: String content of requirements.txt
    """
    return "\n".join(
        ("starlette==0.20.4", "starlette-authlib==0.1.11", "bentoml==1.0.0rc3")
    )


def write_readme_file() -> str:
    """Writes the project's README.md file

    Returns:
        str: String README.md content.
    """
    return "\n".join(
        (
            "# Piecutter-based Project Template",
            "This README.md file is automatically generated by `piecutter-cli` to describe your project's structure.",
            " ",
            "## Project Organization",
            "------------",
            "    ├── Makefile",
            "    ├── README.md",
            "    ├── requirements.txt",
            "    ├── data",
            "    │   ├── raw",
            "    │   ├── processed",
            "    │   ├── finalized",
            "    ├── notebooks",
            "    ├── references",
            "    ├── results",
            "    │   ├── figures",
            "    │   ├── models",
            "    │   ├── tables",
            "    ├── tests",
            "--------",
            " ",
            '<small>Project based on <a href="https://github.com/g0nz4rth/piecutter-cli" target="_blank">Piecutter CLI.</a></small>',
        )
    )


def write_test_predict_file() -> str:
    """Writes the predict test file.

    Returns:
        str: Makefile string content.
    """
    return "\n".join((""))


def write_test_train_file() -> str:
    """Writes the train test file.

    Returns:
        str: Makefile string content.
    """
    return "\n".join((""))
