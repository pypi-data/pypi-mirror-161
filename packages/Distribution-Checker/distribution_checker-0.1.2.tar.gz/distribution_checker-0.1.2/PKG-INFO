Metadata-Version: 2.1
Name: Distribution_Checker
Version: 0.1.2
Summary: Python Distribution Checker for Pandas datas using Scipy package
Project-URL: Homepage, https://github.com/amirhr098/Distribution-Checker
Project-URL: Bug Tracker, https://github.com/amirhr098/Distribution-Checker/issues
Author-email: Amir Hosein Rasouli <amirhr098@yahoo.com>
License: MIT License
        
        Copyright (c) 2022 amirhr098
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# Distribution-Checker
Python Distribution Checker for datas using Scipy package

## Installation
```bash
pip install Distribution_Checker
```

## Usage
```python
from Distribution_Checker import Dist_Checker
import pandas as pd

# Load sample dataset
data = pd.read_csv('weight-height.csv')

# verbose=1 prints the log while fitting and verbose=0 doesn't
p = Dist_Checker(verbose=1)
p = p.fit(data)

# After fitting, you can get distribution sorted by Sum of Squered Error that fit your data, so the first distribution is the distribution that is closer to your data
p.get_distributions()

# You can also plot distributions and your data to see this visualy. top=10 means that you want to plot top 10 distributions that match your data
p.plot(top=10)
```
Output plot from [weight-height.csv](https://github.com/amirhr098/Distribution-Checker/files/9228716/weight-height.csv) DataFrame
![image](https://user-images.githubusercontent.com/95343201/182023160-48c8b978-6f71-433e-8f57-40965ed5ce35.png)

## Distributions list
```
            alpha, anglit, arcsine, argus, beta, betaprime, bradford,
            burr, burr12, cauchy, chi, chi2, cosine, crystalball,
            dgamma, dweibull, erlang, expon, exponnorm, exponweib,
            exponpow, f, fatiguelife, fisk, foldcauchy, foldnorm,
            genlogistic, gennorm, genpareto,weibull_max, wrapcauchy,
            genexpon, genextreme, gausshyper, gamma, gengamma, genhalflogistic,
            geninvgauss, gilbrat, gompertz, gumbel_r, gumbel_l, halfcauchy,
            halflogistic, halfnorm, halfgennorm, hypsecant, invgamma, invgauss,
            invweibull, johnsonsb, johnsonsu, kappa4, kappa3, ksone, kstwo,
            kstwobign, laplace, levy, levy_l, logistic, loggamma,
            loglaplace, lognorm, loguniform, lomax, maxwell, mielke, moyal,
            nakagami, norm, norminvgauss, pareto, pearson3,
            powerlaw, powerlognorm, powernorm, rdist, rayleigh, rice, recipinvgauss,
            semicircular, skewnorm, t, trapz, triang, truncexpon, truncnorm,
            tukeylambda, uniform, vonmises, vonmises_line, wald, weibull_min
```
---
If any problem was founded, feel free to inform me :)