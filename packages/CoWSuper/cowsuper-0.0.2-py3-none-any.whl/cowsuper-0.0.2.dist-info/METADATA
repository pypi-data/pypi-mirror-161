Metadata-Version: 2.1
Name: CoWSuper
Version: 0.0.2
Summary: A tool that produces labels using weakly supervised learning with constraint-based methods.
Project-URL: Homepage, https://github.com/jianhui-chen/CoWSuper
Author-email: Bert Huang <bert@cs.tufts.edu>
License: MIT License
        
        Copyright (c) 2022 Bert Huang
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# Weakly-Supervised-Learning
This is a package that produces labels using weakly supervised learning with constraint-based methods.

The package contains 2 algorithms, Data Consistent Weak Supervision (DCWS) and Constrained Label Learning (CLL), 
that are contains code for the following papers

    * Constrained Labeling for Weakly Supervised Learning
    * Data Consistency for Weakly Supervised Learning

If you use this work in an academic study, please cite our paper

# Requirements

The library is tested in Python 3.6 and 3.7. 

Its main requirements are Tensorflow and numpy. 

Scikit-learn is required to run the experiments.

# Examples

We have provided a run_experiment file as an example on both algorithms, along the real datasets. They can all be found under the examples folder.

# Logging

Logging is done via TensorBoard. The suggested storage format for each run is by the date/time the expirment was started, and then by dataset, and then by algorithm. Use:

tensorboard --logdir=logs/data_and_time/data_set/algorithm

Example: 

tensorboard --logdir=logs/2021_07_28-05:50:52_PM/breast-cancer/CLL

Enjoy!
