# coding: utf-8

"""
    Foxtail Trainer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import foxtail_trainer_api
from foxtail_trainer_api.models.ml_models_with_training_results_dto import MLModelsWithTrainingResultsDto  # noqa: E501
from foxtail_trainer_api.rest import ApiException

class TestMLModelsWithTrainingResultsDto(unittest.TestCase):
    """MLModelsWithTrainingResultsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MLModelsWithTrainingResultsDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = foxtail_trainer_api.models.ml_models_with_training_results_dto.MLModelsWithTrainingResultsDto()  # noqa: E501
        if include_optional :
            return MLModelsWithTrainingResultsDto(
                id = '0', 
                name = '0', 
                model_type = 'Xgboost', 
                data_set_url = '0', 
                status = 'Created', 
                download_url = '0', 
                custom_model_hyperparameters = [
                    foxtail_trainer_api.models.custom_model_hyperparameter_with_model_dto.CustomModelHyperparameterWithModelDto(
                        id = '0', 
                        name = '0', 
                        value = '0', )
                    ], 
                training_result = foxtail_trainer_api.models.training_result_with_model_dto.TrainingResultWithModelDto(
                    id = '0', 
                    training_time_seconds = 1.337, 
                    training_metrics = [
                        foxtail_trainer_api.models.metric_dto_with_model.MetricDtoWithModel(
                            id = '0', 
                            metric_type = 'MAE', 
                            value = 1.337, )
                        ], 
                    validation_metrics = [
                        foxtail_trainer_api.models.metric_dto_with_model.MetricDtoWithModel(
                            id = '0', 
                            value = 1.337, )
                        ], 
                    test_metrics = [
                        foxtail_trainer_api.models.metric_dto_with_model.MetricDtoWithModel(
                            id = '0', 
                            value = 1.337, )
                        ], )
            )
        else :
            return MLModelsWithTrainingResultsDto(
        )

    def testMLModelsWithTrainingResultsDto(self):
        """Test MLModelsWithTrainingResultsDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
