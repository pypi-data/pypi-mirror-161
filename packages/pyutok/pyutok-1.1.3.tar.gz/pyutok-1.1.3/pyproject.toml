[tool.poetry]
name = "pyutok"
version = "1.1.3"
description = "Inspired by a tool I can not find anymore on the internet: utok 1.5. I use it to clean up path settings in large shell script configuration setups."
packages = [{ include = "utok.py" }]
authors = ["Berthold HÃ¶llmann <berhoel@gmail.com>"]
license = "MIT"
repository = "https://gitlab.com/berhoel/python/pyutok.git"
homepage = "https://python.xn--hllmanns-n4a.de/utok/"
documentation = "https://python.xn--hllmanns-n4a.de/utok/"
readme = "README.rst"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: System Administrators",
  "Operating System :: POSIX",
  "Topic :: System :: Shells",
  "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = "^3.7.2"

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
pytest-cov = "*"
pytest-runner = "*"
pytest-cache = "*"
pytest-sugar = "*"
pytest-isort = "*"
tox = "*"
pdbpp = "*"
pytest-mock = "*"
xdoctest = "*"
berhoel-sphinx-settings = {git = "https://gitlab.com/berhoel/python/berhoel-sphinx-settings.git", rev = "main"}
sphinx-argparse = "^0.3.1"
black = "*"
flake8 = "^3.8.2"
pylint = "*"
rope = ">0.17.0"
urllib3 = "*"

[tool.poetry.scripts]
utok = 'utok:main'

[tool.isort]
multi_line_output = 3
dedup_headings = true
include_trailing_comma = true
indent = '    '
float_to_top = true
namespace_packages = ['berhoel']
force_grid_wrap = 0
balanced_wrapping = true
use_parentheses = true
length_sort = true
line_length = 88
combine_as_imports = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
import_heading_stdlib = 'Standard library imports.'
import_heading_thirdparty = 'Third party library imports.'
import_heading_firstparty = 'First party library imports.'
import_heading_localfolder = 'Local library imports.'
default_section = "THIRDPARTY"
known_first_party = ["berhoel"]
known_third_party = [
    "pytest",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py37,py38,py39,py310
#,py311

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest {posargs}
"""

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules --ff --pdb -s --cov=. --cov-report=term --cov-report=html --cov-branch"
testpaths = ["."]

[flake8]
max-line-length = 88

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
