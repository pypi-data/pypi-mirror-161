---
kind: Pod
apiVersion: v1
metadata:
  name: haproxy
  namespace: openshift-kcli-infra
  creationTimestamp:
  deletionGracePeriodSeconds: 65
  labels:
    app: kcli-haproxy
spec:
  volumes:
  - name: conf-dir
    hostPath:
      path: "/etc/kubernetes"
  - name: run-dir
    empty-dir: {}
  - name: kubeconfigvarlib
    mountPath: "/var/lib/kubelet"
  initContainers:
  - name: haproxy-add-hosts
    securityContext:
      privileged: true
    image: {{ registry }}/karmab/kubectl:{{ arch_tag }}
    command:
    - "/bin/sh"
    - "-c"
    - |
      #/bin/sh
      export KUBECONFIG=/var/lib/kubelet/kubeconfig
      echo {{ api_ip }} api-int.{{cluster }}.{{ domain }} >> /etc/hosts
      kubectl get node --no-headers -o wide | awk '{print $6" "$1 }' >> /etc/hosts
    resources: {}
    volumeMounts:
    - name: kubeconfigvarlib
      mountPath: "/var/lib/kubelet"
  containers:
  - name: haproxy
    image: {{ disconnected_url if disconnected_url != None else 'quay.io' }}/karmab/haproxy:{{ arch_tag }}
    args:
    - "-W"
    - "-f"
    - "/etc/haproxy/haproxy.cfg"
    - "-db"
    - "-S"
    - "/var/run/haproxy/haproxy-master.sock,level,admin"
    resources:
      requests:
        cpu: 150m
        memory: 512Mi
    volumeMounts:
    - name: conf-dir
      mountPath: "/etc/haproxy"
    - name: run-dir
      mountPath: "/var/run/haproxy"
    terminationMessagePolicy: FallbackToLogsOnError
    imagePullPolicy: IfNotPresent
  hostNetwork: true
  tolerations:
  - operator: Exists
  priorityClassName: system-node-critical
status: {}
