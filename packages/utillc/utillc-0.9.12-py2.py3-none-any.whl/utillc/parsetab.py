
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSCOLONleftTIMESDIVIDErightUMINUSCOLON COMMA DIVIDE DIVIDE2 DOT EKON EKOT EKOX EQUALS FLOAT LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACKET RPAREN STRING TIMEStop : expressionstop : EKON expressionstop : EKOX expressionstop : EKOT expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression EQUALS expression\n                  | expression DIVIDE2 expression\n                  | expression DIVIDE expression name : expression DOT dot_namesexpression : MINUS expression %prec UMINUSexpression : LPAREN expressions RPAREN\n                  | expression LBRACKET expressionsBE RBRACKET\n                  | name LPAREN expressionsV RPAREN\n    expression : NUMBERexpression : FLOATexpression : nameexpression : STRINGdot_names : NAMEdot_names : dot_names DOT NAMEexpressionsBE : expressionsBE : expressionsBEE COMMA expressionsBEexpressionsBE : expressionsBEEexpressionsBEE : expressionsBEE : expressionexpressionsBEE : COLONexpressionsBEE : expression COLON expressionsBEEexpressionsV : expressionsV : expressions name : NAME'
    
_lr_action_items = {'EKON':([0,],[3,]),'EKOX':([0,],[4,]),'EKOT':([0,],[5,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,40,41,42,45,46,47,49,52,],[7,7,7,7,19,7,7,-20,-18,-19,-21,-33,7,7,7,7,7,7,7,7,-14,7,19,-7,-8,-9,19,19,-12,19,-13,-22,-15,7,-16,7,-17,-23,]),'LPAREN':([0,3,4,5,7,8,9,13,14,18,19,20,21,22,23,24,28,40,41,45,47,52,],[8,8,8,8,8,8,28,-33,8,8,8,8,8,8,8,8,8,-13,-22,8,8,-23,]),'NUMBER':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'STRING':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NAME':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,25,28,45,47,48,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,41,13,13,13,52,]),'$end':([1,2,6,9,10,11,12,13,15,16,17,26,29,30,31,32,33,34,35,40,41,42,46,49,52,],[0,-1,-5,-20,-18,-19,-21,-33,-2,-3,-4,-14,-6,-7,-8,-9,-10,-11,-12,-13,-22,-15,-16,-17,-23,]),'COMMA':([2,6,9,10,11,12,13,15,16,17,24,26,27,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,46,47,49,50,52,],[14,-5,-20,-18,-19,-21,-33,14,14,14,-27,-14,14,-6,-7,-8,-9,-10,-11,-12,-28,47,-29,-13,-22,-15,14,-27,-16,-27,-17,-30,-23,]),'RPAREN':([6,9,10,11,12,13,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,46,49,52,],[-5,-20,-18,-19,-21,-33,-14,42,-31,-6,-7,-8,-9,-10,-11,-12,-13,-22,-15,49,-32,-16,-17,-23,]),'PLUS':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[18,-20,-18,-19,-21,-33,-14,18,-7,-8,-9,18,18,-12,18,-13,-22,-15,-16,-17,-23,]),'TIMES':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[20,-20,-18,-19,-21,-33,-14,20,20,20,-9,20,20,-12,20,-13,-22,-15,-16,-17,-23,]),'EQUALS':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[21,-20,-18,-19,-21,-33,-14,21,-7,-8,-9,21,21,-12,21,-13,-22,-15,-16,-17,-23,]),'DIVIDE2':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[22,-20,-18,-19,-21,-33,-14,22,-7,-8,-9,22,22,-12,22,-13,-22,-15,-16,-17,-23,]),'DIVIDE':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[23,-20,-18,-19,-21,-33,-14,23,23,23,-9,23,23,-12,23,-13,-22,-15,-16,-17,-23,]),'LBRACKET':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[24,-20,-18,-19,-21,-33,-14,24,-7,-8,-9,24,24,-12,24,-13,-22,-15,-16,-17,-23,]),'DOT':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,49,52,],[25,-20,-18,-19,-21,-33,-14,25,-7,-8,-9,25,25,-12,25,48,-22,-15,-16,-17,-23,]),'COLON':([9,10,11,12,13,24,26,30,31,32,33,34,35,36,40,41,42,45,46,47,49,52,],[-20,-18,-19,-21,-33,39,-14,-7,-8,-9,-10,-11,-12,45,-13,-22,-15,39,-16,39,-17,-23,]),'RBRACKET':([9,10,11,12,13,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,49,50,51,52,],[-20,-18,-19,-21,-33,-24,-14,-7,-8,-9,-10,-11,-12,-28,46,-26,-29,-13,-22,-15,-27,-16,-24,-17,-30,-25,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,3,4,5,8,28,],[2,15,16,17,27,44,]),'expression':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[6,6,6,6,26,6,29,30,31,32,33,34,35,36,6,36,36,]),'name':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expressionsBE':([24,47,],[37,51,]),'expressionsBEE':([24,45,47,],[38,50,38,]),'dot_names':([25,],[40,]),'expressionsV':([28,],[43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',134),
  ('top -> EKON expressions','top',2,'p_top_1','utillc.py',138),
  ('top -> EKOX expressions','top',2,'p_top_2','utillc.py',141),
  ('top -> EKOT expressions','top',2,'p_top_3','utillc.py',145),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',149),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',153),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',158),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',159),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',160),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','utillc.py',161),
  ('expression -> expression DIVIDE2 expression','expression',3,'p_expression_binop','utillc.py',162),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',163),
  ('name -> expression DOT dot_names','name',3,'p_expression_dot','utillc.py',167),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',171),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',177),
  ('expression -> expression LBRACKET expressionsBE RBRACKET','expression',4,'p_expression_group','utillc.py',178),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',179),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',189),
  ('expression -> FLOAT','expression',1,'p_expression_float','utillc.py',193),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',197),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',201),
  ('dot_names -> NAME','dot_names',1,'p_dot_names_1','utillc.py',205),
  ('dot_names -> dot_names DOT NAME','dot_names',3,'p_dot_names_2','utillc.py',209),
  ('expressionsBE -> <empty>','expressionsBE',0,'p_expressionsBE_1','utillc.py',214),
  ('expressionsBE -> expressionsBEE COMMA expressionsBE','expressionsBE',3,'p_expressionsBE_2','utillc.py',218),
  ('expressionsBE -> expressionsBEE','expressionsBE',1,'p_expressionsBE_3','utillc.py',222),
  ('expressionsBEE -> <empty>','expressionsBEE',0,'p_expressionsBEE_0','utillc.py',226),
  ('expressionsBEE -> expression','expressionsBEE',1,'p_expressionsBEE_1','utillc.py',229),
  ('expressionsBEE -> COLON','expressionsBEE',1,'p_expressionsBEE_2','utillc.py',232),
  ('expressionsBEE -> expression COLON expressionsBEE','expressionsBEE',3,'p_expressionsBEE_3','utillc.py',235),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',240),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',244),
  ('name -> NAME','name',1,'p_name_1','utillc.py',252),
]
