{"data_mtime": 1658302586, "dep_lines": [11, 12, 13, 14, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "dep_prios": [5, 5, 5, 5, 5, 5, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 30, 30, 30], "dependencies": ["hypothesis.internal.compat", "hypothesis.internal.conjecture.data", "hypothesis.internal.conjecture.engine", "hypothesis.internal.conjecture.junkdrawer", "hypothesis.internal.conjecture.pareto", "builtins", "warnings", "typing", "sys", "collections", "itertools", "types", "html", "traceback", "re", "pprint", "copy", "string", "os", "abc", "enum", "typing_extensions"], "hash": "43a263316c6b9d854248f4cf0d1baa79744a6be29d80d6da57eb476ddc45ed89", "id": "hypothesis.internal.conjecture.optimiser", "ignore_all": true, "interface_hash": "a33c25c214536d98b2601e39a91162347a591a15b2827c4fef4e420185d2f808", "mtime": 1658142298, "options": {"allow_redefinition": false, "allow_untyped_globals": false, "always_false": [], "always_true": [], "bazel": false, "check_untyped_defs": false, "disallow_any_decorated": false, "disallow_any_explicit": false, "disallow_any_expr": false, "disallow_any_generics": false, "disallow_any_unimported": false, "disallow_incomplete_defs": false, "disallow_subclassing_any": false, "disallow_untyped_calls": false, "disallow_untyped_decorators": false, "disallow_untyped_defs": false, "follow_imports": "silent", "follow_imports_for_stubs": false, "ignore_errors": false, "ignore_missing_imports": true, "implicit_reexport": true, "local_partial_types": false, "mypyc": false, "no_implicit_optional": false, "platform": "darwin", "plugins": [], "show_none_errors": true, "strict_concatenate": false, "strict_equality": false, "strict_optional": true, "strict_optional_whitelist": null, "warn_no_return": true, "warn_return_any": false, "warn_unreachable": false, "warn_unused_ignores": false}, "path": "/opt/homebrew/Cellar/pdm/1.15.3/libexec/lib/python3.10/site-packages/hypothesis/internal/conjecture/optimiser.py", "plugin_data": null, "size": 7342, "suppressed": [], "version_id": "0.961"}