{"version":3,"sources":["pages/RunDetail/RunOverviewTab/components/GitInfoCard/index.tsx","pages/RunDetail/RunOverviewTab/components/MetricsCard/RunOverviewTabMetricsCard.tsx","pages/RunDetail/RunOverviewTab/components/Packages/RunOverviewTabPackagesCard.tsx","pages/RunDetail/RunOverviewTab/components/ParamsCard/RunOverviewTabParamsCard.tsx","pages/RunDetail/RunOverviewTab/components/RunOverviewSidebar/RunOverviewSidebar.tsx","pages/RunDetail/RunOverviewTab/components/CLIArgumentsCard/RunOverviewTabCLIArgumentsCard.tsx","pages/RunDetail/RunOverviewTab/components/EnvVariablesCard/RunOverviewTabEnvVariablesCard.tsx","pages/RunDetail/RunOverviewTab/RunOverviewTab.tsx","pages/RunDetail/RunOverviewTab/index.tsx","components/CopyToClipBoard/CopyToClipBoard.tsx","components/CodeBlock/CodeBlock.tsx","pages/RunDetail/hooks/useRunMetricsBatch.tsx"],"names":["GitInfoCard","props","title","className","weight","tint","size","color","name","fontSize","data","branch","commit","author","hash","moment","timestamp","format","DATE_GIT_COMMIT","React","memo","RunOverviewTabMetricsCard","isLoading","runBatch","type","tableData","useMemo","map","index","values","context","key","isSystemMetric","formatSystemMetricName","value","formatValue","_","last","tableColumns","dataKey","length","width","cellRenderer","cellData","isEmpty","isNil","monospace","label","COLORS","contextToString","ErrorBoundary","Card","dataListProps","searchableKeys","calcTableHeight","illustrationConfig","displayName","RunOverviewTabPackagesCard","packages","isRunInfoLoading","Object","entries","BusyLoaderWrapper","height","RunOverviewTabParamsCard","runParams","params","hasOwnProperty","omit","getObjectPaths","path","getValue","flexGrow","RunOverviewSidebar","info","traces","runHash","sidebarRef","overviewSectionRef","overviewSectionContentRef","setContainerHeight","url","useRouteMatch","descriptionBoxRef","useRef","useState","seeMoreDescription","setSeeMoreDescription","descriptionHeight","setDescriptionHeight","useEffect","current","offsetHeight","childNodes","insightsList","split","slice","join","systemMetricsLength","metric","filter","m","startsWith","notes","distributions","images","audios","texts","figures","ref","onScroll","e","scrollTo","target","scrollTop","component","creation_time","processDurationTime","end_time","Date","now","Divider","to","withOnlyIcon","classNames","showAll","hasMore","description","onClick","tags","tag","RunOverviewTabCLIArgumentsCard","cliArguments","code","CodeBlock","RunOverviewTabEnvVariablesCard","envVariables","RunOverviewTab","runData","containerHeight","useRunMetricsBatch","runMetricsBatch","runTraces","analytics","ANALYTICS_EVENT_KEYS","runDetails","tabs","tabView","cardsData","systemParams","__system_params","runSystemBatch","arguments","env_variables","gitInfo","git_info","style","IllustrationBlock","isRunBatchLoading","runInfo","CopyToClipboard","contentRef","showSuccessDelay","showCopiedIcon","setShowCopiedIcon","setTimeout","onCopy","useCallback","navigator","clipboard","writeText","innerText","trim","then","catch","Tooltip","language","monaco","useMonaco","preRef","monacoConfig","getMonacoConfig","theme","config","colors","editor","colorizeElement","defineTheme","setTheme","data-lang","CopyToClipBoard","runsBatchRequestRef","runDetailAppModel","getRunMetricsBatch","call","abort"],"mappings":"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","file":"static/js/RunOverviewTab.js?version=1d5e6a5aa0bde103d367","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport { Text, Card, Icon } from 'components/kit';\n\nimport { DATE_GIT_COMMIT } from 'config/dates/dates';\n\nimport { IGitInfoCardProps } from './GitInfoCard';\n\nimport './GitInfoCard.scss';\n\nfunction GitInfoCard(props: IGitInfoCardProps) {\n  return (\n    <Card title='Git Info Card' className='GitInfoCard RunOverviewTab__cardBox'>\n      <div className='InfoSection ScrollBar__hidden flex fjb'>\n        <div className='InfoCard flex fdc'>\n          <Text\n            className='InfoCardLabel'\n            weight={400}\n            tint={50}\n            size={12}\n            color='primary'\n          >\n            Branch\n          </Text>\n          <div className='InfoCardValue flex fac'>\n            <Icon name='branch' fontSize={14} />\n            <Text\n              className='InfoCardValueText'\n              weight={500}\n              size={12}\n              color='primary'\n            >\n              {props.data?.branch}\n            </Text>\n          </div>\n        </div>\n        <div className='InfoCard flex fdc'>\n          <Text\n            className='InfoCardLabel'\n            weight={400}\n            tint={50}\n            size={12}\n            color='primary'\n          >\n            Author\n          </Text>\n          <div className='InfoCardValue flex fac'>\n            <Icon name='avatar' fontSize={14} />\n            <Text\n              className='InfoCardValueText'\n              weight={500}\n              size={12}\n              color='primary'\n            >\n              {props.data.commit?.author}\n            </Text>\n          </div>\n        </div>\n        <div className='InfoCard flex fdc'>\n          <Text\n            className='InfoCardLabel'\n            weight={400}\n            tint={50}\n            size={12}\n            color='primary'\n          >\n            Hash\n          </Text>\n          <div className='InfoCardValue flex fac'>\n            <Icon name='hash' fontSize={14} />\n            <Text\n              className='InfoCardValueText'\n              weight={500}\n              size={12}\n              color='primary'\n            >\n              {props.data.commit?.hash}\n            </Text>\n          </div>\n        </div>\n        <div className='InfoCard flex fdc'>\n          <Text\n            className='InfoCardLabel'\n            weight={400}\n            tint={50}\n            size={12}\n            color='primary'\n          >\n            Timestamp\n          </Text>\n          <div className='InfoCardValue flex fac'>\n            <Icon name='time' fontSize={14} />\n            <Text\n              className='InfoCardValueText'\n              weight={500}\n              size={12}\n              color='primary'\n            >\n              {`${moment(props.data.commit?.timestamp).format(\n                DATE_GIT_COMMIT,\n              )}`}\n            </Text>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default React.memo(GitInfoCard);\n","import React from 'react';\nimport _ from 'lodash-es';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport Card from 'components/kit/Card/Card';\nimport { Badge, Text } from 'components/kit';\n\nimport COLORS from 'config/colors/colors';\n\nimport contextToString from 'utils/contextToString';\nimport { isSystemMetric } from 'utils/isSystemMetric';\nimport { formatSystemMetricName } from 'utils/formatSystemMetricName';\nimport { formatValue } from 'utils/formatValue';\n\nfunction RunOverviewTabMetricsCard({\n  isLoading,\n  runBatch,\n  type,\n}: {\n  isLoading: boolean;\n  runBatch: any;\n  type: 'metric' | 'systemMetric';\n}) {\n  const tableData = React.useMemo(() => {\n    if (runBatch) {\n      return runBatch.map(({ name, values, context }: any, index: number) => {\n        return {\n          key: index,\n          name: isSystemMetric(name) ? formatSystemMetricName(name) : name,\n          value: formatValue(_.last(values)),\n          context: context,\n        };\n      });\n    }\n    return [];\n  }, [runBatch]);\n\n  const tableColumns = React.useMemo(\n    () => [\n      {\n        dataKey: 'name',\n        key: 'name',\n        title: (\n          <Text weight={600} size={14} tint={100}>\n            Name\n            <Text\n              weight={500}\n              size={14}\n              tint={50}\n              className='RunOverviewTab__cardBox__tableTitleCount'\n            >\n              ({runBatch?.length})\n            </Text>\n          </Text>\n        ),\n        width: '33.3%',\n        cellRenderer: ({ cellData }: any) => <p title={cellData}>{cellData}</p>,\n      },\n      {\n        dataKey: 'context',\n        key: 'context',\n        title: 'Context',\n        width: '33.3%',\n        cellRenderer: ({ cellData }: any) =>\n          !_.isEmpty(cellData) && !_.isNil(cellData) ? (\n            <Badge\n              monospace\n              size='small'\n              color={COLORS[0][0]}\n              label={contextToString(cellData) || ''}\n              className='RunOverviewTab__cardBox__badge'\n            />\n          ) : (\n            <Badge\n              monospace\n              size='small'\n              color={'#F8FAFD'}\n              label={'Empty Context'}\n              className='RunOverviewTab__cardBox__badge emptyContext'\n            />\n          ),\n      },\n      {\n        dataKey: 'value',\n        key: 'value',\n        title: 'Last Value',\n        width: '33.3%',\n        cellRenderer: ({ cellData }: any) => (\n          <p className='tar' title={cellData}>\n            {cellData}\n          </p>\n        ),\n      },\n    ],\n    [runBatch],\n  );\n\n  return (\n    <ErrorBoundary>\n      <Card\n        title={type === 'metric' ? 'Metrics' : 'System Metrics'}\n        // subtitle={\n        //   type === 'metric'\n        //     ? 'Little information about Metrics'\n        //     : 'Little information about System Metrics'\n        // }\n        className='RunOverviewTab__cardBox'\n        dataListProps={{\n          isLoading: isLoading || !runBatch,\n          searchableKeys: ['name', 'value'],\n          tableColumns,\n          tableData,\n          calcTableHeight: true,\n          illustrationConfig: {\n            size: 'large',\n            title: 'No Results',\n          },\n        }}\n      />\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTabMetricsCard.displayName = 'RunOverviewTabMetricsCard';\n\nexport default React.memo(RunOverviewTabMetricsCard);\n","import React from 'react';\n\nimport { Card, Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport { ICardProps } from 'components/kit/Card/Card.d';\n\nimport { formatValue } from 'utils/formatValue';\n\nimport { IRunOverviewTabPackagesCardProps } from './RunOverviewTabPackagesCard.d';\n\nfunction RunOverviewTabPackagesCard({\n  packages,\n  isRunInfoLoading,\n}: IRunOverviewTabPackagesCardProps) {\n  const tableData = React.useMemo(\n    () =>\n      Object.entries(packages || {}).map(([key = '', value], index) => ({\n        key: index,\n        name: key,\n        value: formatValue(value),\n      })),\n    [packages],\n  );\n  const dataListProps = React.useMemo(\n    (): ICardProps['dataListProps'] => ({\n      tableColumns: [\n        {\n          dataKey: 'name',\n          key: 'name',\n          width: '50%',\n          title: (\n            <Text weight={600} size={14} tint={100}>\n              Packages\n              <Text\n                weight={600}\n                size={14}\n                tint={50}\n                className='RunOverviewTab__cardBox__tableTitleCount'\n              >\n                ({tableData.length})\n              </Text>\n            </Text>\n          ),\n          cellRenderer: ({ cellData }: any) => (\n            <p title={cellData}>{cellData}</p>\n          ),\n        },\n        {\n          dataKey: 'value',\n          key: 'value',\n          width: '50%',\n          title: 'Value',\n          cellRenderer: ({ cellData }: any) => (\n            <p title={cellData}>{cellData}</p>\n          ),\n        },\n      ],\n      tableData,\n      illustrationConfig: {\n        size: 'large',\n        title: 'No Results',\n      },\n    }),\n    [tableData],\n  );\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper isLoading={isRunInfoLoading} height='100%'>\n        <Card\n          title='Packages'\n          className='RunOverviewTab__cardBox'\n          dataListProps={dataListProps}\n        />\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTabPackagesCard.displayName = 'RunOverviewTabPackagesCard';\n\nexport default React.memo<IRunOverviewTabPackagesCardProps>(\n  RunOverviewTabPackagesCard,\n);\n","import React from 'react';\nimport _ from 'lodash-es';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport Card from 'components/kit/Card/Card';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport { Text } from 'components/kit';\n\nimport getObjectPaths from 'utils/getObjectPaths';\nimport { formatValue } from 'utils/formatValue';\nimport { getValue } from 'utils/helper';\n\nfunction RunOverviewTabParamsCard({ runParams, isRunInfoLoading }: any) {\n  const tableData = React.useMemo(() => {\n    const params = runParams.hasOwnProperty('__system_params')\n      ? _.omit(runParams, '__system_params')\n      : runParams;\n    const paths = getObjectPaths(params, params);\n    const resultTableList = paths.map((path, index) => {\n      return {\n        key: index,\n        name: path,\n        value: formatValue(getValue(params, path)),\n      };\n    });\n    return resultTableList || [];\n  }, [runParams]);\n\n  const tableColumns = React.useMemo(\n    () => [\n      {\n        dataKey: 'name',\n        key: 'name',\n        title: (\n          <Text weight={600} size={14} tint={100}>\n            Name\n            <Text\n              weight={600}\n              size={14}\n              tint={50}\n              className='RunOverviewTab__cardBox__tableTitleCount'\n            >\n              ({tableData.length})\n            </Text>\n          </Text>\n        ),\n        width: '50%',\n        cellRenderer: ({ cellData }: any) => <p title={cellData}>{cellData}</p>,\n      },\n      {\n        dataKey: 'value',\n        key: 'value',\n        title: 'Value',\n        width: 0,\n        flexGrow: 1,\n        cellRenderer: ({ cellData }: any) => <p title={cellData}>{cellData}</p>,\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [runParams, tableData],\n  );\n\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper\n        isLoading={isRunInfoLoading || !runParams}\n        className='runDetailParamsTabLoader'\n        height='100%'\n      >\n        <Card\n          title='Run Params'\n          // subtitle='Little information about Params'\n          className='RunOverviewTab__cardBox'\n          dataListProps={{\n            tableColumns,\n            tableData,\n            calcTableHeight: true,\n            illustrationConfig: {\n              size: 'large',\n              title: 'No Results',\n            },\n          }}\n        />\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTabParamsCard.displayName = 'RunOverviewTabParamsCard';\n\nexport default React.memo(RunOverviewTabParamsCard);\n","import React from 'react';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { Divider } from '@material-ui/core';\n\nimport { Badge, Button, Icon, Text } from 'components/kit';\n\nimport { processDurationTime } from 'utils/processDurationTime';\n\nimport { IRunOverviewSidebarProps } from './RunOverviewSidebar.d';\n\nimport './RunOverviewSidebar.scss';\n\nconst CLOSED_DESCRIPTION_BOX_MAX_HEIGHT = 72;\nconst SIDEBAR_TOP_SPACE = 40;\n\nfunction RunOverviewSidebar({\n  info,\n  traces,\n  runHash,\n  sidebarRef,\n  overviewSectionRef,\n  overviewSectionContentRef,\n  setContainerHeight,\n}: IRunOverviewSidebarProps) {\n  const { url } = useRouteMatch();\n  const descriptionBoxRef = React.useRef<HTMLElement | any>(null);\n  const [seeMoreDescription, setSeeMoreDescription] =\n    React.useState<boolean>(false);\n  const [descriptionHeight, setDescriptionHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (\n      overviewSectionContentRef?.current?.offsetHeight >\n      sidebarRef?.current?.childNodes[0].offsetHeight\n    ) {\n      setContainerHeight(overviewSectionContentRef?.current?.offsetHeight);\n    } else {\n      setContainerHeight(\n        sidebarRef?.current?.childNodes[0].offsetHeight + SIDEBAR_TOP_SPACE,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [descriptionHeight]);\n\n  const insightsList = React.useMemo(() => {\n    const path = url.split('/').slice(0, -1).join('/');\n    const systemMetricsLength: number =\n      traces.metric.filter((m) => m.name.startsWith('__system__')).length || 0;\n    return [\n      {\n        name: 'Notes',\n        path: `${path}/notes`,\n        value: info.notes || 0,\n      },\n      {\n        name: 'Metrics',\n        path: `${path}/metrics`,\n        value: traces?.metric?.length - systemMetricsLength || 0,\n      },\n      {\n        name: 'System',\n        path: `${path}/system`,\n        value: systemMetricsLength,\n      },\n      {\n        name: 'Distributions',\n        path: `${path}/distributions`,\n        value: traces?.distributions?.length || 0,\n      },\n      {\n        name: 'Images',\n        path: `${path}/images`,\n        value: traces?.images?.length || 0,\n      },\n      {\n        name: 'Audios',\n        path: `${path}/audios`,\n        value: traces?.audios?.length || 0,\n      },\n      {\n        name: 'Texts',\n        path: `${path}/texts`,\n        value: traces?.texts?.length || 0,\n      },\n      {\n        name: 'Figures',\n        path: `${path}/figures`,\n        value: traces?.figures?.length || 0,\n      },\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [traces]);\n\n  function onContainerScroll(e: any) {\n    overviewSectionRef?.current?.scrollTo(0, e.target.scrollTop);\n  }\n\n  React.useEffect(() => {\n    setDescriptionHeight(descriptionBoxRef?.current?.offsetHeight);\n  }, [descriptionBoxRef?.current?.offsetHeight, seeMoreDescription]);\n\n  function onSeeMoreButtonClick() {\n    setSeeMoreDescription(!seeMoreDescription);\n  }\n\n  return (\n    <div\n      className='RunOverviewSidebar ScrollBar__hidden'\n      ref={sidebarRef}\n      onScroll={onContainerScroll}\n    >\n      <div className='RunOverviewSidebar__wrapper'>\n        <div className='RunOverviewSidebar__section RunOverviewSidebar__section__info'>\n          <Text weight={600} size={18} tint={100} component='h3'>\n            Information\n          </Text>\n          <div className='RunOverviewSidebar__section__info__listItem'>\n            <Icon name='calendar' />\n            <Text tint={70}>\n              {`${moment(info?.creation_time * 1000).format('DD MMMM YYYY')}`}\n            </Text>\n          </div>\n          <div className='RunOverviewSidebar__section__info__listItem'>\n            <Icon name='time' />\n            <Text tint={70}>\n              {`${moment(info?.creation_time * 1000).format('HH:MM A')}`}\n            </Text>\n          </div>\n          <div className='RunOverviewSidebar__section__info__listItem'>\n            <Icon name='duration' />\n            <Text tint={70}>\n              {processDurationTime(\n                info?.creation_time * 1000,\n                info?.end_time ? info?.end_time * 1000 : Date.now(),\n              )}\n            </Text>\n          </div>\n          <div className='RunOverviewSidebar__section__info__listItem'>\n            <Icon name='hash' />\n            <Text tint={70}>{runHash}</Text>\n          </div>\n        </div>\n        <Divider className='RunOverviewSidebar__section__Divider' />\n        <div className='RunOverviewSidebar__section RunOverviewSidebar__section__descriptionBox'>\n          <div className='RunOverviewSidebar__section__descriptionBox__header'>\n            <Text weight={600} size={18} tint={100} component='h3'>\n              Description\n            </Text>\n            <NavLink to={`${url.split('/').slice(0, -1).join('/')}/settings`}>\n              <Button withOnlyIcon size='small' color='secondary'>\n                <Icon name='edit'></Icon>\n              </Button>\n            </NavLink>\n          </div>\n\n          <div\n            className={classNames(\n              'RunOverviewSidebar__section__descriptionBox__description',\n              { showAll: seeMoreDescription },\n              {\n                hasMore:\n                  descriptionHeight >= CLOSED_DESCRIPTION_BOX_MAX_HEIGHT &&\n                  !seeMoreDescription,\n              },\n            )}\n            ref={descriptionBoxRef}\n          >\n            <Text tint={70}>{info?.description || 'No description'}</Text>\n          </div>\n          {descriptionHeight >= CLOSED_DESCRIPTION_BOX_MAX_HEIGHT && (\n            <div\n              className='RunOverviewSidebar__section__descriptionBox__seeMoreButtonBox'\n              onClick={onSeeMoreButtonClick}\n            >\n              <Text size={12} weight={600}>\n                {seeMoreDescription ? 'See less' : 'See more'}\n              </Text>\n            </div>\n          )}\n        </div>\n        {info.tags.length ? (\n          <div className='RunOverviewSidebar__section RunOverviewSidebar__section__tags'>\n            <Text weight={600} size={18} tint={100} component='h3'>\n              Tags{' '}\n              <Text component='span' tint={70} weight={400} size={18}>\n                ({info.tags.length})\n              </Text>\n            </Text>\n            <div className='RunOverviewSidebar__section__tags-list ScrollBar__hidden'>\n              {info.tags.map((tag) => (\n                <Badge color={tag.color} label={tag.name} key={tag.name} />\n              ))}\n            </div>\n          </div>\n        ) : null}\n        <Divider className='RunOverviewSidebar__section__Divider' />\n        <div className='RunOverviewSidebar__section RunOverviewSidebar__section__insights'>\n          <Text weight={600} size={18} tint={100} component='h3'>\n            Insights\n          </Text>\n          <div>\n            {insightsList.map(({ name, path, value }) => (\n              <NavLink\n                className='RunOverviewSidebar__NavLink'\n                key={path}\n                to={path}\n              >\n                <Text size={14}>{name}</Text>\n                <Text tint={70} size={14}>\n                  {value}\n                </Text>\n              </NavLink>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(RunOverviewSidebar);\n","import React from 'react';\n\nimport { Card } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\n\nimport { IRunOverviewTabCLIArgumentsCardProps } from './RunOverviewTabCLIArgumentsCard.d';\n\nimport './RunOverviewTabCLIArgumentsCard.scss';\n\nfunction RunOverviewTabCLIArgumentsCard({\n  cliArguments,\n  isRunInfoLoading,\n}: IRunOverviewTabCLIArgumentsCardProps) {\n  const code: string = React.useMemo(\n    () => (cliArguments || []).join(' '),\n    [cliArguments],\n  );\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper isLoading={isRunInfoLoading} height='100%'>\n        <Card\n          title='CLI Arguments'\n          className='RunOverviewTabCLIArgumentsCard RunOverviewTab__cardBox'\n        >\n          <CodeBlock code={code} />\n        </Card>\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTabCLIArgumentsCard.displayName = 'RunOverviewTabCLIArgumentsCard';\n\nexport default React.memo<IRunOverviewTabCLIArgumentsCardProps>(\n  RunOverviewTabCLIArgumentsCard,\n);\n","import React from 'react';\n\nimport { Card, Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport { ICardProps } from 'components/kit/Card/Card.d';\n\nimport { formatValue } from 'utils/formatValue';\n\nimport { IRunOverviewTabEnvVariablesCardProps } from './RunOverviewTabEnvVariablesCard.d';\n\nfunction RunOverviewTabEnvVariablesCard({\n  envVariables,\n  isRunInfoLoading,\n}: IRunOverviewTabEnvVariablesCardProps) {\n  const tableData = React.useMemo(\n    () =>\n      Object.entries(envVariables || {}).map(\n        ([key = '', value]: string[], index: number) => ({\n          key: index,\n          name: key,\n          value: formatValue(value),\n        }),\n      ),\n    [envVariables],\n  );\n  const dataListProps = React.useMemo(\n    (): ICardProps['dataListProps'] => ({\n      calcTableHeight: true,\n      tableColumns: [\n        {\n          dataKey: 'name',\n          key: 'name',\n          width: '50%',\n          title: (\n            <Text weight={600} size={14} tint={100}>\n              Env Variables\n              <Text\n                weight={600}\n                size={14}\n                tint={50}\n                className='RunOverviewTab__cardBox__tableTitleCount'\n              >\n                ({tableData.length})\n              </Text>\n            </Text>\n          ),\n          cellRenderer: ({ cellData }: any) => (\n            <p title={cellData}>{cellData}</p>\n          ),\n        },\n        {\n          dataKey: 'value',\n          key: 'value',\n          width: '50%',\n          title: 'Value',\n          cellRenderer: ({ cellData }: any) => (\n            <p title={cellData}>{cellData}</p>\n          ),\n        },\n      ],\n      tableData,\n      illustrationConfig: {\n        size: 'large',\n        title: 'No Results',\n      },\n    }),\n    [tableData],\n  );\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper isLoading={isRunInfoLoading} height='100%'>\n        <Card\n          title='Environment Variables'\n          className='RunOverviewTab__cardBox'\n          dataListProps={dataListProps}\n        />\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTabEnvVariablesCard.displayName = 'RunOverviewTabEnvVariablesCard';\n\nexport default React.memo<IRunOverviewTabEnvVariablesCardProps>(\n  RunOverviewTabEnvVariablesCard,\n);\n","import React from 'react';\nimport _ from 'lodash-es';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport IllustrationBlock from 'components/IllustrationBlock/IllustrationBlock';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport * as analytics from 'services/analytics';\n\nimport useRunMetricsBatch from '../hooks/useRunMetricsBatch';\n\nimport GitInfoCard from './components/GitInfoCard';\nimport RunOverviewTabMetricsCard from './components/MetricsCard/RunOverviewTabMetricsCard';\nimport RunOverviewTabPackagesCard from './components/Packages/RunOverviewTabPackagesCard';\nimport RunOverviewTabParamsCard from './components/ParamsCard/RunOverviewTabParamsCard';\nimport RunOverviewSidebar from './components/RunOverviewSidebar/RunOverviewSidebar';\nimport RunOverviewTabCLIArgumentsCard from './components/CLIArgumentsCard/RunOverviewTabCLIArgumentsCard';\nimport RunOverviewTabEnvVariablesCard from './components/EnvVariablesCard/RunOverviewTabEnvVariablesCard';\nimport { IRunOverviewTabProps } from './RunOverviewTab.d';\n\nimport './RunOverviewTab.scss';\n\nfunction RunOverviewTab({ runData, runHash }: IRunOverviewTabProps) {\n  const sidebarRef = React.useRef<HTMLElement | any>(null);\n  const overviewSectionRef = React.useRef<HTMLElement | any>(null);\n  const overviewSectionContentRef = React.useRef<HTMLElement | any>(null);\n  const [containerHeight, setContainerHeight] = React.useState<number>(0);\n\n  useRunMetricsBatch({\n    runBatch: runData.runMetricsBatch,\n    runTraces: runData.runTraces,\n    runHash,\n  });\n\n  React.useEffect(() => {\n    analytics.pageView(\n      ANALYTICS_EVENT_KEYS.runDetails.tabs['overview'].tabView,\n    );\n  }, []);\n\n  const cardsData: Record<any, any> = React.useMemo(() => {\n    const data: any = {};\n    const systemParams = runData?.runParams?.__system_params;\n    if (!_.isEmpty(runData?.runParams)) {\n      data.runParams = runData.runParams;\n    }\n    if (!_.isEmpty(runData?.runMetricsBatch)) {\n      data.runMetricsBatch = runData.runMetricsBatch;\n    }\n    if (!_.isEmpty(runData?.runSystemBatch)) {\n      data.runSystemBatch = runData.runSystemBatch;\n    }\n    if (systemParams) {\n      if (!_.isEmpty(systemParams.arguments)) {\n        data.cliArguments = systemParams.arguments;\n      }\n      if (!_.isEmpty(systemParams.env_variables)) {\n        data.envVariables = systemParams.env_variables;\n      }\n      if (!_.isEmpty(systemParams.packages)) {\n        data.packages = systemParams.packages;\n      }\n      if (!_.isEmpty(systemParams.packages)) {\n        data.gitInfo = systemParams.git_info;\n      }\n    }\n    return data;\n  }, [runData]);\n\n  function onContainerScroll(e: any) {\n    sidebarRef?.current?.scrollTo(0, e.target.scrollTop);\n  }\n\n  return (\n    <ErrorBoundary>\n      <section\n        className='RunOverviewTab'\n        ref={overviewSectionRef}\n        onScroll={onContainerScroll}\n      >\n        <div\n          className='RunOverviewTab__content'\n          ref={overviewSectionContentRef}\n          style={{ height: containerHeight }}\n        >\n          {_.isEmpty(cardsData) ? (\n            <IllustrationBlock size='large' title='No Results' />\n          ) : (\n            <>\n              {_.isEmpty(cardsData?.runParams) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabParamsCard\n                    runParams={cardsData?.runParams}\n                    isRunInfoLoading={runData?.isRunInfoLoading}\n                  />\n                </ErrorBoundary>\n              )}\n              {_.isEmpty(cardsData?.runMetricsBatch) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabMetricsCard\n                    isLoading={runData?.isRunBatchLoading}\n                    type='metric'\n                    runBatch={cardsData?.runMetricsBatch}\n                  />\n                </ErrorBoundary>\n              )}\n\n              {_.isEmpty(cardsData?.runSystemBatch) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabMetricsCard\n                    isLoading={runData?.isRunBatchLoading}\n                    type='systemMetric'\n                    runBatch={cardsData?.runSystemBatch}\n                  />\n                </ErrorBoundary>\n              )}\n              {_.isEmpty(cardsData.cliArguments) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabCLIArgumentsCard\n                    cliArguments={cardsData.cliArguments}\n                    isRunInfoLoading={runData?.isRunInfoLoading}\n                  />\n                </ErrorBoundary>\n              )}\n              {_.isEmpty(cardsData.envVariables) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabEnvVariablesCard\n                    envVariables={cardsData.envVariables}\n                    isRunInfoLoading={runData?.isRunInfoLoading}\n                  />\n                </ErrorBoundary>\n              )}\n              {_.isEmpty(cardsData.packages) ? null : (\n                <ErrorBoundary>\n                  <RunOverviewTabPackagesCard\n                    packages={cardsData.packages}\n                    isRunInfoLoading={runData?.isRunInfoLoading}\n                  />\n                </ErrorBoundary>\n              )}\n              {_.isEmpty(cardsData.gitInfo) ? null : (\n                <ErrorBoundary>\n                  <GitInfoCard data={cardsData.gitInfo} />\n                </ErrorBoundary>\n              )}\n            </>\n          )}\n        </div>\n        <ErrorBoundary>\n          <RunOverviewSidebar\n            sidebarRef={sidebarRef}\n            overviewSectionRef={overviewSectionRef}\n            overviewSectionContentRef={overviewSectionContentRef}\n            setContainerHeight={setContainerHeight}\n            runHash={runHash}\n            info={runData.runInfo}\n            traces={runData.runTraces}\n          />\n        </ErrorBoundary>\n      </section>\n    </ErrorBoundary>\n  );\n}\n\nRunOverviewTab.displayName = 'RunOverviewTab';\n\nexport default React.memo(RunOverviewTab);\n","import RunOverviewTab from './RunOverviewTab';\n\nexport default RunOverviewTab;\n","import React from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport { Button, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ICopyToClipBoardProps } from 'types/components/CopyToClipBoard/CopyToClipBoard';\n\nfunction CopyToClipboard({\n  contentRef,\n  showSuccessDelay = 1500,\n  className = '',\n}: ICopyToClipBoardProps): React.FunctionComponentElement<ICopyToClipBoardProps> {\n  const [showCopiedIcon, setShowCopiedIcon] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showCopiedIcon) {\n      setTimeout(() => {\n        setShowCopiedIcon(false);\n      }, showSuccessDelay);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showCopiedIcon]);\n\n  const onCopy = React.useCallback(() => {\n    if (contentRef.current && !showCopiedIcon) {\n      navigator.clipboard\n        .writeText(contentRef.current.innerText.trim(''))\n        .then(function () {\n          setShowCopiedIcon(true);\n        })\n        .catch();\n    }\n  }, [contentRef, showCopiedIcon]);\n\n  return (\n    <ErrorBoundary>\n      <Tooltip title={showCopiedIcon ? 'Copied!' : 'Copy to clipboard'}>\n        <span className={className} onClick={onCopy}>\n          <Button withOnlyIcon color='secondary' size='medium'>\n            {showCopiedIcon ? <Icon name='check' /> : <Icon name='copy' />}\n          </Button>\n        </span>\n      </Tooltip>\n    </ErrorBoundary>\n  );\n}\n\nCopyToClipboard.displayName = 'CopyToClipBoard';\n\nexport default React.memo<ICopyToClipBoardProps>(CopyToClipboard);\n","import React from 'react';\n\nimport { useMonaco } from '@monaco-editor/react';\n\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { getMonacoConfig } from 'config/monacoConfig/monacoConfig';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const monaco = useMonaco();\n  const preRef = React.useRef<HTMLPreElement>(null);\n\n  const monacoConfig: Record<string | number | symbol, any> =\n    React.useMemo(() => {\n      return getMonacoConfig();\n    }, []);\n\n  React.useEffect(() => {\n    monacoConfig.theme.config.colors = {\n      ...monacoConfig.theme.config.colors,\n      'editor.background': '#f2f3f4',\n    };\n    if (monaco && preRef.current) {\n      monaco.editor.colorizeElement(preRef.current, { theme: language });\n      monaco.editor.defineTheme(\n        monacoConfig.theme.name,\n        monacoConfig.theme.config,\n      );\n      monaco.editor.setTheme(monacoConfig.theme.name);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [monaco]);\n\n  return (\n    <ErrorBoundary>\n      <div className={`CodeBlock ${className} `}>\n        <pre className='ScrollBar__hidden' data-lang={language} ref={preRef}>\n          {code}\n        </pre>\n        <ErrorBoundary>\n          <CopyToClipBoard\n            className='CodeBlock__copy__button'\n            contentRef={preRef}\n          />\n        </ErrorBoundary>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import React from 'react';\nimport _ from 'lodash-es';\n\nimport runDetailAppModel from 'services/models/runs/runDetailAppModel';\n\nfunction useRunMetricsBatch({ runBatch, runTraces, runHash }: any) {\n  React.useEffect(() => {\n    const runsBatchRequestRef = runDetailAppModel.getRunMetricsBatch(\n      runTraces.metric,\n      runHash,\n    );\n    if (!runBatch && !_.isNil(runTraces)) {\n      runsBatchRequestRef.call();\n    }\n    return () => {\n      runsBatchRequestRef.abort();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [runTraces, runHash]);\n}\n\nexport default useRunMetricsBatch;\n"],"sourceRoot":""}