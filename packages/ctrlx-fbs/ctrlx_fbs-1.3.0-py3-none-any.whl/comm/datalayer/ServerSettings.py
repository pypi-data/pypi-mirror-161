# automatically generated by the FlatBuffers compiler, do not modify

# namespace: datalayer

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ServerSettings(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsServerSettings(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ServerSettings()
        x.Init(buf, n + offset)
        return x

    # ServerSettings
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ServerSettings
    def ServerIdlePingTimeout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 30000

    # ServerSettings
    def ServerWaitResponseTimeout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 3000

    # ServerSettings
    def ServerMaxMessageSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 52428800

def ServerSettingsStart(builder): builder.StartObject(3)
def ServerSettingsAddServerIdlePingTimeout(builder, serverIdlePingTimeout): builder.PrependUint32Slot(0, serverIdlePingTimeout, 30000)
def ServerSettingsAddServerWaitResponseTimeout(builder, serverWaitResponseTimeout): builder.PrependUint32Slot(1, serverWaitResponseTimeout, 3000)
def ServerSettingsAddServerMaxMessageSize(builder, serverMaxMessageSize): builder.PrependUint32Slot(2, serverMaxMessageSize, 52428800)
def ServerSettingsEnd(builder): return builder.EndObject()


class ServerSettingsT(object):

    # ServerSettingsT
    def __init__(self):
        self.serverIdlePingTimeout = 30000  # type: int
        self.serverWaitResponseTimeout = 3000  # type: int
        self.serverMaxMessageSize = 52428800  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        serverSettings = ServerSettings()
        serverSettings.Init(buf, pos)
        return cls.InitFromObj(serverSettings)

    @classmethod
    def InitFromObj(cls, serverSettings):
        x = ServerSettingsT()
        x._UnPack(serverSettings)
        return x

    # ServerSettingsT
    def _UnPack(self, serverSettings):
        if serverSettings is None:
            return
        self.serverIdlePingTimeout = serverSettings.ServerIdlePingTimeout()
        self.serverWaitResponseTimeout = serverSettings.ServerWaitResponseTimeout()
        self.serverMaxMessageSize = serverSettings.ServerMaxMessageSize()

    # ServerSettingsT
    def Pack(self, builder):
        ServerSettingsStart(builder)
        ServerSettingsAddServerIdlePingTimeout(builder, self.serverIdlePingTimeout)
        ServerSettingsAddServerWaitResponseTimeout(builder, self.serverWaitResponseTimeout)
        ServerSettingsAddServerMaxMessageSize(builder, self.serverMaxMessageSize)
        serverSettings = ServerSettingsEnd(builder)
        return serverSettings
