# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# configuration values of all axis transformation sets
class KinCfgAxsTrafoAllSets(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCfgAxsTrafoAllSets(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgAxsTrafoAllSets()
        x.Init(buf, n + offset)
        return x

    # KinCfgAxsTrafoAllSets
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # configuration values of all axis transformation sets
    # KinCfgAxsTrafoAllSets
    def AxsTrafoSets(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from motion.core.fbtypes.KinCfgAxsTrafoSet import KinCfgAxsTrafoSet
            obj = KinCfgAxsTrafoSet()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # KinCfgAxsTrafoAllSets
    def AxsTrafoSetsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # KinCfgAxsTrafoAllSets
    def AxsTrafoSetsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def KinCfgAxsTrafoAllSetsStart(builder): builder.StartObject(1)
def KinCfgAxsTrafoAllSetsAddAxsTrafoSets(builder, axsTrafoSets): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(axsTrafoSets), 0)
def KinCfgAxsTrafoAllSetsStartAxsTrafoSetsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def KinCfgAxsTrafoAllSetsEnd(builder): return builder.EndObject()

import motion.core.fbtypes.KinCfgAxsTrafoSet
try:
    from typing import List
except:
    pass

class KinCfgAxsTrafoAllSetsT(object):

    # KinCfgAxsTrafoAllSetsT
    def __init__(self):
        self.axsTrafoSets = None  # type: List[motion.core.fbtypes.KinCfgAxsTrafoSet.KinCfgAxsTrafoSetT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        kinCfgAxsTrafoAllSets = KinCfgAxsTrafoAllSets()
        kinCfgAxsTrafoAllSets.Init(buf, pos)
        return cls.InitFromObj(kinCfgAxsTrafoAllSets)

    @classmethod
    def InitFromObj(cls, kinCfgAxsTrafoAllSets):
        x = KinCfgAxsTrafoAllSetsT()
        x._UnPack(kinCfgAxsTrafoAllSets)
        return x

    # KinCfgAxsTrafoAllSetsT
    def _UnPack(self, kinCfgAxsTrafoAllSets):
        if kinCfgAxsTrafoAllSets is None:
            return
        if not kinCfgAxsTrafoAllSets.AxsTrafoSetsIsNone():
            self.axsTrafoSets = []
            for i in range(kinCfgAxsTrafoAllSets.AxsTrafoSetsLength()):
                if kinCfgAxsTrafoAllSets.AxsTrafoSets(i) is None:
                    self.axsTrafoSets.append(None)
                else:
                    kinCfgAxsTrafoSet_ = motion.core.fbtypes.KinCfgAxsTrafoSet.KinCfgAxsTrafoSetT.InitFromObj(kinCfgAxsTrafoAllSets.AxsTrafoSets(i))
                    self.axsTrafoSets.append(kinCfgAxsTrafoSet_)

    # KinCfgAxsTrafoAllSetsT
    def Pack(self, builder):
        if self.axsTrafoSets is not None:
            axsTrafoSetslist = []
            for i in range(len(self.axsTrafoSets)):
                axsTrafoSetslist.append(self.axsTrafoSets[i].Pack(builder))
            KinCfgAxsTrafoAllSetsStartAxsTrafoSetsVector(builder, len(self.axsTrafoSets))
            for i in reversed(range(len(self.axsTrafoSets))):
                builder.PrependUOffsetTRelative(axsTrafoSetslist[i])
            axsTrafoSets = builder.EndVector(len(self.axsTrafoSets))
        KinCfgAxsTrafoAllSetsStart(builder)
        if self.axsTrafoSets is not None:
            KinCfgAxsTrafoAllSetsAddAxsTrafoSets(builder, axsTrafoSets)
        kinCfgAxsTrafoAllSets = KinCfgAxsTrafoAllSetsEnd(builder)
        return kinCfgAxsTrafoAllSets
