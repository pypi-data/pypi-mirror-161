{"version":3,"sources":["uploadDiffView.es6.js"],"names":[],"mappings":"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","file":"uploadDiffView.js","sourcesContent":["/**\n * An abstract view for uploading diffs.\n *\n * This is extended by the PreCommitView (for creating new review requests)\n * and UpdateDiffView (for updating the diff on existing review requests).\n */\nRB.UploadDiffView = Backbone.View.extend({\n    events: {\n        'dragenter .dnd': '_onDragEnter',\n        'dragover .dnd': '_onDragOver',\n        'dragleave .dnd': '_onDragLeave',\n        'drop .dnd': '_onDrop',\n        'submit #basedir-form': '_onBasedirSubmit',\n        'submit #changenum-form': '_onChangenumSubmit',\n        'click .startover': '_onStartOverClicked',\n        'click #select-diff-file': '_onSelectFileClicked',\n        'click #select-parent-diff-file': '_onSelectFileClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'change:state', this._onStateChanged);\n        this.listenTo(this.model, 'change:error', this._onErrorChanged);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.UploadDiffView:\n     *     This object, for chaining.\n     */\n    render() {\n        let selectDiffText;\n        let selectParentDiffText;\n\n        if (this._canDragDrop()) {\n            selectDiffText = gettext('<input type=\"button\" id=\"select-diff-file\" value=\"Select\"> or drag and drop a diff file to begin');\n            selectParentDiffText = gettext('<input type=\"button\" id=\"select-parent-diff-file\" value=\"Select\"> or drag and drop a parent diff file if you have one');\n        } else {\n            selectDiffText = gettext('<input type=\"button\" id=\"select-diff-file\" value=\"Select\"> a file to begin');\n            selectParentDiffText = gettext('<input type=\"button\" id=\"select-parent-diff-file\" value=\"Select\"> a parent diff file if you have one');\n        }\n\n        this.$el.html(this.template({\n            pendingChangeHeader: gettext('Create from a local change'),\n            tipHeader: gettext('Tip:'),\n            tip: gettext('Use <tt>rbt post</tt> from <a href=\"https://www.reviewboard.org/downloads/rbtools/\">RBTools</a> to more easily create and update review requests.'),\n            selectDiff: selectDiffText,\n            selectParentDiff: selectParentDiffText,\n            baseDir: gettext('What is the base directory for this diff?'),\n            changeNum: gettext('What is the change number for this diff?'),\n            startOver: gettext('Start Over'),\n            ok: gettext('OK'),\n        }));\n\n        this._$fileInput = $('<input type=\"file\">')\n            .hide()\n            .appendTo(this.$el)\n            .change(() => this.model.handleFiles(this._$fileInput.get(0).files));\n        this._$diffRevisionError = this.$('#parent-diff-error-contents');\n        this._$error = this.$('#error-indicator')\n            .hide();\n        this._$errorContents = this.$('#error-contents');\n        this._$processingDiff = this.$('#processing-diff')\n            .hide();\n        this._$promptForBasedir = this.$('#prompt-for-basedir')\n            .hide();\n        this._$promptForChangeNumber = this.$('#prompt-for-change-number')\n            .hide();\n        this._$promptForDiff = this.$('#prompt-for-diff')\n            .hide();\n        this._$promptForParentDiff = this.$('#prompt-for-parent-diff')\n            .hide();\n        this._$uploading = this.$('#uploading-diffs')\n            .hide();\n\n        this._onStateChanged(this.model, this.model.get('state'));\n\n        return this;\n    },\n\n    /**\n     * Return whether drag-and-drop is supported on this browser.\n     *\n     * We check if the DOM has the appropriate support for file drag-and-drop,\n     * which will give us the right answer on most browsers. We also need to\n     * check iOS specifically, as Safari lies about the support.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether the user's browser supports drag-and-drop of files.\n     */\n    _canDragDrop() {\n        return ('draggable' in this.el ||\n                ('ondragstart' in this.el && 'ondrop' in this.el)) &&\n               !navigator.userAgent.match('iPhone OS') &&\n               !navigator.userAgent.match('iPad');\n    },\n\n    /**\n     * Callback for when the model's error attribute changes.\n     *\n     * Updates the text and position of error indicators in the various pages.\n     *\n     * Args:\n     *     model (RB.UploadDiffModel):\n     *         The model which handles uploading the diff.\n     *\n     *     error (string):\n     *         The text of the error.\n     */\n    _onErrorChanged(model, error) {\n        const errorHTML = `<div class=\"rb-icon rb-icon-warning\"></div> ${error}`;\n\n        this._$errorContents.html(errorHTML);\n        this._$diffRevisionError.html(errorHTML);\n\n        const innerHeight = this._$errorContents.height();\n        const outerHeight = this._$error.height();\n\n        this._$errorContents.css({\n            top: Math.floor((outerHeight - innerHeight) / 2) + 'px',\n        });\n    },\n\n    /**\n     * Callback for when the model's state attribute changes.\n     *\n     * Sets the corresponding element visible and all others invisible.\n     *\n     * Args:\n     *     model (RB.UploadDiffModel):\n     *         The model which handles uploading the diff.\n     *\n     *     state (number):\n     *         The current state of the upload process.\n     */\n    _onStateChanged(model, state) {\n        this._$promptForDiff.setVisible(\n            state === this.model.State.PROMPT_FOR_DIFF);\n        this._$promptForParentDiff.setVisible(\n            state === this.model.State.PROMPT_FOR_PARENT_DIFF);\n        this._$promptForBasedir.setVisible(\n            state === this.model.State.PROMPT_FOR_BASEDIR);\n        this._$processingDiff.setVisible(\n            state === this.model.State.PROCESSING_DIFF);\n        this._$promptForChangeNumber.setVisible(\n            state === this.model.State.PROMPT_FOR_CHANGE_NUMBER);\n        this._$uploading.setVisible(state === this.model.State.UPLOADING);\n        this._$error.setVisible(state === this.model.State.ERROR);\n    },\n\n    /**\n     * Event handler for a dragenter event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragenter event.\n     */\n    _onDragEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        this.$('.dnd').addClass('drag-hover');\n    },\n\n    /**\n     * Event handler for a dragover event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragover event.\n     */\n    _onDragOver(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const dt = event.originalEvent.dataTransfer;\n\n        if (dt) {\n            dt.dropEffect = 'copy';\n        }\n    },\n\n    /**\n     * Event handler for a dragleave event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragleave event.\n     */\n    _onDragLeave(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        this.$('.dnd').removeClass('drag-hover');\n\n        const dt = event.originalEvent.dataTransfer;\n\n        if (dt) {\n            dt.dropEffect = \"none\";\n        }\n    },\n\n    /**\n     * Event handler for a drop event.\n     *\n     * Args:\n     *     event (Event):\n     *         The drop event.\n     */\n    _onDrop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const  dt = event.originalEvent.dataTransfer;\n        const files = dt && dt.files;\n\n        if (files) {\n            this.model.handleFiles(files);\n        }\n    },\n\n    /**\n     * Handle when the user inputs a base directory.\n     *\n     * Args:\n     *     event (Event):\n     *         The form submit event.\n     */\n    _onBasedirSubmit(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const basedir = this.$('#basedir-input').val();\n\n        if (basedir) {\n            this.model.set('basedir', basedir);\n        }\n    },\n\n    /**\n     * Handle when the user inputs a change number.\n     */\n    _onChangenumSubmit() {\n        const changenum = this.$('#changenum-input').val();\n\n        if (changenum) {\n            this.model.set('changeNumber', changenum);\n        }\n    },\n\n    /**\n     * Callback when \"start over\" is clicked.\n     */\n    _onStartOverClicked() {\n        const $input = this._$fileInput.clone(true);\n\n        this._$fileInput.replaceWith($input);\n        this._$fileInput = $input;\n\n        this.model.startOver();\n    },\n\n    /**\n     * Callback when \"Select [diff file]\" is clicked.\n     */\n    _onSelectFileClicked() {\n        this._$fileInput.click();\n    },\n});\n"]}