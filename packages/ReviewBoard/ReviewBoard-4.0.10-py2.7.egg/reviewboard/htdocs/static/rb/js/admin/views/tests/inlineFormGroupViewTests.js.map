{"version":3,"sources":["inlineFormGroupViewTests.es6.js"],"names":[],"mappings":"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","file":"inlineFormGroupViewTests.js","sourcesContent":["suite('rb/admin/views/InlineFormGroupView', function() {\n    const inlineTemplate = _.template(dedent`\n        <div class=\"rb-c-admin-form-inline <%- classes || '' %>\">\n         <h3 class=\"rb-c-admin-form-inline__title\">\n          <span class=\"rb-c-admin-form-inline__title-prefix\"></span>\n          <span class=\"rb-c-admin-form-inline__title-object\"></span>\n          <span class=\"rb-c-admin-form-inline__title-index\"></span>\n          <span class=\"rb-c-admin-form-inline__actions\">\n           <span class=\"rb-c-admin-form-inline__delete-action\"></span>\n          </span>\n         </h3>\n         <fieldset>\n          <div>\n           <label for=\"myprefix-<%- index %>-foo\"></label>\n           <input id=\"myprefix-<%- index %>-foo\"\n                  name=\"myprefix-<%- index %>-foo\">\n          </div>\n          <div>\n           <label for=\"myprefix-<%- index %>-bar\"></label>\n           <input id=\"myprefix-<%- index %>-bar\"\n                  name=\"myprefix-<%- index %>-bar\">\n          </div>\n         </fieldset>\n        </div>\n    `);\n\n    const template = _.template(dedent`\n        <div class=\"rb-c-admin-form-inline-group\">\n         <h2 class=\"rb-c-admin-form-inline-group__title\"></h2>\n         <div class=\"rb-c-admin-form-inline-group__inlines\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-TOTAL_FORMS\"\n                 name=\"myprefix-TOTAL_FORMS\"\n                 value=\"<%- totalForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-INITIAL_FORMS\"\n                 name=\"myprefix-INITIAL_FORMS\"\n                 value=\"<%- initialForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-MIN_NUM_FORMS\"\n                 name=\"myprefix-MIN_NUM_FORMS\"\n                 value=\"<%- minNumForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-MAX_NUM_FORMS\"\n                 name=\"myprefix-MAX_NUM_FORMS\"\n                 value=\"<%- maxNumForms %>\">\n\n          <% for (let i = 0; i < numInlines; i++) { %>\n           <%= inlineTemplate({\n               classes: '',\n               index: i\n           }) %>\n          <% } %>\n          <%= inlineTemplate({\n              classes: '-is-template',\n              index: '__prefix__'\n          }) %>\n         </div>\n         <div class=\"rb-c-admin-form-inline-group__actions\">\n          <a href=\"#\" class=\"rb-c-admin-form-inline-group__add-action\"></a>\n         </div>\n        </div>\n    `);\n\n    let $el;\n    let model;\n    let view;\n\n    function buildView(options) {\n        $el =\n            $(template(_.extend({\n                initialForms: 0,\n                inlineTemplate: inlineTemplate,\n                maxNumForms: '',\n                minNumForms: 0,\n                numInlines: 0,\n                totalForms: 0,\n            }, options)))\n            .appendTo($testsScratch);\n\n        view = new RB.Admin.InlineFormGroupView({\n            el: $el,\n            model: model,\n        });\n        view.render();\n    }\n\n    beforeEach(function() {\n        model = new RB.Admin.InlineFormGroup({\n            prefix: 'myprefix',\n        });\n    });\n\n    describe('State', function() {\n        it('Populated on render', function() {\n            buildView({\n                numInlines: 2,\n                initialForms: 2,\n                minNumForms: 1,\n                maxNumForms: 5,\n                totalForms: 2,\n            });\n\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(2);\n            expect(view._$inlineTemplate.length).toBe(1);\n            expect(view._$inlineTemplate.hasClass('-is-template')).toBeFalse();\n\n            expect(model.get('initialInlines')).toBe(2);\n            expect(model.get('maxInlines')).toBe(5);\n            expect(model.get('minInlines')).toBe(1);\n\n            expect(model.inlines.length).toBe(2);\n            expect(view._inlineViews.length).toBe(2);\n\n            let inline = model.inlines.at(0);\n            expect(inline.get('index')).toBe(0);\n            expect(inline.get('isInitial')).toBeTrue();\n            expect(view._inlineViews[0].model).toBe(inline);\n\n            inline = model.inlines.at(1);\n            expect(inline.get('index')).toBe(1);\n            expect(inline.get('isInitial')).toBeTrue();\n            expect(view._inlineViews[1].model).toBe(inline);\n        });\n\n        it('Updated when inlines added', function() {\n            buildView({\n                numInlines: 1,\n                initialForms: 1,\n                totalForms: 1,\n            });\n\n            const $totalForms = $el.find('#id_myprefix-TOTAL_FORMS');\n            const $addButton =\n                $el.find('.rb-c-admin-form-inline-group__add-action');\n\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(1);\n            expect($totalForms.val()).toBe('1');\n\n            $addButton.click();\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(2);\n            expect($totalForms.val()).toBe('2');\n\n            $addButton.click();\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(3);\n            expect($totalForms.val()).toBe('3');\n        });\n\n        it('Updated when inlines added', function() {\n            buildView({\n                numInlines: 2,\n                initialForms: 2,\n                totalForms: 2,\n            });\n\n            const $totalForms = $el.find('#id_myprefix-TOTAL_FORMS');\n\n            expect(model.inlines.length).toBe(2);\n            expect($totalForms.val()).toBe('2');\n\n            model.inlines.at(0).destroy();\n\n            const $inlines = $el.find('.rb-c-admin-form-inline');\n            expect($inlines.length).toBe(1);\n            expect(model.inlines.length).toBe(1);\n            expect($totalForms.val()).toBe('1');\n            expect($inlines[0].id).toBe('myprefix-0');\n        });\n    });\n\n    describe('UI', function() {\n        describe('Add Button', function() {\n            let $addButton;\n\n            beforeEach(function() {\n                buildView({\n                    numInlines: 1,\n                    initialForms: 1,\n                    minNumForms: 0,\n                    maxNumForms: 3,\n                    totalForms: 1,\n                });\n\n                $addButton =\n                    $el.find('.rb-c-admin-form-inline-group__add-action');\n                expect($addButton.length).toBe(1);\n            });\n\n            it('When under limit', function() {\n                expect($addButton.is(':visible')).toBeTrue();\n\n                view.addInlineForm();\n                expect($addButton.is(':visible')).toBeTrue();\n            });\n\n            it('When limit hit', function() {\n                expect($addButton.is(':visible')).toBeTrue();\n\n                view.addInlineForm();\n                view.addInlineForm();\n                expect($addButton.is(':visible')).toBeFalse();\n            });\n        });\n    });\n});\n"]}