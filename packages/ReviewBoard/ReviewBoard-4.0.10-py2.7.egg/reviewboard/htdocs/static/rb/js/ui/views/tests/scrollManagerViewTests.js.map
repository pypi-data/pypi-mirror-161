{"version":3,"sources":["scrollManagerViewTests.es6.js"],"names":[],"mappings":"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","file":"scrollManagerViewTests.js","sourcesContent":["suite('rb/ui/views/ScrollManagerView', function() {\n    function makeElement(dimensions={}) {\n        const scratchOffset = $testsScratch.offset();\n\n        return $('<div/>')\n            .css({\n                position: 'absolute',\n                left: -scratchOffset.left + (dimensions.left || 0),\n                top: -scratchOffset.top + (dimensions.top || 0),\n                width: dimensions.width || 20,\n                height: dimensions.height || 20,\n            })\n            .appendTo($testsScratch);\n    }\n\n    let scrollManager;\n\n    beforeEach(function() {\n        scrollManager = new RB.ScrollManagerView();\n        scrollManager.window = {\n            pageXOffset: 0,\n            pageYOffset: 0,\n\n            scrollTo(x, y) {\n                this.pageXOffset = x;\n                this.pageYOffset = y;\n            },\n\n            requestAnimationFrame(cb) {\n                cb();\n            },\n        };\n    });\n\n    describe('scrollToPosition', function() {\n        it('Without scroll offset', function() {\n            scrollManager.scrollToPosition(100);\n\n            expect(Math.round(scrollManager.window.pageYOffset)).toBe(100);\n        });\n\n        it('With scroll offset', function() {\n            scrollManager.scrollYOffset = 40;\n            scrollManager.scrollToPosition(100);\n\n            expect(Math.round(scrollManager.window.pageYOffset)).toBe(60);\n        });\n    });\n\n    describe('scrollToElement', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('Without scroll offset', function() {\n            scrollManager.scrollToElement($el);\n\n            expect(Math.round(scrollManager.window.pageYOffset)).toBe(50);\n        });\n\n        it('With scroll offset', function() {\n            scrollManager.scrollYOffset = 40;\n            scrollManager.scrollToElement($el);\n\n            expect(Math.round(scrollManager.window.pageYOffset)).toBe(10);\n        });\n    });\n\n    describe('markUpdated', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('First in a batch', function() {\n            scrollManager.window.pageYOffset = 100;\n\n            expect(scrollManager._oldScrollY).toBe(null);\n\n            scrollManager.markForUpdate($el);\n\n            const pendingElement = scrollManager._pendingElements.get($el[0]);\n            expect(Math.round(pendingElement.oldHeight)).toEqual(20);\n            expect(Math.round(pendingElement.oldOffset.top)).toEqual(50);\n            expect(Math.round(pendingElement.oldOffset.left)).toEqual(0);\n            expect(scrollManager._oldScrollY).toBe(100);\n        });\n\n        it('Subsequent entries', function() {\n            scrollManager._oldScrollY = 100;\n            scrollManager.window.pageYOffset = 200;\n\n            scrollManager.markForUpdate($el);\n\n            const pendingElement = scrollManager._pendingElements.get($el[0]);\n            expect(Math.round(pendingElement.oldHeight)).toEqual(20);\n            expect(Math.round(pendingElement.oldOffset.top)).toEqual(50);\n            expect(Math.round(pendingElement.oldOffset.left)).toEqual(0);\n            expect(scrollManager._oldScrollY).toBe(100);\n        });\n    });\n\n    describe('markUpdated', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('Stores correct state', function() {\n            /* Disable the actual updates for this test. */\n            spyOn(scrollManager.window, 'requestAnimationFrame');\n\n            scrollManager.markForUpdate($el);\n            $el.height(40);\n            $el.css('top', parseInt($el.css('top'), 10) - 10);\n            scrollManager.markUpdated($el);\n\n            const el = $el[0];\n\n            expect(scrollManager._pendingElements.get(el)).toBe(undefined);\n\n            const element = scrollManager._elements.get(el);\n            expect(Math.round(element.oldHeight)).toEqual(20);\n            expect(Math.round(element.oldOffset.top)).toEqual(50);\n            expect(Math.round(element.oldOffset.left)).toEqual(0);\n            expect(Math.round(element.newHeight)).toEqual(40);\n            expect(Math.round(element.newOffset.top)).toEqual(40);\n            expect(Math.round(element.newOffset.left)).toEqual(0);\n\n            expect(scrollManager.window.requestAnimationFrame)\n                .toHaveBeenCalled();\n        });\n    });\n\n    describe('Scroll updates', function() {\n        beforeEach(function() {\n            spyOn(scrollManager.window, 'requestAnimationFrame');\n\n            scrollManager.window.pageYOffset = 200;\n        });\n\n        it('Includes updates before scroll position', function() {\n            const $el1 = makeElement({top: 10});\n            const $el2 = makeElement({top: 60});\n            const $el3 = makeElement({top: 70});\n\n            /* Grow by 50px. */\n            scrollManager.markForUpdate($el1);\n            $el1.height(70);\n            scrollManager.markUpdated($el1);\n\n            /* Shrink by 10px. */\n            scrollManager.markForUpdate($el2);\n            $el2.height(10);\n            scrollManager.markUpdated($el2);\n\n            /* Move up 5px. */\n            scrollManager.markForUpdate($el3);\n            $el3.css('top', parseInt($el3.css('top'), 10) - 5);\n            scrollManager.markUpdated($el3);\n\n            scrollManager._updateScrollPos();\n\n            expect(Math.round(scrollManager.window.pageYOffset)).toBe(235);\n        });\n\n        it('Ignores updates after scroll position', function() {\n            const $el1 = makeElement({top: 10});\n            const $el2 = makeElement({top: scrollManager.window.pageYOffset});\n            const $el3 = makeElement({top: 500});\n\n            scrollManager.markForUpdate($el1);\n            $el1.height(30);\n            scrollManager.markUpdated($el1);\n\n            scrollManager.markForUpdate($el2);\n            $el2.height(90);\n            scrollManager.markUpdated($el2);\n\n            scrollManager.markForUpdate($el3);\n            $el3.height(1000);\n            scrollManager.markUpdated($el3);\n\n            scrollManager._updateScrollPos();\n\n            expect(scrollManager.window.pageYOffset).toBe(210);\n        });\n    });\n});\n"]}