{"version":3,"sources":["inlineFormView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,KAAH,CAAS,cAAT,GAA0B,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;EAC3C,MAAM,EAAE;IACJ,gDAAgD;EAD5C,CADmC;;EAK3C;AACJ;AACA;EACI,UAAU,GAAG;IACT,KAAK,cAAL,GAAsB,IAAtB;IACA,KAAK,OAAL,GAAe,IAAf;EACH,CAX0C;;EAa3C;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,KAAK,cAAL,GAAsB,KAAK,CAAL,CAAO,wCAAP,CAAtB;IACA,KAAK,OAAL,GAAe,KAAK,CAAL,CAAO,sCAAP,CAAf;IAEA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,cAA1B,EAA0C,KAAK,eAA/C;IAEA,OAAO,IAAP;EACH,CA3B0C;;EA6B3C;AACJ;AACA;AACA;AACA;AACA;EACI,eAAe,GAAG;IACd,MAAM,KAAK,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,CAAd;IACA,MAAM,MAAM,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,QAAf,CAAf;IACA,MAAM,OAAO,GAAG,IAAI,MAAJ,YAAe,MAAf,yBAAhB;IACA,MAAM,SAAS,aAAM,MAAN,cAAgB,KAAhB,CAAf;;IAEA,SAAS,eAAT,CAAyB,EAAzB,EAA6B;MACzB,IAAI,EAAE,CAAC,EAAP,EAAW;QACP,EAAE,CAAC,EAAH,GAAQ,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,OAAd,EAAuB,SAAvB,CAAR;MACH;;MAED,IAAI,EAAE,CAAC,IAAP,EAAa;QACT,EAAE,CAAC,IAAH,GAAU,EAAE,CAAC,IAAH,CAAQ,OAAR,CAAgB,OAAhB,EAAyB,SAAzB,CAAV;MACH;;MAED,IAAI,EAAE,CAAC,OAAP,EAAgB;QACZ,EAAE,CAAC,OAAH,GAAa,EAAE,CAAC,OAAH,CAAW,OAAX,CAAmB,OAAnB,EAA4B,SAA5B,CAAb;MACH;;MAED,KAAK,IAAI,IAAI,GAAG,EAAE,CAAC,UAAnB,EACK,IAAI,KAAK,IADd,EAEK,IAAI,GAAG,IAAI,CAAC,WAFjB,EAE8B;QAC1B,eAAe,CAAC,IAAD,CAAf;MACH;IACJ;;IAED,KAAK,EAAL,CAAQ,EAAR,GAAa,SAAb;;IACA,KAAK,OAAL,CAAa,IAAb,YAAsB,KAAK,GAAG,CAA9B;;IAEA,eAAe,CAAC,KAAK,EAAN,CAAf;EACH,CAjE0C;;EAmE3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,gBAAgB,CAAC,CAAD,EAAI;IAChB,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAAJ,EAAiC;MAC7B;IACH;;IAED,CAAC,CAAC,cAAF;IACA,CAAC,CAAC,eAAF;;IAEA,IAAI,OAAO,yEAAX,EAAsF;MAClF,KAAK,KAAL,CAAW,OAAX;IACH;EACJ;;AAxF0C,CAArB,CAA1B","file":"inlineFormView.js","sourcesContent":["/**\n * A view managing inline forms, for related objects for models.\n *\n * This allows for providing form data for a database object that relates to\n * some primary object, or deleting the object. It's managed by\n * :js:class:`RB.Admin.InlineFormGroupView`.\n */\nRB.Admin.InlineFormView = Backbone.View.extend({\n    events: {\n        'click .rb-c-admin-form-inline__delete-action': '_onDeleteClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._$removeButton = null;\n        this._$title = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.Admin.InlineFormView:\n     *     This view, for chaining.\n     */\n    render() {\n        this._$removeButton = this.$('.rb-c-admin-form-inline__delete-action');\n        this._$title = this.$('.rb-c-admin-form-inline__title-index');\n\n        this.listenTo(this.model, 'change:index', this._onIndexChanged);\n\n        return this;\n    },\n\n    /**\n     * Handle a change to the inline's index in the group.\n     *\n     * This will update the ID and title for this view, and the IDs, names,\n     * and references across all elements in the form.\n     */\n    _onIndexChanged() {\n        const index = this.model.get('index');\n        const prefix = this.model.get('prefix');\n        const idRegex = new RegExp(`(${prefix}-(\\\\d+|__prefix__))`);\n        const newPrefix = `${prefix}-${index}`;\n\n        function _updateElements(el) {\n            if (el.id) {\n                el.id = el.id.replace(idRegex, newPrefix);\n            }\n\n            if (el.name) {\n                el.name = el.name.replace(idRegex, newPrefix);\n            }\n\n            if (el.htmlFor) {\n                el.htmlFor = el.htmlFor.replace(idRegex, newPrefix);\n            }\n\n            for (let node = el.firstChild;\n                 node !== null;\n                 node = node.nextSibling) {\n                _updateElements(node);\n            }\n        }\n\n        this.el.id = newPrefix;\n        this._$title.text(`#${index + 1}`);\n\n        _updateElements(this.el);\n    },\n\n    /**\n     * Handle a click event on the Delete button for the inline.\n     *\n     * This will trigger the ``deleteClicked`` event, allowing the parent\n     * :js:class:`RB.Admin.InlineFormGroupView` to handle it.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _onDeleteClicked(e) {\n        if (this.model.get('isInitial')) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (confirm(gettext('Are you sure you want to delete this? This cannot be undone.'))) {\n            this.model.destroy();\n        }\n    },\n});\n"]}