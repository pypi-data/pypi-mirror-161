{"version":3,"sources":["branchesView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,YAAH,GAAkB,EAAE,CAAC,cAAH,CAAkB,MAAlB,CAAyB;EACvC,OAAO,EAAE,QAD8B;EAGvC,YAAY,EAAE,EAAE,CAAC,UAHsB;EAKvC,MAAM,EAAE;IACJ,UAAU;EADN,CAL+B;;EASvC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,EAAE,YAAW;IACf,EAAE,CAAC,cAAH,CAAkB,SAAlB,CAA4B,MAA5B,CAAmC,KAAnC,CAAyC,IAAzC,EAA+C,SAA/C;IAEA,KAAK,UAAL,CAAgB,IAAhB,CAAqB,MAAM,IAAI;MAC3B,IAAI,MAAM,CAAC,GAAP,CAAW,WAAX,CAAJ,EAA6B;QACzB,KAAK,OAAL,CAAa,UAAb,EAAyB,MAAzB;MACH;IACJ,CAJD;IAMA,OAAO,IAAP;EACH,CA1BsC;;EA4BvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,QAAQ,CAAC,MAAD,EAAS;IACb,EAAE,CAAC,cAAH,CAAkB,SAAlB,CAA4B,QAA5B,CAAqC,KAArC,CAA2C,IAA3C,EAAiD,SAAjD;;IAEA,IAAI,KAAK,SAAL,IAAkB,MAAM,CAAC,GAAP,CAAW,WAAX,CAAtB,EAA+C;MAC3C,KAAK,OAAL,CAAa,UAAb,EAAyB,MAAzB;IACH;EACJ,CA5CsC;;EA8CvC;AACJ;AACA;AACA;AACA;EACI,SAAS,GAAG;IACR,MAAM,UAAU,GAAG,KAAK,GAAL,CAAS,IAAT,CAAc,eAAd,CAAnB;IACA,KAAK,OAAL,CAAa,UAAb,EAAyB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,UAAvB,CAAzB;EACH;;AAtDsC,CAAzB,CAAlB","file":"branchesView.js","sourcesContent":["/**\n * A view for a collection of branches.\n *\n * This is presented as a ``<select>`` in the document.\n *\n * Users can listen to the \"selected\" event to know which branch is currently\n * chosen. This event will be triggered with the branch model as its argument.\n */\nRB.BranchesView = RB.CollectionView.extend({\n    tagName: 'select',\n\n    itemViewType: RB.BranchView,\n\n    events: {\n        'change': '_onChange',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.BranchesView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        RB.CollectionView.prototype.render.apply(this, arguments);\n\n        this.collection.each(branch => {\n            if (branch.get('isDefault')) {\n                this.trigger('selected', branch);\n            }\n        });\n\n        return this;\n    },\n\n    /**\n     * Override for CollectionView._onAdded.\n     *\n     * If the newly-added branch is the default (for example, 'trunk' in SVN or\n     * 'master' in git), start with it selected.\n     *\n     * Args:\n     *     branch (RB.RepositoryBranch):\n     *         The newly-added branch.\n     */\n    _onAdded(branch) {\n        RB.CollectionView.prototype._onAdded.apply(this, arguments);\n\n        if (this._rendered && branch.get('isDefault')) {\n            this.trigger('selected', branch);\n        }\n    },\n\n    /**\n     * Callback for the 'change' event on the select node.\n     *\n     * Triggers 'selected' with the given model.\n     */\n    _onChange() {\n        const selectedIx = this.$el.prop('selectedIndex');\n        this.trigger('selected', this.collection.models[selectedIx]);\n    },\n});\n"]}