{"version":3,"sources":["screenshotCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"screenshotCommentModelTests.js","sourcesContent":["suite('rb/resources/models/ScreenshotComment', function() {\n    const strings = RB.ScreenshotComment.strings;\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.ScreenshotComment({\n            screenshotID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n            x: 0,\n            y: 0,\n            width: 1,\n            height: 1,\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    x: 10,\n                    y: 20,\n                    w: 30,\n                    h: 40,\n                    thumbnail_url: '/thumbnail.png',\n                    screenshot: {\n                        id: 10,\n                        filename: 'image.png',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.x).toBe(10);\n            expect(data.y).toBe(20);\n            expect(data.width).toBe(30);\n            expect(data.height).toBe(40);\n            expect(data.thumbnailURL).toBe('/thumbnail.png');\n            expect(data.screenshot).not.toBe(undefined);\n            expect(data.screenshot.id).toBe(10);\n            expect(data.screenshot.get('filename')).toBe('image.png');\n            expect(data.screenshotID).toBe(10);\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        it('x field', function() {\n            model.set('x', 10);\n            const data = model.toJSON();\n            expect(data.x).toBe(10);\n        });\n\n        it('y field', function() {\n            model.set('y', 10);\n            const data = model.toJSON();\n            expect(data.y).toBe(10);\n        });\n\n        it('w field', function() {\n            model.set('width', 10);\n            const data = model.toJSON();\n            expect(data.w).toBe(10);\n        });\n\n        it('h field', function() {\n            model.set('height', 10);\n            const data = model.toJSON();\n            expect(data.h).toBe(10);\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('x', function() {\n            describe('Valid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        x: 0,\n                    })).toBe(undefined);\n                });\n\n                it('> 0', function() {\n                    expect(model.validate({\n                        x: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('< 0', function() {\n                    expect(model.validate({\n                        x: -1,\n                    })).toBe(strings.INVALID_X);\n                });\n            });\n        });\n\n        describe('y', function() {\n            describe('Valid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        y: 0,\n                    })).toBe(undefined);\n                });\n\n                it('> 0', function() {\n                    expect(model.validate({\n                        y: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('< 0', function() {\n                    expect(model.validate({\n                        y: -1,\n                    })).toBe(strings.INVALID_Y);\n                });\n            });\n        });\n\n        describe('width', function() {\n            describe('Valid values', function() {\n                it('> 0', function() {\n                    expect(model.validate({\n                        width: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        width: 0,\n                    })).toBe(strings.INVALID_WIDTH);\n                });\n\n                it('< 0', function() {\n                    expect(model.validate({\n                        width: -1,\n                    })).toBe(strings.INVALID_WIDTH);\n                });\n            });\n        });\n\n        describe('height', function() {\n            describe('Valid values', function() {\n                it('> 0', function() {\n                    expect(model.validate({\n                        height: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        height: 0,\n                    })).toBe(strings.INVALID_HEIGHT);\n                });\n\n                it('< 0', function() {\n                    expect(model.validate({\n                        height: -1,\n                    })).toBe(strings.INVALID_HEIGHT);\n                });\n            });\n        });\n    });\n});\n"]}