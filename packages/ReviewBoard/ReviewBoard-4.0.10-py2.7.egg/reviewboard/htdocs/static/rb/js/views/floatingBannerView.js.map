{"version":3,"sources":["floatingBannerView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,kBAAH,GAAwB,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;EACzC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,UAAU,CAAC,OAAD,EAAU;IAChB,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,aAAL,GAAqB,IAArB;;IAEA,CAAC,CAAC,OAAF,CAAU,IAAV,EAAgB,sBAAhB,EAAwC,aAAxC;EACH,CApBwC;;EAsBzC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,CAAC,CAAC,MAAD,CAAD,CACK,MADL,CACY,KAAK,oBADjB,EAEK,MAFL,CAEY,KAAK,WAFjB;;IAGA,CAAC,CAAC,KAAF,CAAQ,KAAK,oBAAb;;IAEA,OAAO,IAAP;EACH,CApCwC;;EAsCzC;AACJ;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,IAAI,KAAK,aAAL,KAAuB,IAA3B,EAAiC;MAC7B,KAAK,aAAL,CAAmB,MAAnB;IACH;;IAED,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,MAAxB,CAA+B,IAA/B,CAAoC,IAApC;EACH,CAlDwC;;EAoDzC;AACJ;AACA;EACI,WAAW,GAAG;IACV,IAAI,KAAK,aAAL,KAAuB,IAA3B,EAAiC;MAC7B,IAAI,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;QAC/B,MAAM,IAAI,GACN,KAAK,aAAL,CAAmB,MAAnB,GAA4B,CAA5B,EAA+B,qBAA/B,EADJ;;QAGA,KAAK,GAAL,CAAS,KAAT,CACI,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,KAAf,IACA,KAAK,GAAL,CAAS,UAAT,CAAoB,KAApB,EAA2B,IAA3B,CAFJ;MAGH,CAPD,MAOO;QACH,KAAK,GAAL,CAAS,KAAT,CAAe,MAAf;MACH;IACJ;EACJ,CApEwC;;EAsEzC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBAAoB,GAAG;IACnB,IAAI,KAAK,GAAL,CAAS,MAAT,GAAkB,MAAlB,KAA6B,CAAjC,EAAoC;MAChC;IACH;;IAED,IAAI,KAAK,aAAL,KAAuB,IAA3B,EAAiC;MAC7B,KAAK,aAAL,GAAqB,KAAK,GAAL,CAAS,IAAT,CAAc,CAAC,CAAC,QAAD,CAAf,EAA2B,MAA3B,EAArB;;MACA,KAAK,WAAL;IACH;;IAED,MAAM,UAAU,GAAG,KAAK,OAAL,CAAa,eAAhC;IACA,MAAM,YAAY,GAAG,UAAU,CAAC,MAAX,GAAoB,GAAzC;IACA,MAAM,eAAe,GAAG,UAAU,CAAC,WAAX,EAAxB;IACA,MAAM,eAAe,GAAG,YAAY,GAAG,eAAvC;IACA,MAAM,SAAS,GAAG,CAAC,CAAC,MAAD,CAAD,CAAU,SAAV,EAAlB;IACA,MAAM,SAAS,GAAG,KAAK,aAAL,CAAmB,MAAnB,GAA4B,GAA5B,GAAkC,SAApD;IACA,MAAM,WAAW,GAAG,KAAK,GAAL,CAAS,WAAT,CAAqB,IAArB,CAApB;IAEA,MAAM,WAAW,GAAG,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAApB;;IAEA,IAAI,CAAC,UAAU,CAAC,QAAX,CAAoB,KAAK,OAAL,CAAa,qBAAjC,CAAD,IACA,SAAS,GAAG,CADZ,IAEA,YAAY,GAAG,SAFf,IAGA,SAAS,GAAG,eAHhB,EAGiC;MAC7B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;MACY,IAAI,CAAC,WAAL,EAAkB;QACd;AAChB;AACA;AACA;AACA;QACgB,KAAK,aAAL,CACK,MADL,CACY,KAAK,GAAL,CAAS,WAAT,EADZ,EAEK,GAFL,CAES;UACD,cAAc,KAAK,GAAL,CAAS,GAAT,CAAa,YAAb,CADb;UAED,iBAAiB,KAAK,GAAL,CAAS,GAAT,CAAa,eAAb;QAFhB,CAFT;;QAOA,KAAK,GAAL,CACK,QADL,CACc,UADd,EAEK,GAFL,CAES,UAFT,EAEqB,OAFrB;MAGH;;MAED,KAAK,GAAL,CAAS,GAAT,CAAa,KAAb,EACa,SAAS,GAAG,eAAe,GAAG,WAA9B,GACE,eAAe,GAAG,WAAlB,GAAgC,SADlC,GAEE,CAHf;;MAKA,KAAK,WAAL;IACH,CApCD,MAoCO,IAAI,WAAJ,EAAiB;MACpB;AACZ;AACA;AACA;AACA;MACY,KAAK,GAAL,CACK,WADL,CACiB,UADjB,EAEK,GAFL,CAES;QACD,GAAG,EAAE,EADJ;QAED,QAAQ,EAAE;MAFT,CAFT;;MAMA,KAAK,aAAL,CACK,MADL,CACY,MADZ,EAEK,GAFL,CAES,QAFT,EAEmB,CAFnB;IAGH;EACJ;;AAtJwC,CAArB,CAAxB","file":"floatingBannerView.js","sourcesContent":["/**\n * Floats a banner on screen within a container.\n *\n * The banner will appear at the top of the container, or the screen,\n * whichever is visible, until the container is no longer on-screen.\n *\n * The banner will keep a spacer in its original location at the top\n * of the container in order to reserve space for it to anchor to.\n * This ensures that the page doesn't jump too horribly.\n */\nRB.FloatingBannerView = Backbone.View.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $floatContainer (jQuery):\n     *         The container to use when the banner is floating.\n     *\n     *     noFloatContainerClass (string):\n     *         The class name used when the banner should not be floating.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$floatSpacer = null;\n\n        _.bindAll(this, '_updateFloatPosition', '_updateSize');\n    },\n\n    /**\n     * Render the banner and listens for scroll and resize updates.\n     *\n     * Returns:\n     *     RB.FloatingBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        $(window)\n            .scroll(this._updateFloatPosition)\n            .resize(this._updateSize);\n        _.defer(this._updateFloatPosition);\n\n        return this;\n    },\n\n    /**\n     * Remove the view from the DOM.\n     *\n     * This will remove both the banner and the floating spacer (if currently\n     * in the DOM).\n     */\n    remove() {\n        if (this._$floatSpacer !== null) {\n            this._$floatSpacer.remove();\n        }\n\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /**\n     * Update the size of the banner to match the spacer.\n     */\n    _updateSize() {\n        if (this._$floatSpacer !== null) {\n            if (this.$el.hasClass('floating')) {\n                const rect =\n                    this._$floatSpacer.parent()[0].getBoundingClientRect();\n\n                this.$el.width(\n                    Math.ceil(rect.width) -\n                    this.$el.getExtents('bpm', 'lr'));\n            } else {\n                this.$el.width('auto');\n            }\n        }\n    },\n\n    /**\n     * Update the position of the banner.\n     *\n     * This will factor in how much of the container is visible, based on\n     * its size, position, and the scroll offset. It will then attempt\n     * to position the banner to the top of the visible portion of the\n     * container.\n     */\n    _updateFloatPosition() {\n        if (this.$el.parent().length === 0) {\n            return;\n        }\n\n        if (this._$floatSpacer === null) {\n            this._$floatSpacer = this.$el.wrap($('<div/>')).parent();\n            this._updateSize();\n        }\n\n        const $container = this.options.$floatContainer;\n        const containerTop = $container.offset().top;\n        const containerHeight = $container.outerHeight();\n        const containerBottom = containerTop + containerHeight;\n        const windowTop = $(window).scrollTop();\n        const topOffset = this._$floatSpacer.offset().top - windowTop;\n        const outerHeight = this.$el.outerHeight(true);\n\n        const wasFloating = this.$el.hasClass('floating');\n\n        if (!$container.hasClass(this.options.noFloatContainerClass) &&\n            topOffset < 0 &&\n            containerTop < windowTop &&\n            windowTop < containerBottom) {\n            /*\n             * We're floating! If we just entered this state, set the\n             * appropriate styles on the element.\n             *\n             * We'll then want to set the top to 0, unless the user is\n             * scrolling the banner out of view. In that case, figure out how\n             * much to show, and set the appropriate offset.\n             */\n            if (!wasFloating) {\n                /*\n                 * Set the spacer to be the dimensions of the docked banner,\n                 * so that the container doesn't change sizes when we go into\n                 * float mode.\n                 */\n                this._$floatSpacer\n                    .height(this.$el.outerHeight())\n                    .css({\n                        'margin-top': this.$el.css('margin-top'),\n                        'margin-bottom': this.$el.css('margin-bottom'),\n                    });\n\n                this.$el\n                    .addClass('floating')\n                    .css('position', 'fixed');\n            }\n\n            this.$el.css('top',\n                         windowTop > containerBottom - outerHeight\n                         ? containerBottom - outerHeight - windowTop\n                         : 0);\n\n            this._updateSize();\n        } else if (wasFloating) {\n            /*\n             * We're now longer floating. Unset the styles on the banner and\n             * on the spacer (in order to prevent the spacer from taking up\n             * any additional room.\n             */\n            this.$el\n                .removeClass('floating')\n                .css({\n                    top: '',\n                    position: '',\n                });\n            this._$floatSpacer\n                .height('auto')\n                .css('margin', 0);\n        }\n    },\n});\n"]}