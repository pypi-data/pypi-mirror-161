{"version":3,"sources":["baseCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"baseCommentModelTests.js","sourcesContent":["suite('rb/resources/models/BaseComment', function() {\n    const strings = RB.BaseComment.strings;\n    let parentObject;\n    let model;\n\n    beforeEach(function() {\n        parentObject = new RB.BaseResource({\n            'public': true,\n        });\n\n        model = new RB.BaseComment({\n            parentObject: parentObject,\n        });\n\n        expect(model.validate(model.attributes)).toBe(undefined);\n    });\n\n    describe('State values', function() {\n        it('STATE_DROPPED', function() {\n            expect(RB.BaseComment.STATE_DROPPED).toBe('dropped');\n        });\n\n        it('STATE_OPEN', function() {\n            expect(RB.BaseComment.STATE_OPEN).toBe('open');\n        });\n\n        it('STATE_RESOLVED', function() {\n            expect(RB.BaseComment.STATE_RESOLVED).toBe('resolved');\n        });\n    });\n\n    describe('destroyIfEmpty', function() {\n        beforeEach(function() {\n            spyOn(model, 'destroy');\n        });\n\n        it('Destroying when text is empty', function() {\n            model.set('text', '');\n            model.destroyIfEmpty();\n            expect(model.destroy).toHaveBeenCalled();\n        });\n\n        it('Not destroying when text is not empty', function() {\n            model.set('text', 'foo');\n            model.destroyIfEmpty();\n            expect(model.destroy).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('parse', function() {\n        beforeEach(function() {\n            model.rspNamespace = 'my_comment';\n        });\n\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                my_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text: 'foo',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.text).toBe('foo');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('issue_opened field', function() {\n            it('Default', function() {\n                const data = model.toJSON();\n                expect(data.issue_opened).toBe(null);\n            });\n\n            it('With value', function() {\n                model.set('issueOpened', false);\n                let data = model.toJSON();\n                expect(data.issue_opened).toBe(false);\n\n                model.set('issueOpened', true);\n                data = model.toJSON();\n                expect(data.issue_opened).toBe(true);\n            });\n        });\n\n        describe('issue_status field', function() {\n            it('When not loaded', function() {\n                model.set('issueStatus', RB.BaseComment.STATE_DROPPED);\n                const data = model.toJSON();\n                expect(data.issue_status).toBe(undefined);\n            });\n\n            it('When loaded and parent is not public', function() {\n                parentObject.set('public', false);\n\n                model.set({\n                    loaded: true,\n                    issueStatus: RB.BaseComment.STATE_DROPPED,\n                    parentObject: parentObject,\n                });\n\n                const data = model.toJSON();\n                expect(data.issue_status).toBe(undefined);\n            });\n\n            it('When loaded and parent is public', function() {\n                parentObject.set('public', true);\n\n                model.set({\n                    loaded: true,\n                    issueStatus: RB.BaseComment.STATE_DROPPED,\n                    parentObject: parentObject,\n                });\n\n                const data = model.toJSON();\n                expect(data.issue_status).toBe(RB.BaseComment.STATE_DROPPED);\n            });\n        });\n\n        describe('richText field', function() {\n            it('With true', function() {\n                model.set('richText', true);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('markdown');\n            });\n\n            it('With false', function() {\n                model.set('richText', false);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('plain');\n            });\n        });\n\n        describe('text field', function() {\n            it('With value', function() {\n                model.set('text', 'foo');\n                const data = model.toJSON();\n                expect(data.text).toBe('foo');\n            });\n        });\n    });\n\n    describe('validate', function() {\n        describe('issueState', function() {\n            it('STATE_DROPPED', function() {\n                expect(model.validate({\n                    issueStatus: RB.BaseComment.STATE_DROPPED,\n                })).toBe(undefined);\n            });\n\n            it('STATE_OPEN', function() {\n                expect(model.validate({\n                    issueStatus: RB.BaseComment.STATE_OPEN,\n                })).toBe(undefined);\n            });\n\n            it('STATE_RESOLVED', function() {\n                expect(model.validate({\n                    issueStatus: RB.BaseComment.STATE_RESOLVED,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    issueStatus: '',\n                })).toBe(undefined);\n\n                expect(model.validate({\n                    issueStatus: undefined,\n                })).toBe(undefined);\n\n                expect(model.validate({\n                    issueStatus: null,\n                })).toBe(undefined);\n            });\n\n            it('Invalid values', function() {\n                expect(model.validate({\n                    issueStatus: 'foobar',\n                })).toBe(strings.INVALID_ISSUE_STATUS);\n            });\n        });\n\n        describe('parentObject', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    parentObject: parentObject,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    parentObject: null,\n                })).toBe(RB.BaseResource.strings.UNSET_PARENT_OBJECT);\n            });\n        });\n    });\n});\n"]}