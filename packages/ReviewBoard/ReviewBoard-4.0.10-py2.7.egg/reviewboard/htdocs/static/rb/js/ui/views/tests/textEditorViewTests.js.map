{"version":3,"sources":["textEditorViewTests.es6.js"],"names":[],"mappings":"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","file":"textEditorViewTests.js","sourcesContent":["suite('rb/ui/views/TextEditorView', function() {\n    let view;\n\n    beforeEach(function() {\n        RB.DnDUploader.create();\n    });\n\n    afterEach(function() {\n        RB.DnDUploader.instance = null;\n    });\n\n    describe('Construction', function() {\n        it('Initial text', function() {\n            view = new RB.TextEditorView({\n                text: 'Test',\n            });\n            view.render();\n\n            expect(view.getText()).toBe('Test');\n        });\n\n        describe('Text field wrapper', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.render();\n                view.show();\n\n                expect(view.richText).toBe(false);\n                expect(view.$el.children('textarea').length).toBe(1);\n                expect(view.$el.children('.CodeMirror').length).toBe(0);\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.render();\n                view.show();\n\n                expect(view.richText).toBe(true);\n                expect(view.$el.children('textarea').length).toBe(0);\n                expect(view.$el.children('.CodeMirror').length).toBe(1);\n            });\n        });\n\n        describe('Default richText', function() {\n            describe('If user default is true', function() {\n                beforeEach(function() {\n                    RB.UserSession.instance.set('defaultUseRichText', true);\n                });\n\n                it('And richText unset', function() {\n                    view = new RB.TextEditorView();\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=true', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=false', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n            });\n\n            describe('If user default is false', function() {\n                beforeEach(function() {\n                    RB.UserSession.instance.set('defaultUseRichText', false);\n                });\n\n                it('And richText unset', function() {\n                    view = new RB.TextEditorView();\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n\n                it('And richText=true', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=false', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n        });\n    });\n\n    describe('Operations', function() {\n        describe('bindRichTextAttr', function() {\n            let myModel;\n\n            beforeEach(function() {\n                myModel = new Backbone.Model({\n                    richText: false,\n                });\n\n                view = new RB.TextEditorView();\n            });\n\n            it('Updates on change', function() {\n                view.bindRichTextAttr(myModel, 'richText');\n                expect(view.richText).toBe(false);\n\n                myModel.set('richText', true);\n                expect(view.richText).toBe(true);\n            });\n\n            describe('Initial richText value', function() {\n                it('true', function() {\n                    myModel.set('richText', true);\n                    view.bindRichTextAttr(myModel, 'richText');\n\n                    expect(view.richText).toBe(true);\n                });\n\n                it('false', function() {\n                    myModel.set('richText', false);\n                    view.bindRichTextAttr(myModel, 'richText');\n\n                    expect(view.richText).toBe(false);\n                });\n            });\n        });\n\n        describe('bindRichTextCheckbox', function() {\n            let $checkbox;\n\n            beforeEach(function() {\n                $checkbox = $('<input type=\"checkbox\">');\n\n                view = new RB.TextEditorView();\n                view.setRichText(false);\n            });\n\n            it('Checkbox reflects richText', function() {\n                view.bindRichTextCheckbox($checkbox);\n                expect($checkbox.prop('checked')).toBe(false);\n\n                view.setRichText(true);\n                expect($checkbox.prop('checked')).toBe(true);\n            });\n\n            describe('richText reflects checkbox', function() {\n                it('Checked', function() {\n                    view.setRichText(false);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    $checkbox\n                        .prop('checked', true)\n                        .triggerHandler('change');\n\n                    expect(view.richText).toBe(true);\n                });\n\n                it('Unchecked', function() {\n                    view.setRichText(true);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    $checkbox\n                        .prop('checked', false)\n                        .triggerHandler('change');\n\n                    expect(view.richText).toBe(false);\n                });\n            });\n\n            describe('Initial checked state', function() {\n                it('richText=true', function() {\n                    view.setRichText(true);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    expect($checkbox.prop('checked')).toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.setRichText(false);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    expect($checkbox.prop('checked')).toBe(false);\n                });\n            });\n        });\n\n        describe('bindRichTextVisibility', function() {\n            let $el;\n\n            beforeEach(function() {\n                $el = $('<div>');\n\n                view = new RB.TextEditorView();\n                view.setRichText(false);\n            });\n\n            describe('Initial visibility', function() {\n                it('richText=true', function() {\n                    $el.hide();\n\n                    view.setRichText(true);\n                    view.bindRichTextVisibility($el);\n\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.bindRichTextVisibility($el);\n\n                    expect($el.css('display')).toBe('none');\n                });\n            });\n\n            describe('Toggles visibility on change', function() {\n                it('richText=true', function() {\n                    $el.hide();\n\n                    view.bindRichTextVisibility($el);\n                    expect($el.css('display')).toBe('none');\n\n                    view.setRichText(true);\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.setRichText(true);\n                    view.bindRichTextVisibility($el);\n\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n\n                    view.setRichText(false);\n                    expect($el.css('display')).toBe('none');\n                });\n            });\n        });\n\n        describe('setRichText', function() {\n            it('Emits change:richText', function() {\n                let emitted = false;\n\n                view.on('change:richText', function() {\n                    emitted = true;\n                });\n\n                view.show();\n                view.richText = false;\n                view.setRichText(true);\n\n                expect(emitted).toBe(true);\n            });\n\n            it('Emits change', function() {\n                let emitted = false;\n\n                view.on('change', function() {\n                    emitted = true;\n                });\n\n                view.show();\n                view.richText = false;\n                view.setRichText(true);\n\n                expect(emitted).toBe(true);\n            });\n\n            it('Marks dirty', function() {\n                view.show();\n                view.richText = false;\n                expect(view.isDirty()).toBe(false);\n\n                view.setRichText(true);\n                expect(view.isDirty()).toBe(true);\n            });\n\n            describe('Markdown to Text', function() {\n                beforeEach(function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                });\n\n                it('If shown', function() {\n                    view.show();\n                    view.setRichText(false);\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n\n                it('If hidden', function() {\n                    view.setRichText(false);\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n\n            describe('Text to Markdown', function() {\n                beforeEach(function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                });\n\n                it('If shown', function() {\n                    view.show();\n                    view.setRichText(true);\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('If hidden', function() {\n                    view.setRichText(true);\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n        });\n\n        describe('setText', function() {\n            describe('If shown', function() {\n                it('If plain text', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.show();\n                    view.setText('Test');\n\n                    expect(view.$('textarea').val()).toBe('Test');\n                });\n\n                it('If Markdown', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.show();\n                    view.setText('Test');\n\n                    expect(view._editor._codeMirror.getValue()).toBe('Test');\n                });\n            });\n\n            it('If hidden', function() {\n                view = new RB.TextEditorView();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n        });\n\n        describe('getText', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n        });\n\n        describe('insertLine', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n                view.setText('Test');\n                view.insertLine('Test');\n\n                expect(view.getText()).toBe('Test\\nTest');\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText:true,\n                });\n                view.show();\n                view.setText('Test');\n                view.insertLine('Test');\n\n                expect(view.getText()).toBe('Test\\nTest');\n            });\n        });\n\n        describe('show', function() {\n            it('registers drop target if rich text', function() {\n                spyOn(RB.DnDUploader.instance, 'registerDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n\n                expect(RB.DnDUploader.instance.registerDropTarget)\n                    .toHaveBeenCalled();\n            });\n\n            it('does not register drop target if plain text', function() {\n                spyOn(RB.DnDUploader.instance, 'registerDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n\n                expect(RB.DnDUploader.instance.registerDropTarget)\n                    .not.toHaveBeenCalled();\n            });\n        });\n\n        describe('hide', function() {\n            it('disables drop target', function() {\n                spyOn(RB.DnDUploader.instance, 'unregisterDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n                view.hide();\n\n                expect(RB.DnDUploader.instance.unregisterDropTarget)\n                    .toHaveBeenCalled();\n            });\n        });\n    });\n\n    describe('inlineEditor options', function() {\n        let $el;\n        let $buttons;\n        let $markdownCheckbox;\n\n        function setupEditor(options) {\n            $el = $('<textarea>').inlineEditor(\n                RB.TextEditorView.getInlineEditorOptions(options));\n            view = $el.inlineEditor('field').data('text-editor');\n\n            $el.inlineEditor('startEdit');\n\n            $buttons = $el.inlineEditor('buttons');\n            expect($buttons.length).toBe(1);\n\n            $markdownCheckbox = $buttons.find('input[type=checkbox]');\n            expect($markdownCheckbox.length).toBe(1);\n        }\n\n        describe('Rich text checkbox', function() {\n            function setChecked(checked) {\n                /*\n                 * All this is needed to get Firefox and Chrome to play nice.\n                 */\n                $markdownCheckbox\n                    .click()\n                    .prop('checked', checked)\n                    .trigger('change');\n            }\n\n            it('Checking', function() {\n                setupEditor({\n                    richText: false,\n                });\n\n                expect($markdownCheckbox.prop('checked')).toBe(false);\n\n                setChecked(true);\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n                expect(view.richText).toBe(true);\n            });\n\n            it('Unchecking', function() {\n                setupEditor({\n                    richText: true,\n                });\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n\n                setChecked(false);\n\n                expect($markdownCheckbox.prop('checked')).toBe(false);\n                expect(view.richText).toBe(false);\n            });\n\n            it('Resets after cancel', function() {\n                setupEditor({\n                    richText: true,\n                });\n\n                setChecked(false);\n\n                $el.inlineEditor('cancel');\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n                expect(view.richText).toBe(true);\n                expect(view.isDirty()).toBe(false);\n            });\n\n            describe('Initial state', function() {\n                it('If plain text', function() {\n                    setupEditor({\n                        richText: false,\n                    });\n\n                    expect($markdownCheckbox.prop('checked')).toBe(false);\n                });\n\n                it('If Markdown', function() {\n                    setupEditor({\n                        richText: true,\n                    });\n\n                    expect($markdownCheckbox.prop('checked')).toBe(true);\n                });\n            });\n        });\n    });\n\n    describe('Drag and Drop', function() {\n        beforeEach(function() {\n            view = new RB.TextEditorView({\n                richText: true,\n            });\n        });\n\n        describe('_isImage', function() {\n            it('correctly checks mimetype', function() {\n                const file = {\n                    type: 'image/jpeg',\n                    name: 'testimage.jpg',\n                };\n\n                expect(view._isImage(file)).toBe(true);\n            });\n\n            it('checks filename extension', function() {\n                const file = {\n                    name: 'testimage.jpg',\n                };\n\n                expect(view._isImage(file)).toBe(true);\n            });\n\n            it('returns false when given invalid type', function() {\n                const file = {\n                    type: 'application/json',\n                    name: 'testimage.jps',\n                };\n\n                expect(view._isImage(file)).toBe(false);\n            });\n        });\n    });\n});\n"]}