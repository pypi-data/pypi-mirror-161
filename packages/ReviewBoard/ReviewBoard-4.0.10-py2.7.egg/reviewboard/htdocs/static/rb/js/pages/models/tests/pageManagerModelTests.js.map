{"version":3,"sources":["pageManagerModelTests.es6.js"],"names":[],"mappings":"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","file":"pageManagerModelTests.js","sourcesContent":["suite('rb/pages/models/PageManager', function() {\n    let pageManager;\n    let page;\n\n    beforeEach(function() {\n        pageManager = new RB.PageManager();\n        page = new Backbone.View();\n\n        spyOn(page, 'render');\n    });\n\n    describe('Instance', function() {\n        let callbacks;\n        let expectedRender;\n\n        beforeEach(function() {\n            expectedRender = false;\n\n            callbacks = {\n                cb: _page => {\n                    expect(_page).toBe(page);\n                    expect(pageManager.get('rendered')).toBe(expectedRender);\n                },\n            };\n\n            spyOn(callbacks, 'cb');\n        });\n\n        describe('Methods', function() {\n            describe('beforeReady', function() {\n                it('Without page set', function() {\n                    pageManager.beforeRender(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n\n                    pageManager.set('page', page);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, not rendered', function() {\n                    pageManager.set('page', page);\n                    pageManager.set('rendered', false);\n\n                    pageManager.beforeRender(callbacks.cb);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, rendered', function() {\n                    pageManager.set({\n                        page: page,\n                        rendered: true,\n                    });\n\n                    expect(() => pageManager.beforeRender(callbacks.cb))\n                        .toThrow();\n\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n                });\n            });\n\n            describe('ready', function() {\n                it('Without page set', function() {\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(true);\n                    expect(page.render).toHaveBeenCalled();\n\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, not rendered', function() {\n                    /* Prevent the page from rendering for this test. */\n                    spyOn(pageManager, '_renderPage');\n\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(false);\n                    expect(page.render).not.toHaveBeenCalled();\n\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n                });\n\n                it('With page set, rendered', function() {\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(true);\n                    expect(page.render).toHaveBeenCalled();\n\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n            });\n        });\n    });\n\n    describe('Class methods', function() {\n        let oldInstance;\n\n        beforeEach(function() {\n            oldInstance = RB.PageManager.instance;\n            RB.PageManager.instance = pageManager;\n        });\n\n        afterEach(function() {\n            RB.PageManager.instance = oldInstance;\n        });\n\n        it('beforeRender', function() {\n            spyOn(RB.PageManager.instance, 'beforeRender');\n            RB.PageManager.beforeRender(1, 2);\n            expect(RB.PageManager.instance.beforeRender)\n                .toHaveBeenCalledWith(1, 2);\n        });\n\n        it('ready', function() {\n            spyOn(RB.PageManager.instance, 'ready');\n            RB.PageManager.ready(1, 2);\n            expect(RB.PageManager.instance.ready)\n                .toHaveBeenCalledWith(1, 2);\n        });\n\n        it('setPage', function() {\n            const page = new Backbone.View();\n            RB.PageManager.setPage(page);\n            expect(pageManager.get('page')).toBe(page);\n        });\n\n        it('getPage', function() {\n            const page = new Backbone.View();\n            pageManager.set('page', page);\n            expect(RB.PageManager.getPage()).toBe(page);\n        });\n    });\n});\n"]}