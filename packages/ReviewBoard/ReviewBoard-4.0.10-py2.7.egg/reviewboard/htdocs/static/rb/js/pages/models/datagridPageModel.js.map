{"version":3,"sources":["datagridPageModel.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,YAAH,GAAkB,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe;EAC7B,QAAQ,EAAE,CAAC,CAAC,QAAF,CAAW;IACjB,KAAK,EAAE,CADU;IAEjB,aAAa,EAAE;EAFE,CAAX,EAGP,EAAE,CAAC,IAAH,CAAQ,SAAR,CAAkB,QAHX,CADmB;;EAM7B;EACA,aAAa,EAAE,IAPc;;EAS7B;AACJ;AACA;EACI,UAAU,GAAG;IACT,KAAK,SAAL,GAAiB,IAAI,QAAQ,CAAC,UAAb,CAAwB,EAAxB,EAA4B;MACzC,KAAK,EAAE,KAAK;IAD6B,CAA5B,CAAjB;IAIA,KAAK,QAAL,CAAc,KAAK,SAAnB,EAA8B,kBAA9B,EACc,MAAM,KAAK,GAAL,CAAS,OAAT,EAAkB,KAAK,SAAL,CAAe,MAAjC,CADpB;EAEH,CAnB4B;;EAqB7B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,CAAC,EAAD,EAAK;IACP,MAAM,aAAa,GAAG,KAAK,GAAL,CAAS,eAAT,CAAtB;IAEA,KAAK,SAAL,CAAe,GAAf,CAAmB;MACf,EAAE,EAAE,EADW;MAEf,eAAe,EAAE,aAAa,eAAQ,aAAR,SAA2B;IAF1C,CAAnB;EAIH,CAnC4B;;EAqC7B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,QAAQ,CAAC,EAAD,EAAK;IACT,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,SAAL,CAAe,GAAf,CAAmB,EAAnB,CAAtB;EACH,CA9C4B;;EAgD7B;AACJ;AACA;EACI,cAAc,GAAG;IACb,KAAK,SAAL,CAAe,KAAf;EACH;;AArD4B,CAAf,CAAlB","file":"datagridPageModel.js","sourcesContent":["/**\n * Models a generic datagrid.\n *\n * This will keep track of any selected objects, allowing subclasses to easily\n * perform operations on them.\n */\nRB.DatagridPage = RB.Page.extend({\n    defaults: _.defaults({\n        count: 0,\n        localSiteName: null,\n    }, RB.Page.prototype.defaults),\n\n    /* The type of object each row represents, for use in batch selection. */\n    rowObjectType: null,\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        this.selection = new Backbone.Collection([], {\n            model: this.rowObjectType,\n        });\n\n        this.listenTo(this.selection, 'add remove reset',\n                      () => this.set('count', this.selection.length));\n    },\n\n    /**\n     * Add a selected row to be used for any actions.\n     *\n     * Args:\n     *     id (string):\n     *         The ID of the selected row.\n     */\n    select(id) {\n        const localSiteName = this.get('localSiteName');\n\n        this.selection.add({\n            id: id,\n            localSitePrefix: localSiteName ? `s/${localSiteName}/` : null,\n        });\n    },\n\n    /**\n     * Remove a selected row.\n     *\n     * Args:\n     *     id (string):\n     *         The ID of the row to remove.\n     */\n    unselect(id) {\n        this.selection.remove(this.selection.get(id));\n    },\n\n    /**\n     * Clear the list of selected rows.\n     */\n    clearSelection() {\n        this.selection.reset();\n    },\n});\n"]}