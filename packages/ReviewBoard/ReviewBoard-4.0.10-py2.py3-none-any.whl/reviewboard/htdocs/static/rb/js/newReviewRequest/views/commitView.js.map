{"version":3,"sources":["commitView.es6.js"],"names":[],"mappings":"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","file":"commitView.js","sourcesContent":["/**\n * A view for a committed revision.\n *\n * This is used specifically for new review request creation. A click on the\n * element will either navigate the page to the review request (if one exists),\n * or emit a 'create' event.\n */\nRB.CommitView = Backbone.View.extend({\n    className: 'commit',\n\n    /**\n     * Template for the main view.\n     */\n    template: _.template(dedent`\n        <div class=\"progress\">\n         <span class=\"fa fa-spinner fa-pulse\"></span>\n        </div>\n        <% if (accessible) { %>\n         <div class=\"summary\">\n          <% if (reviewRequestURL) { %>\n           <span class=\"fa fa-arrow-circle-right jump-to-commit\"/>\n          <% } %>\n          <%- summary %>\n         </div>\n        <% } %>\n        <div class=\"commit-info\">\n         <span class=\"revision\">\n          <span class=\"fa fa-code-fork\"></span>\n          <%- revision %>\n          <% if (!accessible) { %>\n           <%- RB.CommitView.strings.COMMIT_NOT_ACCESSIBLE %>\n          <% } %>\n         </span>\n         <% if (accessible && author) { %>\n          <span class=\"author\">\n           <span class=\"fa fa-user\"></span>\n           <%- author %>\n          </span>\n         <% } %>\n         <% if (date) { %>\n          <span class=\"time\">\n           <span class=\"fa fa-clock-o\"></span>\n           <time class=\"timesince\" datetime=\"<%- date %>\"></time>\n          </span>\n         <% } %>\n        </div>\n    `),\n\n    /**\n     * Template for the body content of the confirmation dialog.\n     */\n    _dialogBodyTemplate: _.template(dedent`\n        <p><%- prefixText %></p>\n        <p><code><%- commitID %>: <%- summary %></code></p>\n        <p><%- suffixText %></p>\n    `),\n\n    events: {\n        'click': '_onClick',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.CommitView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        if (!this.model.get('accessible')) {\n            this.$el.addClass('disabled');\n        }\n\n        let commitID = this.model.get('id');\n\n        if (commitID.length === 40) {\n            commitID = commitID.slice(0, 7);\n        }\n\n        if (this.model.get('reviewRequestURL')) {\n            this.$el.addClass('has-review-request');\n        }\n\n        const date = this.model.get('date');\n\n        this.$el.html(this.template(_.defaults({\n            revision: commitID,\n            author: this.model.get('authorName') || gettext('<unknown>'),\n            date: date ? date.toISOString() : null,\n        }, this.model.attributes)));\n\n        if (date) {\n            this.$('.timesince').timesince();\n        }\n\n        return this;\n    },\n\n    /**\n     * Handler for when the commit is clicked.\n     *\n     * Shows a confirmation dialog allowing the user to proceed or cancel.\n     */\n    _onClick() {\n        let commitID = this.model.get('id');\n\n        if (commitID.length > 7) {\n            commitID = commitID.slice(0, 7);\n        }\n\n        const dialogView = new RB.DialogView({\n            title: gettext('Create Review Request?'),\n            body: this._dialogBodyTemplate({\n                prefixText: gettext('You are creating a new review request from the following published commit:'),\n                commitID: commitID,\n                summary: this.model.get('summary'),\n                suffixText: gettext('Are you sure you want to continue?'),\n            }),\n            buttons: [\n                {\n                    id: 'cancel',\n                    label: gettext('Cancel'),\n                },\n                {\n                    id: 'create',\n                    label: gettext('Create Review Request'),\n                    primary: true,\n                    onClick: this._createReviewRequest.bind(this),\n                }\n            ]\n        });\n\n        dialogView.show();\n    },\n\n    /**\n     * Create a new review request for the selected commit.\n     *\n     * If a review request already exists for this commit, redirect the browser\n     * to it. If not, trigger the 'create' event.\n     */\n    _createReviewRequest() {\n        if (this.model.get('accessible')) {\n            const url = this.model.get('reviewRequestURL');\n\n            if (url) {\n                window.location = url;\n            } else {\n                this.model.trigger('create', this.model);\n            }\n        }\n    },\n\n    /**\n     * Toggle a progress indicator on for this commit.\n     */\n    showProgress() {\n        this.$('.progress').show();\n    },\n\n    /**\n     * Toggle a progress indicator off for this commit.\n     */\n    cancelProgress() {\n        this.$('.progress').hide();\n    },\n}, {\n    strings: {\n        COMMIT_NOT_ACCESSIBLE: gettext('(not accessible on this repository)'),\n    },\n});\n"]}