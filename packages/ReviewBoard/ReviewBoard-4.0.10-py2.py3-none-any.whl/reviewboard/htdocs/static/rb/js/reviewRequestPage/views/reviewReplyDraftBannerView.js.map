{"version":3,"sources":["reviewReplyDraftBannerView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,iBAAH,CAAqB,0BAArB,GAAkD,EAAE,CAAC,kBAAH,CAAsB,MAAtB,CAA6B;EAC3E,SAAS,EAAE,QADgE;EAG3E,QAAQ,EAAE,CAAC,CAAC,QAAF,saAHiE;EAoB3E,MAAM,EAAE;IACJ,yBAAyB,mBADrB;IAEJ,yBAAyB;EAFrB,CApBmE;;EAyB3E;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,EAAE,CAAC,kBAAH,CAAsB,SAAtB,CAAgC,MAAhC,CAAuC,IAAvC,CAA4C,IAA5C;IAEA,MAAM,mBAAmB,GAAG,KAAK,OAAL,CAAa,mBAAzC;IAEA,KAAK,GAAL,CAAS,IAAT,CAAc,KAAK,QAAL,CAAc;MACxB,SAAS,mCADe;MAExB,YAAY,8CAFY;MAGxB,WAAW,oBAHa;MAIxB,WAAW,oBAJa;MAKxB,aAAa,wBALW;MAMxB,aAAa,EAAE,mBAAmB,CAAC,GAApB,CAAwB,eAAxB;IANS,CAAd,CAAd;IASA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,mBAA1B,EACc,MAAM,KAAK,CAAL,CAAO,OAAP,EAAgB,IAAhB,CAAqB,UAArB,EAAiC,IAAjC,CADpB;IAEA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,OAA1B,EACc,MAAM,KAAK,CAAL,CAAO,OAAP,EAAgB,IAAhB,CAAqB,UAArB,EAAiC,KAAjC,CADpB;IAEA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,cAA1B,EACc,SAAS,IAAI,KAAK,CAAC,SAAD,CADhC;IAGA,OAAO,IAAP;EACH,CAtD0E;;EAwD3E;AACJ;AACA;AACA;AACA;EACI,iBAAiB,GAAG;IAChB,MAAM,UAAU,GAAG,KAAK,CAAL,CAAO,aAAP,CAAnB;IAEA,KAAK,KAAL,CAAW,OAAX,CAAmB;MACf,OAAO,EAAE,UAAU,CAAC,MAAX,KAAsB,CAAtB,IAA2B,CAAC,UAAU,CAAC,EAAX,CAAc,UAAd;IADtB,CAAnB,EAEG,IAFH;EAGH,CAnE0E;;EAqE3E;AACJ;AACA;AACA;AACA;EACI,iBAAiB,GAAG;IAChB,KAAK,KAAL,CAAW,OAAX;EACH;;AA5E0E,CAA7B,CAAlD","file":"reviewReplyDraftBannerView.js","sourcesContent":["/**\n * A banner that represents a pending reply to a review.\n *\n * The banner offers actions for publishing and discarding the review.\n */\nRB.ReviewRequestPage.ReviewReplyDraftBannerView = RB.FloatingBannerView.extend({\n    className: 'banner',\n\n    template: _.template(dedent`\n        <h1><%- draftText %></h1>\n        <p><%- reminderText %></p>\n        <span class=\"banner-actions\">\n         <input type=\"button\" value=\"<%- publishText %>\"\n                class=\"publish-button\" />\n         <input type=\"button\" value=\"<%- discardText %>\"\n                class=\"discard-button\" />\n        </span>\n        <% if (showSendEmail) { %>\n         <label>\n          <input type=\"checkbox\" class=\"send-email\" checked />\n          <%- sendEmailText %>\n        </label>\n        <% } %>\n    `),\n\n    events: {\n        'click .publish-button': '_onPublishClicked',\n        'click .discard-button': '_onDiscardClicked',\n    },\n\n    /**\n     * Render the banner.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyDraftBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        RB.FloatingBannerView.prototype.render.call(this);\n\n        const reviewRequestEditor = this.options.reviewRequestEditor;\n\n        this.$el.html(this.template({\n            draftText: gettext('This reply is a draft.'),\n            reminderText: gettext('Be sure to publish when finished.'),\n            publishText: gettext('Publish'),\n            discardText: gettext('Discard'),\n            sendEmailText: gettext('Send E-Mail'),\n            showSendEmail: reviewRequestEditor.get('showSendEmail'),\n        }));\n\n        this.listenTo(this.model, 'saving destroying',\n                      () => this.$('input').prop('disabled', true));\n        this.listenTo(this.model, 'saved',\n                      () => this.$('input').prop('disabled', false));\n        this.listenTo(this.model, 'publishError',\n                      errorText => alert(errorText));\n\n        return this;\n    },\n\n    /**\n     * Handler for when Publish is clicked.\n     *\n     * Publishes the reply.\n     */\n    _onPublishClicked() {\n        const $sendEmail = this.$('.send-email');\n\n        this.model.publish({\n            trivial: $sendEmail.length === 1 && !$sendEmail.is(':checked'),\n        }, this);\n    },\n\n    /**\n     * Handler for when Discard is clicked.\n     *\n     * Discards the reply.\n     */\n    _onDiscardClicked() {\n        this.model.destroy();\n    },\n});\n"]}