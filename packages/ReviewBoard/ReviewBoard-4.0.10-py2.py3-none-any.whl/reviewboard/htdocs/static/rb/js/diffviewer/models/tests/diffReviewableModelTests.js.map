{"version":3,"sources":["diffReviewableModelTests.es6.js"],"names":[],"mappings":"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","file":"diffReviewableModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffReviewable', function() {\n    let callbacks;\n    let reviewRequest;\n\n    beforeEach(function() {\n        callbacks = {\n            success: function() {},\n            error: function() {},\n            complete: function() {},\n        };\n\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/1/',\n        });\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n        spyOn(callbacks, 'complete');\n    });\n\n    describe('getRenderedDiff', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With base FileDiff', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                baseFileDiffID: 1,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?base-filediff-id=1&index=4&_=' +\n                    TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('getRenderedDiffFragment', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With base filediff ID', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                baseFileDiffID: 123,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/' +\n                    '?base-filediff-id=123&index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With base filediff ID', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                baseFileDiffID: 123,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/' +\n                    '?base-filediff-id=123&index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}