{"version":3,"sources":["commentEditorModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,yBAAD,EAA4B,YAAW;EACxC,IAAI,MAAJ;EACA,IAAI,aAAJ;EACA,IAAI,OAAJ;;EAEA,SAAS,aAAT,GAAyB;IACrB,OAAO,IAAI,EAAE,CAAC,WAAP,CAAmB;MACtB,YAAY,EAAE,IAAI,EAAE,CAAC,YAAP,CAAoB;QAC9B,UAAU;MADoB,CAApB;IADQ,CAAnB,CAAP;EAKH;;EAED,UAAU,CAAC,YAAW;IAClB,aAAa,GAAG,IAAI,EAAE,CAAC,aAAP,EAAhB;IAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;MAC1B,OAAO,EAAE,IADiB;MAE1B,aAAa,EAAE;IAFW,CAArB,CAAT;EAIH,CAPS,CAAV;EASA,QAAQ,CAAC,oBAAD,EAAuB,YAAW;IACtC,QAAQ,CAAC,SAAD,EAAY,YAAW;MAC3B,EAAE,CAAC,mCAAD,EAAsC,YAAW;QAC/C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,eAA5B,EAA6C,IAA7C;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,IAAnC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,kCAAD,EAAqC,YAAW;QAC9C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,eAA5B,EAA6C,IAA7C;QACA,aAAa,CAAC,GAAd,CAAkB,UAAlB,EAA8B,IAA9B;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;MACH,CARC,CAAF;MAUA,EAAE,CAAC,iBAAD,EAAoB,YAAW;QAC7B,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,eAA5B,EAA6C,KAA7C;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,2BAAD,EAA8B,YAAW;QACvC,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,eAA5B,EAA6C,KAA7C;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,OAAO,EAAE,IADiB;UAE1B,aAAa,EAAE;QAFW,CAArB,CAAT;QAIA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,IAAnC;MACH,CARC,CAAF;IASH,CAtCO,CAAR;IAwCA,QAAQ,CAAC,WAAD,EAAc,YAAW;MAC7B,EAAE,CAAC,8BAAD,EAAiC,YAAW;QAC1C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,qBAA5B,EAAmD,IAAnD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,IAArC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,qBAA5B,EAAmD,KAAnD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,KAArC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,2BAAD,EAA8B,YAAW;QACvC,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,qBAA5B,EAAmD,KAAnD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,SAAS,EAAE,IADe;UAE1B,aAAa,EAAE;QAFW,CAArB,CAAT;QAIA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,IAArC;MACH,CARC,CAAF;MAUA,EAAE,CAAC,mDAAD,EAAsD,YAAW;QAC/D,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,qBAA5B,EAAmD,IAAnD;QAEA,OAAO,GAAG,aAAa,EAAvB;QACA,OAAO,CAAC,GAAR,CAAY;UACR,MAAM,EAAE,KADA;UAER,WAAW,EAAE;QAFL,CAAZ;QAKA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,OAAO,EAAE,OADiB;UAE1B,aAAa,EAAE;QAFW,CAArB,CAAT;QAIA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,KAArC;MACH,CAdC,CAAF;IAeH,CA5CO,CAAR;IA8CA,QAAQ,CAAC,UAAD,EAAa,YAAW;MAC5B,EAAE,CAAC,8BAAD,EAAiC,YAAW;QAC1C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,IAAlD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,IAApC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,KAAlD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,aAAa,EAAE;QADW,CAArB,CAAT;QAGA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,KAApC;MACH,CAPC,CAAF;MASA,EAAE,CAAC,2BAAD,EAA8B,YAAW;QACvC,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,KAAlD;QAEA,MAAM,GAAG,IAAI,EAAE,CAAC,aAAP,CAAqB;UAC1B,QAAQ,EAAE,IADgB;UAE1B,aAAa,EAAE;QAFW,CAArB,CAAT;QAIA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,IAApC;MACH,CARC,CAAF;IASH,CA5BO,CAAR;EA6BH,CApHO,CAAR;EAsHA,QAAQ,CAAC,iBAAD,EAAoB,YAAW;IACnC,QAAQ,CAAC,4BAAD,EAA+B,YAAW;MAC9C,IAAI,OAAJ;MAEA,UAAU,CAAC,YAAW;QAClB,OAAO,GAAG,aAAa,EAAvB;QAEA,OAAO,CAAC,GAAR,CAAY;UACR,EAAE,EAAE,GADI;UAER,MAAM,EAAE,IAFA;UAGR,QAAQ,EAAE,IAHF;UAIR,IAAI,EAAE,kCAJE;UAKR,aAAa,EAAE;YACX,IAAI,EAAE;UADK,CALP;UAQR,kBAAkB,EAAE;YAChB,IAAI,EAAE;UADU;QARZ,CAAZ;MAYH,CAfS,CAAV;MAiBA,EAAE,CAAC,8BAAD,EAAiC,YAAW;QAC1C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,IAAlD;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,IAApC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,MAAX,CAAD,CAAN,CAA2B,IAA3B,CAAgC,wBAAhC;MACH,CARC,CAAF;MAUA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,KAAlD;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,IAApC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,MAAX,CAAD,CAAN,CAA2B,IAA3B,CAAgC,wBAAhC;MACH,CARC,CAAF;IASH,CAvCO,CAAR;IAyCA,QAAQ,CAAC,6BAAD,EAAgC,YAAW;MAC/C,IAAI,OAAJ;MAEA,UAAU,CAAC,YAAW;QAClB,OAAO,GAAG,aAAa,EAAvB;QAEA,OAAO,CAAC,GAAR,CAAY;UACR,EAAE,EAAE,GADI;UAER,MAAM,EAAE,IAFA;UAGR,QAAQ,EAAE,KAHF;UAIR,IAAI,EAAE,yBAJE;UAKR,aAAa,EAAE;YACX,IAAI,EAAE;UADK,CALP;UAQR,kBAAkB,EAAE;YAChB,IAAI,EAAE;UADU;QARZ,CAAZ;MAYH,CAfS,CAAV;MAiBA,EAAE,CAAC,8BAAD,EAAiC,YAAW;QAC1C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,IAAlD;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,IAApC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,MAAX,CAAD,CAAN,CAA2B,IAA3B,CAAgC,4BAAhC;MACH,CARC,CAAF;MAUA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,KAAlD;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAD,CAAN,CAA+B,IAA/B,CAAoC,KAApC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,MAAX,CAAD,CAAN,CAA2B,IAA3B,CAAgC,oBAAhC;MACH,CARC,CAAF;IASH,CAvCO,CAAR;EAwCH,CAlFO,CAAR;EAoFA,QAAQ,CAAC,mBAAD,EAAsB,YAAW;IACrC,QAAQ,CAAC,WAAD,EAAc,YAAW;MAC7B,EAAE,CAAC,kBAAD,EAAqB,YAAW;QAC9B,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,KAArC;MACH,CAHC,CAAF;MAKA,EAAE,CAAC,0BAAD,EAA6B,YAAW;QACtC,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,aAAa,EAAnC;QAEA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,KAArC;MACH,CALC,CAAF;MAOA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,OAAO,CAAC,GAAR,CAAY;UACR,EAAE,EAAE,GADI;UAER,MAAM,EAAE;QAFA,CAAZ;QAIA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QAEA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,IAArC;MACH,CAVC,CAAF;MAYA,EAAE,CAAC,kDAAD,EAAqD,YAAW;QAC9D,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,OAAO,CAAC,GAAR,CAAY;UACR,EAAE,EAAE,GADI;UAER,MAAM,EAAE;QAFA,CAAZ;QAKA,MAAM,CAAC,GAAP,CAAW;UACP,OAAO,EAAE,KADF;UAEP,OAAO,EAAE;QAFF,CAAX;QAKA,MAAM,CAAC,MAAM,MAAM,CAAC,SAAP,EAAP,CAAN,CAAiC,OAAjC;QACA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,gBAAvB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,IAAhC,CAAqC,KAArC;MACH,CAfC,CAAF;IAgBH,CAzCO,CAAR;IA2CA,QAAQ,CAAC,SAAD,EAAY,YAAW;MAC3B,EAAE,CAAC,kBAAD,EAAqB,YAAW;QAC9B,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;MACH,CAHC,CAAF;MAKA,EAAE,CAAC,gCAAD,EAAmC,YAAW;QAC5C,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,KAAnB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,IAAnC;MACH,CANC,CAAF;MAQA,EAAE,CAAC,yCAAD,EAA4C,YAAW;QACrD,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;MACH,CALC,CAAF;MAOA,EAAE,CAAC,mCAAD,EAAsC,YAAW;QAC/C,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,EAAnB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,SAAX,CAAD,CAAN,CAA8B,IAA9B,CAAmC,KAAnC;MACH,CANC,CAAF;IAOH,CA5BO,CAAR;EA6BH,CAzEO,CAAR;EA2EA,QAAQ,CAAC,QAAD,EAAW,YAAW;IAC1B,QAAQ,CAAC,OAAD,EAAU,YAAW;MACzB,EAAE,CAAC,eAAD,EAAkB,YAAW;QAC3B,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;MACH,CAFC,CAAF;MAIA,EAAE,CAAC,mBAAD,EAAsB,YAAW;QAC/B,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,MAAM,CAAC,GAAP,CAAW,OAAX,EAAoB,IAApB;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;MACH,CANC,CAAF;MAQA,EAAE,CAAC,mBAAD,EAAsB,YAAW;QAC/B,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,aAAa,EAAnC;QACA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,KAAnB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,IAAjC;MACH,CALC,CAAF;MAOA,EAAE,CAAC,2BAAD,EAA8B,YAAW;QACvC,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,aAAa,EAAnC;QACA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,WAAX,EAAwB,MAAxB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,IAAjC;MACH,CALC,CAAF;MAOA,EAAE,CAAC,cAAD,EAAiB,YAAW;QAC1B,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QAEA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,KAAnB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,IAAjC;QAEA,KAAK,CAAC,OAAD,EAAU,MAAV,CAAL,CAAuB,GAAvB,CAA2B,QAA3B,CACI,CAAC,SAAD,EAAY,OAAZ,KAAwB,SAAS,CAAC,OAAV,CAAkB,IAAlB,CAAuB,OAAvB,CAD5B;QAGA,MAAM,CAAC,IAAP;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;MACH,CAbC,CAAF;MAeA,EAAE,CAAC,gBAAD,EAAmB,YAAW;QAC5B,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,OAAO,CAAC,GAAR,CAAY;UACR,EAAE,EAAE,GADI;UAER,MAAM,EAAE;QAFA,CAAZ;QAIA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QAEA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,KAAnB;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,IAAjC;QAEA,KAAK,CAAC,OAAD,EAAU,SAAV,CAAL,CAA0B,GAA1B,CAA8B,QAA9B,CACI,CAAC,SAAD,EAAY,OAAZ,KAAwB;UACpB,IAAI,SAAS,IAAI,SAAS,CAAC,OAA3B,EAAoC;YAChC,SAAS,CAAC,OAAV,CAAkB,IAAlB,CAAuB,OAAvB;UACH;QACJ,CALL;QAOA,MAAM,CAAC,aAAP;QACA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;MACH,CArBC,CAAF;IAsBH,CAhEO,CAAR;EAiEH,CAlEO,CAAR;EAoEA,QAAQ,CAAC,YAAD,EAAe,YAAW;IAC9B,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAM,CAAC,YAAP,CAAoB,MAApB,EAA4B,UAA5B;MACA,MAAM,CAAC,YAAP,CAAoB,MAApB,EAA4B,EAA5B;MAEA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,WAAX,CAAD,CAAN,CAAgC,OAAhC,CAAwC;QACpC,IAAI,EAAE,UAD8B;QAEpC,IAAI,EAAE;MAF8B,CAAxC;IAIH,CARC,CAAF;IAUA,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAM,CAAC,GAAP,CAAW,WAAX,EAAwB;QACpB,KAAK,EAAE;MADa,CAAxB;MAIA,MAAM,CAAC,MAAM,CAAC,YAAP,CAAoB,OAApB,CAAD,CAAN,CAAqC,IAArC,CAA0C,OAA1C;IACH,CANC,CAAF;IAQA,QAAQ,CAAC,WAAD,EAAc,YAAW;MAC7B,EAAE,CAAC,mBAAD,EAAsB,YAAW;QAC/B,MAAM,CAAC,GAAP,CAAW;UACP,OAAO,EAAE,aAAa,EADf;UAEP,OAAO,EAAE;QAFF,CAAX;QAKA,MAAM,CAAC,SAAP;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,UAA3C;MACH,CARC,CAAF;MAUA,EAAE,CAAC,oBAAD,EAAuB,YAAW;QAChC,MAAM,CAAC,GAAP,CAAW;UACP,OAAO,EAAE,aAAa,EADf;UAEP,OAAO,EAAE;QAFF,CAAX;QAKA,MAAM,CAAC,YAAW;UAAE,MAAM,CAAC,SAAP;QAAqB,CAAnC,CAAN,CAA2C,OAA3C;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,SAA3C;MACH,CARC,CAAF;MAUA,EAAE,CAAC,iBAAD,EAAoB,YAAW;QAC7B,MAAM,CAAC,YAAW;UAAE,MAAM,CAAC,SAAP;QAAqB,CAAnC,CAAN,CAA2C,OAA3C;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,UAA3C;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,SAA3C;MACH,CAJC,CAAF;IAKH,CA1BO,CAAR;IA4BA,QAAQ,CAAC,QAAD,EAAW,YAAW;MAC1B,UAAU,CAAC,YAAW;QAClB,KAAK,CAAC,MAAD,EAAS,OAAT,CAAL;QACA,KAAK,CAAC,MAAD,EAAS,SAAT,CAAL;MACH,CAHS,CAAV;MAKA,EAAE,CAAC,cAAD,EAAiB,YAAW;QAC1B,MAAM,OAAO,GAAG,aAAa,EAA7B;QACA,KAAK,CAAC,OAAD,EAAU,gBAAV,CAAL;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QAEA,MAAM,CAAC,MAAP;QACA,MAAM,CAAC,OAAO,CAAC,cAAT,CAAN,CAA+B,gBAA/B;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,oBAAvB,CAA4C,UAA5C;QACA,MAAM,CAAC,MAAM,CAAC,KAAR,CAAN,CAAqB,gBAArB;MACH,CATC,CAAF;MAWA,EAAE,CAAC,iBAAD,EAAoB,YAAW;QAC7B,MAAM,CAAC,MAAP;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,GAAvB,CAA2B,oBAA3B,CAAgD,UAAhD;QACA,MAAM,CAAC,MAAM,CAAC,KAAR,CAAN,CAAqB,gBAArB;MACH,CAJC,CAAF;IAKH,CAtBO,CAAR;IAwBA,QAAQ,CAAC,SAAD,EAAY,YAAW;MAC3B,IAAI,OAAJ;MAEA,UAAU,CAAC,YAAW;QAClB,OAAO,GAAG,aAAa,EAAvB;QAEA,KAAK,CAAC,OAAD,EAAU,SAAV,CAAL,CAA0B,GAA1B,CAA8B,QAA9B,CACI,CAAC,SAAD,EAAY,OAAZ,KAAwB;UACpB,IAAI,SAAS,IAAI,SAAS,CAAC,OAA3B,EAAoC;YAChC,SAAS,CAAC,OAAV,CAAkB,IAAlB,CAAuB,OAAvB;UACH;QACJ,CALL;QAQA,KAAK,CAAC,MAAD,EAAS,OAAT,CAAL;QACA,KAAK,CAAC,MAAD,EAAS,SAAT,CAAL;MACH,CAbS,CAAV;MAeA,EAAE,CAAC,sBAAD,EAAyB,YAAW;QAClC;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,GAAP,CAAW,WAAX,EAAwB,KAAxB;QAEA,MAAM,CAAC,MAAM,MAAM,CAAC,aAAP,EAAP,CAAN,CAAqC,OAArC;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,SAA3C;QACA,MAAM,CAAC,OAAO,CAAC,OAAT,CAAN,CAAwB,GAAxB,CAA4B,gBAA5B;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,GAAvB,CAA2B,oBAA3B,CAAgD,SAAhD;QACA,MAAM,CAAC,MAAM,CAAC,KAAR,CAAN,CAAqB,GAArB,CAAyB,gBAAzB;MACH,CAVC,CAAF;MAYA,EAAE,CAAC,qBAAD,EAAwB,YAAW;QACjC;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,GAAP,CAAW,WAAX,EAAwB,IAAxB;QAEA,MAAM,CAAC,aAAP;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,UAA3C;QACA,MAAM,CAAC,OAAO,CAAC,OAAT,CAAN,CAAwB,gBAAxB;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,oBAAvB,CAA4C,SAA5C;QACA,MAAM,CAAC,MAAM,CAAC,KAAR,CAAN,CAAqB,gBAArB;MACH,CAVC,CAAF;IAWH,CAzCO,CAAR;IA2CA,QAAQ,CAAC,MAAD,EAAS,YAAW;MACxB,IAAI,OAAJ;MAEA,UAAU,CAAC,YAAW;QAClB,OAAO,GAAG,aAAa,EAAvB;QACA,KAAK,CAAC,OAAD,EAAU,MAAV,CAAL,CAAuB,GAAvB,CAA2B,QAA3B,CAAoC,OAAO,IAAI;UAC3C,IAAI,OAAO,IAAI,OAAO,CAAC,OAAvB,EAAgC;YAC5B,OAAO,CAAC,OAAR;UACH;QACJ,CAJD;QAMA,KAAK,CAAC,MAAD,EAAS,SAAT,CAAL;MACH,CATS,CAAV;MAWA,EAAE,CAAC,oBAAD,EAAuB,YAAW;QAChC;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,KAAtB;QAEA,MAAM,CAAC,MAAM,MAAM,CAAC,IAAP,EAAP,CAAN,CAA4B,OAA5B;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,SAA3C;QACA,MAAM,CAAC,OAAO,CAAC,IAAT,CAAN,CAAqB,GAArB,CAAyB,gBAAzB;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,GAAvB,CAA2B,oBAA3B,CAAgD,OAAhD;MACH,CATC,CAAF;MAWA,EAAE,CAAC,mBAAD,EAAsB,YAAW;QAC/B;QACA,MAAM,IAAI,GAAG,SAAb;QACA,MAAM,WAAW,GAAG,IAApB;QAEA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,KAA3B;QACA,MAAM,CAAC,GAAP,CAAW,SAAX,EAAsB,OAAtB;QACA,MAAM,CAAC,GAAP,CAAW;UACP,IAAI,EAAE,IADC;UAEP,YAAY,EAAE,WAFP;UAGP,OAAO,EAAE,IAHF;UAIP,QAAQ,EAAE;QAJH,CAAX;QAMA,MAAM,CAAC,YAAP,CAAoB,OAApB,EAA6B,SAA7B;QAEA,MAAM,CAAC,IAAP;QACA,MAAM,CAAC,OAAO,CAAC,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAN,CAA2C,UAA3C;QACA,MAAM,CAAC,OAAO,CAAC,IAAT,CAAN,CAAqB,gBAArB;QACA,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,MAAZ,CAAD,CAAN,CAA4B,IAA5B,CAAiC,IAAjC;QACA,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,aAAZ,CAAD,CAAN,CAAmC,IAAnC,CAAwC,WAAxC;QACA,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,UAAZ,CAAD,CAAN,CAAgC,IAAhC,CAAqC,IAArC;QACA,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,WAAZ,CAAD,CAAN,CAAiC,OAAjC,CAAyC;UACrC,KAAK,EAAE,SAD8B;UAErC,oBAAoB,EAAE;QAFe,CAAzC;QAIA,MAAM,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAAD,CAAN,CAA4B,IAA5B,CAAiC,KAAjC;QACA,MAAM,CAAC,MAAM,CAAC,OAAR,CAAN,CAAuB,oBAAvB,CAA4C,OAA5C;MACH,CA3BC,CAAF;IA4BH,CArDO,CAAR;EAsDH,CAxKO,CAAR;AAyKH,CAxhBI,CAAL","file":"commentEditorModelTests.js","sourcesContent":["suite('rb/models/CommentEditor', function() {\n    let editor;\n    let reviewRequest;\n    let comment;\n\n    function createComment() {\n        return new RB.BaseComment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    }\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest();\n\n        editor = new RB.CommentEditor({\n            canEdit: true,\n            reviewRequest: reviewRequest,\n        });\n    });\n\n    describe('Attribute defaults', function() {\n        describe('canEdit', function() {\n            it('When logged in and hasDraft=false', function() {\n                RB.UserSession.instance.set('authenticated', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(true);\n            });\n\n            it('When logged in and hasDraft=true', function() {\n                RB.UserSession.instance.set('authenticated', true);\n                reviewRequest.set('hasDraft', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(false);\n            });\n\n            it('When logged out', function() {\n                RB.UserSession.instance.set('authenticated', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('authenticated', false);\n\n                editor = new RB.CommentEditor({\n                    canEdit: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(true);\n            });\n        });\n\n        describe('openIssue', function() {\n            it('When user preference is true', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(true);\n            });\n\n            it('When user preference is false', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', false);\n\n                editor = new RB.CommentEditor({\n                    openIssue: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(true);\n            });\n\n            it('When reloading the page with explicitly set value', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', true);\n\n                comment = createComment();\n                comment.set({\n                    loaded: false,\n                    issueOpened: false,\n                });\n\n                editor = new RB.CommentEditor({\n                    comment: comment,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(false);\n            });\n        });\n\n        describe('richText', function() {\n            it('When user preference is true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(true);\n            });\n\n            it('When user preference is false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n\n                editor = new RB.CommentEditor({\n                    richText: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(true);\n            });\n        });\n    });\n\n    describe('Loading comment', function() {\n        describe('With comment richText=true', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                    richText: true,\n                    text: '<p>this _is_ a <em>test</em></p>',\n                    rawTextFields: {\n                        text: 'this \\\\_is\\\\_ a _test_',\n                    },\n                    markdownTextFields: {\n                        text: 'this \\\\_is\\\\_ a _test_',\n                    },\n                });\n            });\n\n            it('When defaultUseRichText=true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a _test_');\n            });\n\n            it('When defaultUseRichText=false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a _test_');\n            });\n        });\n\n        describe('With comment richText=false', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                    richText: false,\n                    text: '<p>this _is_ a test</p>',\n                    rawTextFields: {\n                        text: 'this _is_ a _test_',\n                    },\n                    markdownTextFields: {\n                        text: 'this \\\\_is\\\\_ a \\\\_test\\\\_',\n                    },\n                });\n            });\n\n            it('When defaultUseRichText=true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a \\\\_test\\\\_');\n            });\n\n            it('When defaultUseRichText=false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(false);\n                expect(editor.get('text')).toBe('this _is_ a _test_');\n            });\n        });\n    });\n\n    describe('Capability states', function() {\n        describe('canDelete', function() {\n            it('When not editing', function() {\n                expect(editor.get('editing')).toBe(false);\n                expect(editor.get('canDelete')).toBe(false);\n            });\n\n            it('When editing new comment', function() {\n                editor.set('comment', createComment());\n\n                editor.beginEdit();\n                expect(editor.get('canDelete')).toBe(false);\n            });\n\n            it('When editing existing comment', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                expect(editor.get('canDelete')).toBe(true);\n            });\n\n            it('When editing existing comment with canEdit=false', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n\n                editor.set({\n                    canEdit: false,\n                    comment: comment,\n                });\n\n                expect(() => editor.beginEdit()).toThrow();\n                expect(console.assert).toHaveBeenCalled();\n                expect(editor.get('canDelete')).toBe(false);\n            });\n        });\n\n        describe('canSave', function() {\n            it('When not editing', function() {\n                expect(editor.get('editing')).toBe(false);\n                expect(editor.get('canSave')).toBe(false);\n            });\n\n            it('When editing comment with text', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                editor.set('text', 'Foo');\n                expect(editor.get('canSave')).toBe(true);\n            });\n\n            it('When editing comment with initial state', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                expect(editor.get('canSave')).toBe(false);\n            });\n\n            it('When editing comment without text', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                editor.set('text', '');\n                expect(editor.get('canSave')).toBe(false);\n            });\n        });\n    });\n\n    describe('States', function() {\n        describe('dirty', function() {\n            it('Initial state', function() {\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After new comment', function() {\n                const comment = createComment();\n                editor.set('dirty', true);\n                editor.set('comment', comment);\n\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After text change', function() {\n                editor.set('comment', createComment());\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n            });\n\n            it('After toggling Open Issue', function() {\n                editor.set('comment', createComment());\n                editor.beginEdit();\n                editor.set('openIssue', 'true');\n                expect(editor.get('dirty')).toBe(true);\n            });\n\n            it('After saving', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n\n                spyOn(comment, 'save').and.callFake(\n                    (callbacks, context) => callbacks.success.call(context));\n\n                editor.save();\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After deleting', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n\n                spyOn(comment, 'destroy').and.callFake(\n                    (callbacks, context) => {\n                        if (callbacks && callbacks.success) {\n                            callbacks.success.call(context);\n                        }\n                    }\n                );\n                editor.deleteComment();\n                expect(editor.get('dirty')).toBe(false);\n            });\n        });\n    });\n\n    describe('Operations', function() {\n        it('setExtraData', function() {\n            editor.setExtraData('key1', 'strvalue');\n            editor.setExtraData('key2', 42);\n\n            expect(editor.get('extraData')).toEqual({\n                key1: 'strvalue',\n                key2: 42,\n            });\n        });\n\n        it('getExtraData', function() {\n            editor.set('extraData', {\n                mykey: 'value',\n            });\n\n            expect(editor.getExtraData('mykey')).toBe('value');\n        });\n\n        describe('beginEdit', function() {\n            it('With canEdit=true', function() {\n                editor.set({\n                    comment: createComment(),\n                    canEdit: true,\n                });\n\n                editor.beginEdit();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n            });\n\n            it('With canEdit=false', function() {\n                editor.set({\n                    comment: createComment(),\n                    canEdit: false,\n                });\n\n                expect(function() { editor.beginEdit(); }).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n            });\n\n            it('With no comment', function() {\n                expect(function() { editor.beginEdit(); }).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(console.assert.calls.argsFor(1)[0]).toBeFalsy();\n            });\n        });\n\n        describe('cancel', function() {\n            beforeEach(function() {\n                spyOn(editor, 'close');\n                spyOn(editor, 'trigger');\n            });\n\n            it('With comment', function() {\n                const comment = createComment();\n                spyOn(comment, 'destroyIfEmpty');\n                editor.set('comment', comment);\n\n                editor.cancel();\n                expect(comment.destroyIfEmpty).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('canceled');\n                expect(editor.close).toHaveBeenCalled();\n            });\n\n            it('Without comment', function() {\n                editor.cancel();\n                expect(editor.trigger).not.toHaveBeenCalledWith('canceled');\n                expect(editor.close).toHaveBeenCalled();\n            });\n        });\n\n        describe('destroy', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                spyOn(comment, 'destroy').and.callFake(\n                    (callbacks, context) => {\n                        if (callbacks && callbacks.success) {\n                            callbacks.success.call(context);\n                        }\n                    }\n                );\n\n                spyOn(editor, 'close');\n                spyOn(editor, 'trigger');\n            });\n\n            it('With canDelete=false', function() {\n                /* Set these in order, to override canDelete. */\n                editor.set('comment', comment);\n                editor.set('canDelete', false);\n\n                expect(() => editor.deleteComment()).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n                expect(comment.destroy).not.toHaveBeenCalled();\n                expect(editor.trigger).not.toHaveBeenCalledWith('deleted');\n                expect(editor.close).not.toHaveBeenCalled();\n            });\n\n            it('With canDelete=true', function() {\n                /* Set these in order, to override canDelete. */\n                editor.set('comment', comment);\n                editor.set('canDelete', true);\n\n                editor.deleteComment();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(comment.destroy).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('deleted');\n                expect(editor.close).toHaveBeenCalled();\n            });\n        });\n\n        describe('save', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n                spyOn(comment, 'save').and.callFake(options => {\n                    if (options && options.success) {\n                        options.success();\n                    }\n                });\n\n                spyOn(editor, 'trigger');\n            });\n\n            it('With canSave=false', function() {\n                /* Set these in order, to override canSave. */\n                editor.set('comment', comment);\n                editor.set('canSave', false);\n\n                expect(() => editor.save()).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n                expect(comment.save).not.toHaveBeenCalled();\n                expect(editor.trigger).not.toHaveBeenCalledWith('saved');\n            });\n\n            it('With canSave=true', function() {\n                /* Set these in order, to override canSave. */\n                const text = 'My text';\n                const issueOpened = true;\n\n                comment.set('issueOpened', false);\n                editor.set('comment', comment);\n                editor.set({\n                    text: text,\n                    issue_opened: issueOpened,\n                    canSave: true,\n                    richText: true,\n                });\n                editor.setExtraData('mykey', 'myvalue');\n\n                editor.save();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(comment.save).toHaveBeenCalled();\n                expect(comment.get('text')).toBe(text);\n                expect(comment.get('issueOpened')).toBe(issueOpened);\n                expect(comment.get('richText')).toBe(true);\n                expect(comment.get('extraData')).toEqual({\n                    mykey: 'myvalue',\n                    require_verification: false,\n                });\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n        });\n    });\n});\n"]}