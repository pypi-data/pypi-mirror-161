{"version":3,"sources":["draftReviewRequestModel.es6.js"],"names":[],"mappings":"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","file":"draftReviewRequestModel.js","sourcesContent":["/**\n * The draft of a review request.\n *\n * This provides editing capabilities for a review request draft, as well\n * as the ability to publish and discard (destroy) a draft.\n */\nRB.DraftReviewRequest = RB.BaseResource.extend(_.defaults({\n    defaults() {\n        return _.defaults({\n            branch: null,\n            bugsClosed: null,\n            changeDescription: null,\n            changeDescriptionRichText: false,\n            dependsOn: [],\n            description: null,\n            descriptionRichText: false,\n            'public': null,\n            rawTextFields: null,\n            submitter: null,\n            summary: null,\n            targetGroups: [],\n            targetPeople: [],\n            testingDone: null,\n            testingDoneRichText: false\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'draft',\n    listKey: 'draft',\n    supportsExtraData: true,\n\n    expandedFields: ['depends_on', 'target_people', 'target_groups'],\n\n    extraQueryArgs: {\n        'force-text-type': 'html',\n        'include-text-types': 'raw'\n    },\n\n    attrToJsonMap: {\n        bugsClosed: 'bugs_closed',\n        changeDescription: 'changedescription',\n        changeDescriptionRichText: 'changedescription_text_type',\n        dependsOn: 'depends_on',\n        descriptionRichText: 'description_text_type',\n        targetGroups: 'target_groups',\n        targetPeople: 'target_people',\n        testingDone: 'testing_done',\n        testingDoneRichText: 'testing_done_text_type'\n    },\n\n    deserializedAttrs: [\n        'branch',\n        'bugsClosed',\n        'changeDescription',\n        'dependsOn',\n        'description',\n        'public',\n        'summary',\n        'targetGroups',\n        'targetPeople',\n        'testingDone'\n    ],\n\n    /**\n     * Return the URL to use when syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL to sync.\n     */\n    url() {\n        return this.get('parentObject').get('links').draft.href;\n    },\n\n    /**\n     * Create a FileAttachment object for this draft.\n     *\n     * Args:\n     *     attributes (object):\n     *         Attributes for the file attachment model.\n     *\n     * Returns:\n     *     RB.DraftFileAttachment:\n     *     The new file attachment object.\n     */\n    createFileAttachment(attributes) {\n        return new RB.DraftFileAttachment(_.defaults({\n            parentObject: this\n        }, attributes));\n    },\n\n    /**\n     * Publish the draft.\n     *\n     * The contents of the draft will be validated before being sent to the\n     * server in order to ensure that the appropriate fields are all there.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    publish(options={}, context=undefined) {\n        this.ready({\n            ready: () => {\n                const validationError = this.validate(this.attributes, {\n                    publishing: true\n                });\n\n                if (validationError) {\n                    if (_.isFunction(options.error)) {\n                        options.error.call(context, this, {\n                            errorText: validationError\n                        });\n                    }\n                } else {\n                    this.save(\n                        _.defaults({\n                            data: {\n                                'public': 1,\n                                trivial: options.trivial ? 1 : 0\n                            }\n                        }, options),\n                        context);\n                }\n            },\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    parseResourceData(rsp) {\n        const rawTextFields = rsp.raw_text_fields || rsp;\n        const data = RB.BaseResource.prototype.parseResourceData.call(\n            this, rsp);\n\n        data.submitter = rsp.links.submitter;\n        data.changeDescriptionRichText =\n            (rawTextFields.changedescription_text_type === 'markdown');\n        data.descriptionRichText =\n            (rawTextFields.description_text_type === 'markdown');\n        data.testingDoneRichText =\n            (rawTextFields.testing_done_text_type === 'markdown');\n        data.rawTextFields = rawTextFields || null;\n\n        return data;\n    }\n}, RB.DraftResourceModelMixin));\n"]}