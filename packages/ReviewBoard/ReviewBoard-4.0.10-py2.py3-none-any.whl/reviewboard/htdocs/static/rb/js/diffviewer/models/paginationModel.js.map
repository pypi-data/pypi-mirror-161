{"version":3,"sources":["paginationModel.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,UAAH,GAAgB,QAAQ,CAAC,KAAT,CAAe,MAAf,CAAsB;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,QAAQ,GAAG;IACP,OAAO;MACH,WAAW,EAAE,IADV;MAEH,OAAO,EAAE,KAFN;MAGH,WAAW,EAAE,KAHV;MAIH,WAAW,EAAE,KAJV;MAKH,QAAQ,EAAE,IALP;MAMH,WAAW,EAAE,EANV;MAOH,KAAK,EAAE,CAPJ;MAQH,YAAY,EAAE;IARX,CAAP;EAUH,CAnBiC;;EAqBlC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,KAAK,CAAC,GAAD,EAAM;IACP,OAAO;MACH,WAAW,EAAE,GAAG,CAAC,YADd;MAEH,OAAO,EAAE,GAAG,CAAC,QAFV;MAGH,WAAW,EAAE,GAAG,CAAC,YAHd;MAIH,WAAW,EAAE,GAAG,CAAC,YAJd;MAKH,QAAQ,EAAE,GAAG,CAAC,SALX;MAMH,WAAW,EAAE,GAAG,CAAC,YANd;MAOH,KAAK,EAAE,GAAG,CAAC,KAPR;MAQH,YAAY,EAAE,GAAG,CAAC;IARf,CAAP;EAUH;;AA3CiC,CAAtB,CAAhB","file":"paginationModel.js","sourcesContent":["/**\n * A model representing pagination.\n *\n * Model Attributes:\n *     currentPage (number):\n *         The number of the current page.\n *\n *     hasNext (boolean):\n *         Whether there's a page after the current page.\n *\n *     hasPrevious (boolean):\n *         Whether there's a page before the current page.\n *\n *     isPaginated (boolean):\n *         Whether there are multiple pages.\n *\n *     nextPage (number):\n *         The number of the page after the current page.\n *\n *     pageNumbers (Array of number):\n *         A list of all the page numbers to display.\n *\n *     pages (number):\n *         The total number of pages.\n *\n *     previousPage (number):\n *         The number of the page before the current page.\n */\nRB.Pagination = Backbone.Model.extend({\n    /**\n     * Return the defaults for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The defaults for the model.\n     */\n    defaults() {\n        return {\n            currentPage: null,\n            hasNext: false,\n            hasPrevious: false,\n            isPaginated: false,\n            nextPage: null,\n            pageNumbers: [],\n            pages: 0,\n            previousPage: null,\n        };\n    },\n\n    /**\n     * Parse the data given to us by the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The data received from the server.\n     *\n     * Returns:\n     *     object:\n     *     The parsed result.\n     */\n    parse(rsp) {\n        return {\n            currentPage: rsp.current_page,\n            hasNext: rsp.has_next,\n            hasPrevious: rsp.has_previous,\n            isPaginated: rsp.is_paginated,\n            nextPage: rsp.next_page,\n            pageNumbers: rsp.page_numbers,\n            pages: rsp.pages,\n            previousPage: rsp.previous_page,\n        };\n    },\n});\n"]}