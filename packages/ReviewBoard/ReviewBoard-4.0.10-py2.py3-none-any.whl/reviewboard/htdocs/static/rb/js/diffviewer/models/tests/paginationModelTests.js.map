{"version":3,"sources":["paginationModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,iCAAD,EAAoC,YAAW;EAChD,IAAI,KAAJ;EAEA,UAAU,CAAC,YAAW;IAClB,KAAK,GAAG,IAAI,EAAE,CAAC,UAAP,EAAR;EACH,CAFS,CAAV;EAIA,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzB,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;QACnB,YAAY,EAAE,IADK;QAEnB,KAAK,EAAE,CAFY;QAGnB,YAAY,EAAE,IAHK;QAInB,QAAQ,EAAE,IAJS;QAKnB,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALK;QAMnB,aAAa,EAAE,CANI;QAOnB,SAAS,EAAE,CAPQ;QAQnB,YAAY,EAAE;MARK,CAAZ,CAAX;MAWA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;MACA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,IAA9B;MACA,MAAM,CAAC,IAAI,CAAC,KAAN,CAAN,CAAmB,IAAnB,CAAwB,CAAxB;MACA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,OAAzB,CAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjC;MACA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,IAA9B;MACA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,IAA1B;MACA,MAAM,CAAC,IAAI,CAAC,YAAN,CAAN,CAA0B,IAA1B,CAA+B,CAA/B;MACA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,CAA3B;MACA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,CAA9B;IACH,CArBC,CAAF;EAsBH,CAvBO,CAAR;AAwBH,CA/BI,CAAL","file":"paginationModelTests.js","sourcesContent":["suite('rb/diffviewer/models/Pagination', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.Pagination();\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            var data = model.parse({\n                is_paginated: true,\n                pages: 4,\n                has_previous: true,\n                has_next: true,\n                page_numbers: [1, 2, 3, 4],\n                previous_page: 1,\n                next_page: 3,\n                current_page: 2,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.isPaginated).toBe(true);\n            expect(data.pages).toBe(4);\n            expect(data.pageNumbers).toEqual([1, 2, 3, 4]);\n            expect(data.hasPrevious).toBe(true);\n            expect(data.hasNext).toBe(true);\n            expect(data.previousPage).toBe(1);\n            expect(data.nextPage).toBe(3);\n            expect(data.currentPage).toBe(2);\n        });\n    });\n});\n"]}