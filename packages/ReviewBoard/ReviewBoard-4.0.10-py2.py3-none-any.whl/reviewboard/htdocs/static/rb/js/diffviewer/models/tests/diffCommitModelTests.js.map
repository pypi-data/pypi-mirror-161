{"version":3,"sources":["diffCommitModelTests.es6.js"],"names":[],"mappings":"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","file":"diffCommitModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffCommit', function() {\n    describe('parse', function() {\n        it('Short commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: 'A commit message.\\n',\n                    id: 1,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: 'A commit message.',\n                id: 1,\n                parentID: 'r122',\n                summary: 'A commit message.',\n            });\n            expect(model.hasSummary()).toBe(false);\n        });\n\n        it('Long commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: dedent`\n                        This is a long commit message.\n\n                        It spans several lines.\n                        It has trailing newlines as well.\n\n\n                    `,\n                    id: 2,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: (\n                    'This is a long commit message.\\n\\n' +\n                    'It spans several lines.\\n' +\n                    'It has trailing newlines as well.'\n                ),\n                id: 2,\n                parentID: 'r122',\n                summary: 'This is a long commit message.',\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n\n        it('Commit message with overlong first line', function() {\n            const message = 'abcd'.repeat(100);\n            const summary = message.substr(0, 77) + '...';\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r234',\n                    commit_message: message,\n                    id: 3,\n                    parent_id: 'r233',\n                },\n                {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r234',\n                commitMessage: message,\n                id: 3,\n                parentID: 'r233',\n                summary: summary,\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n    });\n});\n"]}