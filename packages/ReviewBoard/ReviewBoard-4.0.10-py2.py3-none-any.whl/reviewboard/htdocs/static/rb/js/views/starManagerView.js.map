{"version":3,"sources":["starManagerView.es6.js"],"names":[],"mappings":"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","file":"starManagerView.js","sourcesContent":["/**\n * A manager for star buttons, for both datagrids and individual buttons.\n *\n * This view manages the state of review request and review group star status\n * in datagrids, as well as the star status for review requests on their\n * individual pages.\n */\nRB.StarManagerView = Backbone.View.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object, optional):\n     *         View initialization options.\n     *\n     * Option Args:\n     *     datagridMode (boolean):\n     *         Whether or not the manager is managing a datagrid.\n     */\n    initialize(options={}) {\n        const objects = this.model.get('objects');\n        const starred = this.model.get('starred');\n\n        this._datagridMode = options.datagridMode;\n\n        /*\n         * This doesn't use the view's events object to bind to _toggleStar\n         * because doing so interferes with event bubbling and handler order.\n         * We need the datagrid's click handler to run after this one, so we\n         * bind directly to the element rather than on the parent view.\n         */\n        this.$('div.star')\n            .on('click', this._toggleStar.bind(this))\n            .each((idx, el) => {\n            const $el = $(el);\n            const objType = $el.attr('data-object-type');\n            const objID = $el.attr('data-object-id');\n            const objStarred = (parseInt($el.attr('data-starred'), 10) === 1);\n            let obj;\n\n            if (objType === 'reviewrequests') {\n                obj = new RB.ReviewRequest({ id: objID });\n            } else if (objType === 'groups') {\n                obj = new RB.ReviewGroup({ id: objID });\n            } else if (objType !== undefined) {\n                console.assert('Unknown star object type: %s', objType);\n            } else {\n                /* Skip any stars that don't have an object type. */\n                return;\n            }\n\n            objects[objID] = obj;\n            starred[objID] = objStarred;\n        });\n\n        /*\n         * When the datagrid is in mobile mode, we have to keep track of any\n         * objects whose star status changes so that we can update the datagrid\n         * if it switches back to desktop mode.\n         */\n        this._watchUpdates = false;\n        this._toUpdate = {};\n\n        if (this._datagridMode) {\n            this.$el.on('datagridDisplayModeChanged', ($grid, options) => {\n                if (options.mode === 'desktop') {\n                    for (let objID in this._toUpdate) {\n                        if (this._toUpdate.hasOwnProperty(objID)) {\n                            this._updateStarColumn(objID);\n                        }\n                    }\n\n                    this._watchUpdates = false;\n                    this._toUpdate = {};\n                } else if (options.mode === 'mobile') {\n                    this._watchUpdates = true;\n                }\n            });\n\n            if (this.$el.attr('data-datagrid-display-mode') === 'mobile') {\n                this._watchUpdates = true;\n            }\n        }\n    },\n\n    /**\n     * Update a star column.\n     *\n     * This function is called when the datagrid changes from mobile to desktop\n     * model. Since datagrids copy the original DOM over the new one when the\n     * mode is changed to desktop, we must copy over relevant star attributes\n     * and classes when this happens.\n     *\n     * Args:\n     *     objID (string):\n     *         The object's unique ID, as a string.\n     */\n    _updateStarColumn(objID) {\n        const $el = this.$(`.star[data-object-id=\"${objID}\"]`);\n        const starred = this.model.get('starred')[objID];\n\n        $el\n            .toggleClass('rb-icon-star-on', starred)\n            .toggleClass('rb-icon-star-off', !starred)\n            .attr('title',\n                  starred ? gettext('Starred')\n                          : gettext('Click to star'));\n    },\n\n    /**\n     * Toggle an object being starred or unstarred.\n     *\n     * This function is called when a star icon is clicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _toggleStar(e) {\n        const $target = $(e.target);\n        const objID = $target.attr('data-object-id');\n        const obj = this.model.get('objects')[objID];\n        const starred = this.model.get('starred');\n        const objStarred = !starred[objID];\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (RB.UserSession.instance.get('readOnly')) {\n            return;\n        }\n\n        obj.setStarred(objStarred);\n        starred[objID] = objStarred;\n\n        if (this._watchUpdates) {\n            if (this._toUpdate.hasOwnProperty(objID)) {\n                delete this._toUpdate[objID];\n            } else {\n                this._toUpdate[objID] = true;\n            }\n        }\n\n        $target\n            .toggleClass('rb-icon-star-on', objStarred)\n            .toggleClass('rb-icon-star-off', !objStarred)\n            .attr('title',\n                  objStarred ? gettext('Starred')\n                             : gettext('Click to star'));\n    },\n});\n"]}