{"version":3,"sources":["entryModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,mCAAD,EAAsC,YAAW;EAClD,IAAI,mBAAJ;EACA,IAAI,KAAJ;EAEA,UAAU,CAAC,YAAW;IAClB,mBAAmB,GAAG,IAAI,EAAE,CAAC,mBAAP,CAA2B;MAC7C,aAAa,EAAE,IAAI,EAAE,CAAC,aAAP;IAD8B,CAA3B,CAAtB;IAIA,KAAK,GAAG,IAAI,EAAE,CAAC,iBAAH,CAAqB,KAAzB,CAA+B;MACnC,mBAAmB,EAAE,mBADc;MAEnC,EAAE,EAAE,KAF+B;MAGnC,MAAM,EAAE,WAH2B;MAInC,cAAc,EAAE,sBAJmB;MAKnC,gBAAgB,EAAE,sBALiB;MAMnC,WAAW,EAAE;IANsB,CAA/B,EAOL;MACC,KAAK,EAAE;IADR,CAPK,CAAR;EAUH,CAfS,CAAV;EAiBA,EAAE,CAAC,OAAD,EAAU,YAAW;IACnB,MAAM,CAAC,KAAK,CAAC,EAAP,CAAN,CAAiB,IAAjB,CAAsB,KAAtB;IACA,MAAM,CAAC,KAAK,CAAC,GAAN,CAAU,qBAAV,CAAD,CAAN,CAAyC,IAAzC,CAA8C,mBAA9C;IACA,MAAM,CAAC,KAAK,CAAC,GAAN,CAAU,gBAAV,CAAD,CAAN,CACK,OADL,CACa,IAAI,IAAJ,CAAS,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAT,CADb;IAEA,MAAM,CAAC,KAAK,CAAC,GAAN,CAAU,kBAAV,CAAD,CAAN,CACK,OADL,CACa,IAAI,IAAJ,CAAS,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAAT,CADb;IAEA,MAAM,CAAC,KAAK,CAAC,GAAN,CAAU,QAAV,CAAD,CAAN,CAA4B,IAA5B,CAAiC,WAAjC;EACH,CARC,CAAF;EAUA,QAAQ,CAAC,WAAD,EAAc,YAAW;IAC7B,EAAE,CAAC,iCAAD,EAAoC,YAAW;MAC7C,MAAM,QAAQ,GAAG;QACb,gBAAgB,EAAE;MADL,CAAjB;MAIA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,QAAhB,CAAD,CAAN,CAAkC,IAAlC,CAAuC,IAAvC;IACH,CANC,CAAF;IAQA,EAAE,CAAC,iCAAD,EAAoC,YAAW;MAC7C,MAAM,QAAQ,GAAG;QACb,gBAAgB,EAAE;MADL,CAAjB;MAIA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,QAAhB,CAAD,CAAN,CAAkC,IAAlC,CAAuC,KAAvC;IACH,CANC,CAAF;IAQA,EAAE,CAAC,mBAAD,EAAsB,YAAW;MAC/B,MAAM,QAAQ,GAAG;QACb,IAAI,EAAE,UADO;QAEb,gBAAgB,EAAE;MAFL,CAAjB;MAKA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,QAAhB,CAAD,CAAN,CAAkC,IAAlC,CAAuC,IAAvC;IACH,CAPC,CAAF;IASA,EAAE,CAAC,oCAAD,EAAuC,YAAW;MAChD,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,UAAlB;MAEA,MAAM,QAAQ,GAAG;QACb,IAAI,EAAE,UADO;QAEb,gBAAgB,EAAE;MAFL,CAAjB;MAKA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,QAAhB,CAAD,CAAN,CAAkC,IAAlC,CAAuC,KAAvC;IACH,CATC,CAAF;EAUH,CApCO,CAAR;AAqCH,CApEI,CAAL","file":"entryModelTests.js","sourcesContent":["suite('rb/reviewRequestPage/models/Entry', function() {\n    let reviewRequestEditor;\n    let entry;\n\n    beforeEach(function() {\n        reviewRequestEditor = new RB.ReviewRequestEditor({\n            reviewRequest: new RB.ReviewRequest(),\n        });\n\n        entry = new RB.ReviewRequestPage.Entry({\n            reviewRequestEditor: reviewRequestEditor,\n            id: '123',\n            typeID: 'some_type',\n            addedTimestamp: '2017-08-18T13:40:25Z',\n            updatedTimestamp: '2017-08-18T16:20:00Z',\n            ignoredAttr: 'ignored',\n        }, {\n            parse: true,\n        });\n    });\n\n    it('parse', function() {\n        expect(entry.id).toBe('123');\n        expect(entry.get('reviewRequestEditor')).toBe(reviewRequestEditor);\n        expect(entry.get('addedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 13, 40, 25)));\n        expect(entry.get('updatedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 16, 20, 0)));\n        expect(entry.get('typeID')).toBe('some_type');\n    });\n\n    describe('isUpdated', function() {\n        it('With newer updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-20T23:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With older updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-18T12:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n\n        it('With changed etag', function() {\n            const metadata = {\n                etag: 'new-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With same updateTimestamp and etag', function() {\n            entry.set('etag', 'old-etag');\n\n            const metadata = {\n                etag: 'old-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n    });\n});\n"]}