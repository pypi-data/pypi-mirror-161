{"version":3,"sources":["baseCommentReplyModelTests.es6.js"],"names":[],"mappings":"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","file":"baseCommentReplyModelTests.js","sourcesContent":["suite('rb/resources/models/BaseCommentReply', function() {\n    let parentObject;\n    let model;\n\n    beforeEach(function() {\n        parentObject = new RB.BaseResource({\n            'public': true,\n        });\n\n        model = new RB.BaseCommentReply({\n            parentObject: parentObject,\n        });\n\n        expect(model.validate(model.attributes)).toBe(undefined);\n    });\n\n    describe('destroyIfEmpty', function() {\n        beforeEach(function() {\n            spyOn(model, 'destroy');\n        });\n\n        it('Destroying when text is empty', function() {\n            model.set('text', '');\n            model.destroyIfEmpty();\n            expect(model.destroy).toHaveBeenCalled();\n        });\n\n        it('Not destroying when text is not empty', function() {\n            model.set('text', 'foo');\n            model.destroyIfEmpty();\n            expect(model.destroy).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('parse', function() {\n        beforeEach(function() {\n            model.rspNamespace = 'my_comment';\n        });\n\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                my_comment: {\n                    id: 42,\n                    text: 'foo',\n                    text_type: 'markdown',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.text).toBe('foo');\n            expect(data.richText).toBe(true);\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('reply_to_id field', function() {\n            it('When loaded', function() {\n                model.set({\n                    replyToID: 10,\n                    loaded: true,\n                });\n                const data = model.toJSON();\n                expect(data.reply_to_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set({\n                    replyToID: 10,\n                    loaded: false,\n                });\n                const data = model.toJSON();\n                expect(data.reply_to_id).toBe(10);\n            });\n        });\n\n        describe('richText field', function() {\n            it('With true', function() {\n                model.set('richText', true);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('markdown');\n            });\n\n            it('With false', function() {\n                model.set('richText', false);\n                const data = model.toJSON();\n                expect(data.text_type).toBe('plain');\n            });\n        });\n\n        describe('text field', function() {\n            it('With value', function() {\n                model.set('text', 'foo');\n                const data = model.toJSON();\n                expect(data.text).toBe('foo');\n            });\n        });\n    });\n\n    describe('validate', function() {\n        describe('parentObject', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    parentObject: parentObject,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    parentObject: null,\n                })).toBe(RB.BaseResource.strings.UNSET_PARENT_OBJECT);\n            });\n        });\n    });\n});\n"]}