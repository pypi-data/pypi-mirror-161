{"version":3,"sources":["fileAttachmentRevisionLabelView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,EAAE,CAAC,+BAAH,GAAqC,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;EACtD,MAAM,EAAE;IACJ,wBAAwB,iBADpB;IAEJ,yBAAyB;EAFrB,CAD8C;;EAMtD;AACJ;AACA;AACA;EACI,QAAQ,EAAE,CAAC,CAAC,QAAF,wEAV4C;EActD,kBAAkB,EAAE,CAAC,CAAC,QAAF,0IAdkC;EAetD,eAAe,EAAE,CAAC,CAAC,QAAF,oGAfqC;EAgBtD,kBAAkB,EAAE,CAAC,CAAC,QAAF,2FAhBkC;EAiBtD,kBAAkB,EAAE,CAAC,CAAC,QAAF;EAChB;EADgB,4NAjBkC;;EAqBtD;AACJ;AACA;EACI,UAAU,GAAG;IACT,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,QAA1B,EAAoC,KAAK,MAAzC;EACH,CA1BqD;;EA4BtD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,MAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAAjB;IACA,MAAM,mBAAmB,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAA5B;IACA,MAAM,cAAc,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAAvB;IAEA,IAAI,MAAM,GAAG,EAAb;IACA,IAAI,MAAM,GAAG,IAAb;;IAEA,IAAI,mBAAJ,EAAyB;MACrB,MAAM,GAAG,KAAK,kBAAL,CAAwB;QAC7B,QAAQ,EAAE,QADmB;QAE7B,mBAAmB,EAAE;MAFQ,CAAxB,CAAT;IAIH,CALD,MAKO,IAAI,QAAQ,KAAK,cAAjB,EAAiC;MACpC,MAAM,GAAG,KAAK,eAAL,CAAqB;QAC1B,QAAQ,EAAE;MADgB,CAArB,CAAT;IAGH,CAJM,MAIA;MACH,MAAM,GAAG,KAAK,kBAAL,CAAwB;QAC7B,QAAQ,EAAE;MADmB,CAAxB,CAAT;MAGA,MAAM,GAAG,KAAK,kBAAL,CAAwB;QAC7B,QAAQ,EAAE,QADmB;QAE7B,cAAc,EAAE;MAFa,CAAxB,CAAT;IAIH;;IAED,KAAK,GAAL,CAAS,IAAT,CAAc,KAAK,QAAL,CAAc;MACxB,MAAM,EAAE,MADgB;MAExB,MAAM,EAAE;IAFgB,CAAd,CAAd;IAKA,OAAO,IAAP;EACH,CApEqD;;EAsEtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,eAAe,CAAC,EAAD,EAAK;IAChB,EAAE,CAAC,eAAH;IACA,EAAE,CAAC,cAAH;IAEA,KAAK,OAAL,CAAa,kBAAb,EAAiC,CAAC,CAAD,EAAI,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAAJ,CAAjC;EACH,CApFqD;;EAsFtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,gBAAgB,CAAC,EAAD,EAAK;IACjB,EAAE,CAAC,eAAH;IACA,EAAE,CAAC,cAAH;IAEA,KAAK,OAAL,CAAa,kBAAb,EACa,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAAD,EACC,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CADD,CADb;EAGH;;AAtGqD,CAArB,CAArC","file":"fileAttachmentRevisionLabelView.js","sourcesContent":["/**\n * A view which explains the currently-shown revision of the file attachment.\n */\nRB.FileAttachmentRevisionLabelView = Backbone.View.extend({\n    events: {\n        'click .select-latest': '_onSelectLatest',\n        'click .select-changed': '_onSelectChanged',\n    },\n\n    /*\n     * Templates for various strings. We use _.template instead of interpolate\n     * to make sure that revision strings are HTML-escaped.\n     */\n    template: _.template(dedent`\n        <p><%- header %></p>\n        <% if (detail) { %><p><%= detail %></p><% } %>\n    `),\n    _interdiffTemplate: _.template(gettext('This file attachment has multiple revisions. Showing changes between revision <%- diffAgainstRevision %> and <%- revision %>.')),\n    _latestTemplate: _.template(gettext('This file attachment has multiple revisions. Showing revision <%- revision %> (latest).')),\n    _oldHeaderTemplate: _.template(gettext('This file attachment has multiple revisions. Showing revision <%- revision %>.')),\n    _oldDetailTemplate: _.template(\n        /* Translators: This string should be valid HTML (including any necessary escaping for entities). */\n        gettext('This is not the most recent revision of the file. The <a href=\"#\" class=\"select-latest\">latest version</a> is revision <%- latestRevision %>. <a href=\"#\" class=\"select-changed\">See what\\'s changed.</a>')),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'change', this.render);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.FileAttachmentRevisionLabelView:\n     *     This object, for chaining.\n     */\n    render() {\n        const revision = this.model.get('fileRevision');\n        const diffAgainstRevision = this.model.get('diffRevision');\n        const latestRevision = this.model.get('numRevisions');\n\n        let header = '';\n        let detail = null;\n\n        if (diffAgainstRevision) {\n            header = this._interdiffTemplate({\n                revision: revision,\n                diffAgainstRevision: diffAgainstRevision,\n            });\n        } else if (revision === latestRevision) {\n            header = this._latestTemplate({\n                revision: revision,\n            });\n        } else {\n            header = this._oldHeaderTemplate({\n                revision: revision,\n            });\n            detail = this._oldDetailTemplate({\n                revision: revision,\n                latestRevision: latestRevision,\n            });\n        }\n\n        this.$el.html(this.template({\n            header: header,\n            detail: detail,\n        }));\n\n        return this;\n    },\n\n    /**\n     * Callback when the \"latest diff\" link is clicked.\n     *\n     * This link is in the \"This is not the most recent revision\" explanation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The event that triggered the action.\n     */\n    _onSelectLatest(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this.trigger('revisionSelected', [0, this.model.get('numRevisions')]);\n    },\n\n    /**\n     * Callback for when \"See what's changed\" is clicked.\n     *\n     * This link is in the \"This is not the most recent revision\" explanation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The event that triggered the action.\n     */\n    _onSelectChanged(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this.trigger('revisionSelected',\n                     [this.model.get('fileRevision'),\n                      this.model.get('numRevisions')]);\n    },\n});\n"]}