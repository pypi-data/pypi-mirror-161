{"version":3,"sources":["collectionViewTests.es6.js"],"names":[],"mappings":"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","file":"collectionViewTests.js","sourcesContent":["suite('rb/views/CollectionView', function() {\n    let collection;\n    let view;\n\n    const TestModel = Backbone.Model.extend({\n        defaults: _.defaults({\n            data: '',\n        }),\n    });\n\n    const TestCollection = Backbone.Collection.extend({\n        model: TestModel,\n    });\n\n    const TestModelView = Backbone.View.extend({\n        className: 'test-class',\n        render() {\n            this.$el.text(this.model.get('data'));\n            return this;\n        },\n    });\n\n    const TestCollectionView = RB.CollectionView.extend({\n        itemViewType: TestModelView,\n    });\n\n    beforeEach(function() {\n        collection = new TestCollection();\n        view = new TestCollectionView({\n            collection: collection,\n        });\n    });\n\n    describe('Rendering', function() {\n        it('When empty', function() {\n            view.render();\n            expect(view.$el.children().length).toBe(0);\n        });\n\n        it('With items', function() {\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n            const $children = view.$el.children();\n            expect($children.length).toBe(2);\n            expect($children[0].innerHTML).toBe('Item 1');\n            expect($children[1].innerHTML).toBe('Item 2');\n        });\n\n        it('Item model type', function() {\n            collection.add([\n                { data: 'Item 1' },\n            ]);\n\n            view.render();\n            expect(view.$el.children().hasClass('test-class')).toBe(true);\n        });\n\n        it('With custom element container', function() {\n            const $container = $('<div class=\"rb-test-main-container\"/>')\n                .appendTo(view.$el);\n\n            view.$container = $container;\n\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n\n            const $viewChildren = view.$el.children();\n            expect($viewChildren.length).toBe(1);\n            expect($viewChildren[0].className).toBe('rb-test-main-container');\n\n            const $containerChildren = $viewChildren.eq(0).children();\n            expect($containerChildren.length).toBe(2);\n            expect($containerChildren[0].innerHTML).toBe('Item 1');\n            expect($containerChildren[1].innerHTML).toBe('Item 2');\n        });\n    });\n\n    describe('Live updating', function() {\n        it('Adding items after rendering', function() {\n            collection.add([\n                { data: 'Item 1' },\n            ]);\n\n            view.render();\n\n            expect(view.$el.children().length).toBe(1);\n\n            collection.add([\n                { data: 'Item 2' },\n                { data: 'Item 3' },\n            ]);\n\n            const $children = view.$el.children();\n            expect($children.length).toBe(3);\n            expect($children[2].innerHTML).toBe('Item 3');\n        });\n\n        it('Removing items after rendering', function() {\n            const model1 = new TestModel({ data: 'Item 1' });\n            const model2 = new TestModel({ data: 'Item 2' });\n            const model3 = new TestModel({ data: 'Item 3' });\n            collection.add([model1, model2, model3]);\n\n            view.render();\n\n            expect(view.$el.children().length).toBe(3);\n\n            collection.remove([model1, model3]);\n\n            const $children = view.$el.children();\n            expect($children.length).toBe(1);\n            expect($children[0].innerHTML).toBe('Item 2');\n        });\n\n        it('When reset', function() {\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n\n            let $children = view.$el.children();\n            expect($children.length).toBe(2);\n            expect($children[0].innerHTML).toBe('Item 1');\n            expect($children[1].innerHTML).toBe('Item 2');\n\n            collection.reset([\n                { data: 'Item 3' },\n                { data: 'Item 4' },\n                { data: 'Item 5' },\n            ]);\n\n            $children = view.$el.children();\n            expect($children.length).toBe(3);\n            expect($children[0].innerHTML).toBe('Item 3');\n            expect($children[1].innerHTML).toBe('Item 4');\n            expect($children[2].innerHTML).toBe('Item 5');\n        });\n\n        describe('Sorting', function() {\n            it('With order changed', function() {\n                collection.add([\n                    { data: 'Item 2' },\n                    { data: 'Item 3' },\n                    { data: 'Item 1' },\n                ]);\n\n                view.render();\n\n                let $children = view.$el.children();\n                expect($children.length).toBe(3);\n                expect($children[0].innerHTML).toBe('Item 2');\n                expect($children[1].innerHTML).toBe('Item 3');\n                expect($children[2].innerHTML).toBe('Item 1');\n\n                self.spyOn(view, '_addCollectionViews').and.callThrough();\n\n                collection.comparator = 'data';\n                collection.sort();\n\n                $children = view.$el.children();\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                expect(view._addCollectionViews).toHaveBeenCalled();\n            });\n\n            it('With order unchanged', function() {\n                collection.add([\n                    { data: 'Item 1' },\n                    { data: 'Item 2' },\n                    { data: 'Item 3' },\n                ]);\n\n                view.render();\n\n                let $children = view.$el.children();\n                expect($children.length).toBe(3);\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                collection.comparator = 'data';\n                collection.sort();\n\n                self.spyOn(view, '_addCollectionViews').and.callThrough();\n\n                $children = view.$el.children();\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                expect(view._addCollectionViews).not.toHaveBeenCalled();\n            });\n        });\n    });\n});\n"]}