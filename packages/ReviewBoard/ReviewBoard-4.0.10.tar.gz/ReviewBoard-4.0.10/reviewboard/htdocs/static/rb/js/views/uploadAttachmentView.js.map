{"version":3,"sources":["uploadAttachmentView.es6.js"],"names":[],"mappings":"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","file":"uploadAttachmentView.js","sourcesContent":["/**\n * A dialog for updating file attachments.\n */\nRB.UploadAttachmentView = RB.DialogView.extend({\n    className: 'upload-attachment',\n    title: gettext('Upload File'),\n    buttons: [\n        {\n            id: 'cancel',\n            label: gettext('Cancel'),\n        },\n        {\n            id: 'upload',\n            label: gettext('Upload'),\n            primary: true,\n            disabled: true,\n            onClick: 'send',\n        },\n    ],\n    template: _.template(dedent`\n        <div class=\"formdlg\" style=\"width: 50em;\">\n         <div class=\"error\" style=\"display: none;\"></div>\n         <form encoding=\"multipart/form-data\" enctype=\"multipart/form-data\"\n               id=\"attachment-upload-form\">\n          <table>\n           <tbody>\n            <tr>\n             <td class=\"label\"><label><%- captionText %></label></td>\n             <td>\n              <input name=\"caption\" type=\"text\" value=\"<%- presetCaption %>\">\n             </td>\n             <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>\n            </tr>\n            <tr>\n             <td class=\"label\">\n              <label class=\"required\"><%- pathText %></label>\n             </td>\n             <td><input name=\"path\" id=\"path\" type=\"file\" class=\"js-path\"></td>\n             <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>\n            </tr>\n           </tbody>\n          </table>\n          <% if (attachmentHistoryID >= 0) { %>\n            <input type=\"hidden\" name=\"attachment_history\"\n                   value=\"<%- attachmentHistoryID %>\" />\n          <% } %>\n         </form>\n        </div>\n    `),\n\n    events: _.extend({\n        'change .js-path': 'updateUploadButtonEnabledState',\n    }, RB.DialogView.prototype.events),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     attachmentHistoryID (number, optional):\n     *         The ID of the attachment history to add to. This can be omitted\n     *         if this is a new attachment (as opposed to updating an existing\n     *         one).\n     *\n     *     presetCaption (string):\n     *         The initial caption of the attachment.\n     *\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The review request editor.\n     */\n    initialize: function(options={}) {\n        _.defaults(options, {\n            attachmentHistoryID: -1,\n            presetCaption: '',\n        });\n\n        const body = this.template({\n            attachmentHistoryID: options.attachmentHistoryID,\n            captionText: gettext('Caption:'),\n            pathText: gettext('Path:'),\n            presetCaption: options.presetCaption,\n        });\n\n        RB.DialogView.prototype.initialize.call(this, $.extend({\n            body: body,\n        }, options));\n    },\n\n    /**\n     * Create a file attachment on the review request.\n     *\n     * On success, the dialog will be closed.\n     *\n     * Otherwise, on error, the dialog will display the errors.\n     */\n    send() {\n        const attrs = {\n            attachmentHistoryID: this.options.attachmentHistoryID,\n        };\n\n        this.options.reviewRequestEditor.createFileAttachment(attrs).save({\n            form: this.$('#attachment-upload-form'),\n            success: () => {\n                // Close 'Add File' modal.\n                this.remove();\n            },\n            error: function(model, xhr) {\n                this.displayErrors($.parseJSON(xhr.responseText));\n            },\n        }, this);\n    },\n\n    /**\n     * Display errors on the form.\n     *\n     * Args:\n     *     rsp (object):\n     *         The server response.\n     */\n    displayErrors(rsp) {\n        const errorStr = ((rsp && rsp.err)\n                          ? rsp.err.msg\n                          : gettext('Unknown Error'));\n\n        this.$('.error')\n            .text(errorStr)\n            .show();\n\n        if (rsp && rsp.fields) {\n            /* Invalid form data */\n            const nameToRow = {\n                caption: 0,\n                path: 1,\n            };\n\n            for (let fieldName in rsp.fields) {\n                if (rsp.fields.hasOwnProperty(fieldName)) {\n                    const $errorList = this.$('.errorlist')\n                        .css('display', 'block');\n                    const elIndex = nameToRow[fieldName];\n                    const errorListEl = $errorList[elIndex];\n\n                    for (let i = 0; i < rsp.fields[fieldName].length; i++) {\n                        $('<li>')\n                            .html(rsp.fields[fieldName][i])\n                            .appendTo(errorListEl);\n                    }\n                }\n            }\n        }\n    },\n\n    /**\n     * Render the dialog.\n     *\n     * Returns:\n     *     RB.UploadAttachmentView:\n     *     This object, for chaining.\n     */\n    render() {\n        RB.DialogView.prototype.render.call(this);\n\n        this._$path = this.$('.js-path');\n        this._$uploadBtn = this.$buttonsMap.upload;\n\n        return this;\n    },\n\n    /**\n     * Set the upload button to be clickable or not based on context.\n     */\n    updateUploadButtonEnabledState() {\n        this._$uploadBtn.enable(this._$path.val());\n    },\n});\n"]}