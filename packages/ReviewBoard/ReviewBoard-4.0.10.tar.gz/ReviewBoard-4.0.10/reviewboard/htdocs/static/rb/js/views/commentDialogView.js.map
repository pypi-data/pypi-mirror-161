{"version":3,"sources":["commentDialogView.es6.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;EAGZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;IAC1C,YAAY,EAAE,CAAC,CAAC,QAAF,6bAD4B;;IAgB1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,UAAU,CAAC,OAAD,EAAU;MAChB,KAAK,OAAL,GAAe,OAAf;IACH,CApCyC;;IAsC1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,WAAW,CAAC,QAAD,EAAW,SAAX,EAAsB;MAC7B,IAAI,QAAQ,CAAC,MAAT,KAAoB,CAAxB,EAA2B;QACvB;MACH;;MAED,MAAM,gBAAgB,GAAG,KAAK,OAAL,CAAa,gBAAtC;MACA,MAAM,mBAAmB,GAAG,KAAK,OAAL,CAAa,mBAAzC;MACA,MAAM,WAAW,GAAG,KAAK,OAAL,CAAa,iBAAjC;MACA,IAAI,GAAG,GAAG,IAAV;MACA,IAAI,MAAM,GAAG,CAAC,EAAd;;MAEA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,iBAAiB,IAAI;QAClC,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAApC;QACA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,YAAL,CAAkB;UAC9B,OAAO,EAAE,iBADqB;UAE9B,SAAS,EAAE,GAAG,GAAG,KAAH,GAAW,MAFK;UAG9B,gBAAgB,EAAE,gBAHY;UAI9B,SAAS,EAAE,gBAAgB,CAAC,UAJE;UAK9B,SAAS,EAAE,SALmB;UAM9B,QAAQ,EAAE,gBAAgB,CAAC;QANG,CAAlB,CAAD,CAAf;;QASA,IAAI,iBAAiB,CAAC,YAAtB,EAAoC;UAChC,MAAM,eAAe,GAAG,IAAI,EAAE,CAAC,mBAAP,CAA2B;YAC/C,QAAQ,EAAE,iBAAiB,CAAC,SADmB;YAE/C,SAAS,EAAE,SAFoC;YAG/C,WAAW,EAAE,SAHkC;YAI/C,WAAW,EAAE,iBAAiB,CAAC,YAJgB;YAK/C,WAAW,EAAE,WALkC;YAM/C,mBAAmB,EAAE;UAN0B,CAA3B,CAAxB;UAQA,eAAe,CAAC,MAAhB,GAAyB,GAAzB,CAA6B,QAA7B,CAAsC,KAAtC;UAEA;AAChB;AACA;AACA;AACA;;UACgB,KAAK,QAAL,CACI,mBADJ,EACyB,oBADzB,EAC+C,OAAO,IAAI;YAClD,IAAI,OAAO,CAAC,EAAR,KAAe,SAAnB,EAA8B;cAC1B,iBAAiB,CAAC,YAAlB,GACI,OAAO,CAAC,GAAR,CAAY,aAAZ,CADJ;YAEH;UACJ,CANL;QAOH;;QAED,MAAM,GAAG,MAAM,CAAC,GAAP,CAAW,KAAX,CAAT;QACA,GAAG,GAAG,CAAC,GAAP;MACH,CAtCD;;MAwCA,KAAK,GAAL,CACK,KADL,GAEK,MAFL,CAEY,MAFZ;IAGH;;EAtGyC,CAArB,EAwGzB;IACI,UAAU,kBADd;IAEI,SAAS;EAFb,CAxGyB,CAAzB;EA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACA,EAAE,CAAC,iBAAH,GAAuB,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;IACxC,mBAAmB,EAAE,GADmB;IAExC,0BAA0B,EAAE,GAFY;IAGxC,uBAAuB,EAAE,GAHe;IAIxC,cAAc,EAAE,EAJwB;IAKxC,kBAAkB,EAAE,GALoB;IAMxC,cAAc,EAAE,GANwB;IAQxC,SAAS,EAAE,aAR6B;IASxC,QAAQ,EAAE,CAAC,CAAC,QAAF,muDAT8B;IA2DxC,MAAM,EAAE;MACJ,0BAA0B,kBADtB;MAEJ,yBAAyB,kBAFrB;MAGJ,0BAA0B,kBAHtB;MAIJ,wBAAwB,MAJpB;MAKJ,+BAA+B;IAL3B,CA3DgC;;IAmExC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,UAAU,CAAC,OAAD,EAAU;MAChB,KAAK,OAAL,GAAe,OAAf;IACH,CAnFuC;;IAqFxC;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,MAAM,GAAG;MACL,MAAM,WAAW,GAAG,EAAE,CAAC,WAAH,CAAe,QAAnC;MACA,MAAM,aAAa,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,eAAf,CAAtB;MACA,MAAM,mBAAmB,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,qBAAf,CAA5B;MAEA,KAAK,OAAL,CAAa,OAAb,GAAwB,KAAK,OAAL,CAAa,OAAb,KAAyB,KAAjD;MAEA,KAAK,GAAL,CACK,IADL,GAEK,IAFL,CAEU,KAAK,QAAL,CAAc;QAChB,aAAa,EAAE,WAAW,CAAC,GAAZ,CAAgB,eAAhB,CADC;QAEhB,QAAQ,EAAE,aAAa,CAAC,GAAd,CAAkB,UAAlB,CAFM;QAGhB,eAAe,EAAE,UAAU,GAAG,iBAHd;QAIhB,YAAY,EAAE,EAAE,CAAC,iBAAH,CAAqB,aAJnB;QAKhB,gBAAgB,EAAE,EAAE,CAAC,iBAAH,CAAqB,iBALvB;QAMhB,SAAS,EAAE,WAAW,CAClB,EAAE,CAAC,iBAAH,CAAqB,kBADH,EAElB,CAAC,WAAW,CAAC,GAAZ,CAAgB,UAAhB,CAAD,CAFkB,CANN;QAShB,YAAY,EAAE,WAAW,CACrB,EAAE,CAAC,iBAAH,CAAqB,yBADA,EAErB,CAAC,aAAa,CAAC,GAAd,CAAkB,WAAlB,CAAD,CAFqB,CATT;QAYhB,eAAe,EAAE,EAAE,CAAC,iBAAH,CAAqB,gBAZtB;QAahB,kBAAkB,EAAE,EAAE,CAAC,iBAAH,CAAqB,mBAbzB;QAchB,UAAU,EAAE,EAAE,CAAC,iBAAH,CAAqB,SAdjB;QAehB,YAAY,EAAE,EAAE,CAAC,iBAAH,CAAqB,WAfnB;QAgBhB,YAAY,EAAE,EAAE,CAAC,iBAAH,CAAqB,WAhBnB;QAiBhB,WAAW,EAAE,EAAE,CAAC,iBAAH,CAAqB,UAjBlB;QAkBhB,QAAQ,EAAE,WAAW,CAAC,GAAZ,CAAgB,UAAhB,CAlBM;QAmBhB,YAAY,yDAnBI;QAoBhB,UAAU,EAAE,EAAE,CAAC,eAAH,CAAmB,iBApBf;QAqBhB,eAAe,EAAE,EAAE,CAAC,iBAAH,CAAqB;MArBtB,CAAd,CAFV;MA0BA,KAAK,cAAL,GAAsB,KAAK,CAAL,CAAO,iBAAP,CAAtB;MACA,KAAK,WAAL,GAAmB,KAAK,CAAL,CAAO,MAAP,CAAnB;MACA,KAAK,MAAL,GAAc,KAAK,WAAL,CAAiB,QAAjB,CAA0B,mBAA1B,CAAd;MACA,KAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,QAAjB,CAA0B,qBAA1B,CAAhB;MACA,KAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,QAAjB,CAA0B,qBAA1B,CAAhB;MACA,KAAK,OAAL,GAAe,KAAK,QAAL,CAAc,QAAd,CAAuB,QAAvB,CAAf;MAEA,KAAK,gBAAL,GAAwB,KAAK,MAAL,CAAY,QAAZ,CAAqB,sBAArB,CAAxB;MAEA,KAAK,cAAL,GACI,KAAK,gBAAL,CAAsB,QAAtB,CAA+B,wBAA/B,EACK,cADL,CACoB,KAAK,KADzB,EACgC,SADhC,CADJ;MAGA,KAAK,iBAAL,GACI,KAAK,gBAAL,CAAsB,QAAtB,CAA+B,2BAA/B,EACK,cADL,CACoB,KAAK,KADzB,EACgC,SADhC,CADJ;MAIA,KAAK,YAAL,GAAoB,KAAK,cAAL,CACf,IADe,CACV,gBADU,EAEX,YAFW,CAEE,SAFF,EAEa,KAAK,KAFlB,EAEyB,WAFzB,EAGX,YAHW,CAGE,UAHF,EAGc,KAAK,KAHnB,EAG0B,SAH1B,EAGqC;QAC7C,cAAc,EAAE,KAD6B;QAE7C,OAAO,EAAE;MAFoC,CAHrC,CAApB;MAQA,KAAK,wBAAL,GAAgC,KAAK,cAAL,CAC3B,IAD2B,CACtB,uBADsB,EAEvB,YAFuB,CAEV,SAFU,EAEC,KAAK,KAFN,EAEa,qBAFb,EAGvB,YAHuB,CAGV,UAHU,EAGE,KAAK,KAHP,EAGc,SAHd,EAGyB;QAC7C,cAAc,EAAE,KAD6B;QAE7C,OAAO,EAAE;MAFoC,CAHzB,CAAhC;MAQA,KAAK,qBAAL,GAA6B,KAAK,iBAAL,CACxB,IADwB,CACnB,kBADmB,EAEpB,YAFoB,CAEP,SAFO,EAEI,KAAK,KAFT,EAEgB,UAFhB,EAGpB,YAHoB,CAGP,UAHO,EAGK,KAAK,KAHV,EAGiB,SAHjB,EAG4B;QAC7C,cAAc,EAAE,KAD6B;QAE7C,OAAO,EAAE;MAFoC,CAH5B,CAA7B;MAQA,KAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAnB,CAAhB;MAEA,KAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,IAAd,CAAmB,YAAnB,EACd,cADc,CACC,KAAK,KADN,EACa,SADb,EAEd,YAFc,CAED,UAFC,EAEW,KAAK,KAFhB,EAEuB,SAFvB,EAEkC;QAC7C,cAAc,EAAE,KAD6B;QAE7C,OAAO,EAAE;MAFoC,CAFlC,CAAnB;MAOA,KAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,cAAnB,EAChB,cADgB,CACD,KAAK,KADJ,EACW,SADX,CAArB;MAGA,KAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,cAAnB,EAChB,cADgB,CACD,KAAK,KADJ,EACW,WADX,EAEhB,YAFgB,CAEH,UAFG,EAES,KAAK,KAFd,EAEqB,WAFrB,EAEkC;QAC/C,cAAc,EAAE,KAD+B;QAE/C,OAAO,EAAE;MAFsC,CAFlC,CAArB;MAOA,KAAK,YAAL,GAAoB,KAAK,QAAL,CAAc,IAAd,CAAmB,aAAnB,EACf,cADe,CACA,KAAK,KADL,EACY,SADZ,EACuB;QACnC,OAAO,EAAE;MAD0B,CADvB,CAApB;MAKA,KAAK,YAAL,GAAoB,IAAI,gBAAJ,CAAqB;QACrC,EAAE,EAAE,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CADiC;QAErC,gBAAgB,EAAE,aAAa,CAAC,GAAd,CAAkB,WAAlB,CAFmB;QAGrC,mBAAmB,EAAE,KAAK,OAAL,CAAa,mBAHG;QAIrC,iBAAiB,EAAE,mBAAmB,CAAC,GAApB,CAAwB,UAAxB;MAJkB,CAArB,CAApB;MAOA;AACR;AACA;AACA;;MACQ,KAAK,WAAL,GAAmB,IAAI,EAAE,CAAC,cAAP,CAAsB;QACrC,EAAE,EAAE,KAAK,WAAL,CAAiB,IAAjB,CAAsB,qBAAtB,CADiC;QAErC,QAAQ,EAAE,KAF2B;QAGrC,SAAS,EAAE,CAH0B;QAIrC,IAAI,EAAE,KAAK,KAAL,CAAW,GAAX,CAAe,MAAf,CAJ+B;QAKrC,YAAY,EAAE;UACV,KAAK,EAAE,KAAK,KADF;UAEV,QAAQ,EAAE;QAFA;MALuB,CAAtB,CAAnB;;MAUA,KAAK,WAAL,CAAiB,MAAjB;;MACA,KAAK,WAAL,CAAiB,IAAjB;;MACA,KAAK,WAAL,CAAiB,GAAjB,CAAqB,cAArB,CAAoC,KAAK,KAAzC,EAAgD,SAAhD;;MACA,KAAK,QAAL,CAAc,KAAK,WAAnB,EAAgC,QAAhC,EACc,MAAM,KAAK,KAAL,CAAW,GAAX,CAAe,MAAf,EACe,KAAK,WAAL,CAAiB,OAAjB,EADf,CADpB;;MAGA,KAAK,WAAL,CAAiB,oBAAjB,CAAsC,KAAK,qBAA3C;;MACA,KAAK,WAAL,CAAiB,sBAAjB,CACI,KAAK,WAAL,CAAiB,IAAjB,CAAsB,gBAAtB,CADJ;;MAGA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,aAA1B,EACc,MAAM,KAAK,WAAL,CAAiB,OAAjB,CAAyB,KAAK,KAAL,CAAW,GAAX,CAAe,MAAf,CAAzB,CADpB;MAGA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,iBAA1B,EAA6C,KAAK,aAAlD;MAEA,KAAK,GAAL,CACK,GADL,CACS,UADT,EACqB,UADrB,EAEK,SAFL,CAEe,GAAG,IAAI;QACd;AAChB;AACA;AACA;QACgB,GAAG,CAAC,eAAJ;MACH,CARL,EASK,SATL,CASe;QACP,OAAO,EAAE,CAAC,CAAC,OAAF,CAAU,KAAV,GAAkB,SAAlB,GACkB,0BAFpB;QAGP,WAAW,EAAE,IAHN;QAIP,MAAM,EAAE,CAAC,CAAC,IAAF,CAAO,KAAK,aAAZ,EAA2B,IAA3B;MAJD,CATf,EAeK,gBAfL;;MAiBA,KAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,EAA4B,MAA5B;;MACA,KAAK,GAAL,CAAS,SAAT,CAAmB;QACf,MAAM,EAAE;MADO,CAAnB;MAIA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,cAA1B,EAA0C,KAAK,YAA/C;;MACA,KAAK,YAAL;;MAEA,KAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,0BAA1B,EACc,MAAM,KAAK,2BAAL,EADpB;;MAEA,KAAK,2BAAL;MAEA;;;MACA,EAAE,CAAC,iBAAH,CAAqB,IAArB,CAA0B,IAAI,IAAI;QAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,UAAT,CAArB;QACA,MAAM,QAAQ,GAAG,IAAI,YAAJ,CAAiB;UAC9B,SAAS,EAAE,IAAI,CAAC,GAAL,CAAS,WAAT,CADmB;UAE9B,aAAa,EAAE,IAFe;UAG9B,aAAa,EAAE,KAAK,KAHU;UAI9B,EAAE,EAAE,KAAK;QAJqB,CAAjB,CAAjB;QAOA,QAAQ,CAAC,MAAT;MACH,CAVD;MAYA,OAAO,IAAP;IACH,CA5QuC;;IA8QxC;AACJ;AACA;AACA;AACA;IACI,IAAI,GAAG;MACH;AACR;AACA;AACA;MACQ,KAAK,KAAL,CAAW,GAAX,CAAe,MAAf,EAAuB,KAAK,WAAL,CAAiB,OAAjB,EAAvB;;MAEA,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAJ,EAA+B;QAC3B,KAAK,KAAL,CAAW,IAAX,CAAgB;UACZ,KAAK,EAAE,CAAC,KAAD,EAAQ,GAAR,KAAgB;YACnB,KAAK,CAAC,mCAAoC,GAAG,CAAC,SAAzC,CAAL;UACH;QAHW,CAAhB;QAKA,KAAK,KAAL;MACH;IACJ,CAlSuC;;IAoSxC;AACJ;AACA;IACI,IAAI,GAAG;MACH,SAAS,UAAT,GAAsB;QAClB,KAAK,GAAL,CAAS,cAAT;;QACA,KAAK,WAAL,CAAiB,KAAjB;MACH;;MAED,KAAK,GAAL,CACK,GADL,CACS;QACD,GAAG,EAAE,QAAQ,CAAC,KAAK,GAAL,CAAS,GAAT,CAAa,KAAb,CAAD,EAAsB,EAAtB,CAAR,GAAoC,KAAK,cAD7C;QAED,OAAO,EAAE;MAFR,CADT,EAKK,IALL;;MAOA,KAAK,aAAL;;MAEA,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAJ,EAA+B;QAC3B,KAAK,KAAL,CAAW,SAAX;MACH;;MAED,IAAI,KAAK,OAAL,CAAa,OAAjB,EAA0B;QACtB,KAAK,GAAL,CAAS,OAAT,CAAiB;UACb,GAAG,cAAO,KAAK,cAAZ,OADU;UAEb,OAAO,EAAE;QAFI,CAAjB,EAGG,GAHH,EAGQ,OAHR,EAGiB,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,IAAnB,CAHjB;MAIH,CALD,MAKO;QACH,UAAU,CAAC,IAAX,CAAgB,IAAhB;MACH;IACJ,CAlUuC;;IAoUxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,KAAK,GAAiC;MAAA,IAAhC,QAAgC,uEAAvB,SAAuB;MAAA,IAAZ,OAAY,uEAAJ,EAAI;;MAClC,SAAS,WAAT,GAAuB;QACnB,KAAK,KAAL,CAAW,KAAX;QACA,KAAK,GAAL,CAAS,MAAT;QACA,KAAK,OAAL,CAAa,QAAb;;QAEA,IAAI,CAAC,CAAC,UAAF,CAAa,QAAb,CAAJ,EAA4B;UACxB,QAAQ,CAAC,IAAT,CAAc,OAAd;QACH;MACJ;;MAED,IAAI,KAAK,OAAL,CAAa,OAAb,IAAwB,KAAK,GAAL,CAAS,EAAT,CAAY,UAAZ,CAA5B,EAAqD;QACjD,KAAK,GAAL,CAAS,OAAT,CAAiB;UACb,GAAG,cAAO,KAAK,cAAZ,OADU;UAEb,OAAO,EAAE;QAFI,CAAjB,EAGG,GAHH,EAGQ,OAHR,EAGiB,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,IAApB,CAHjB;MAIH,CALD,MAKO;QACH,WAAW,CAAC,IAAZ,CAAiB,IAAjB;MACH;IACJ,CApWuC;;IAsWxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO;MACP,KAAK,GAAL,CAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB;IACH,CAlXuC;;IAoXxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,cAAc,CAAC,GAAD,EAAM,OAAN,EAAe;MACzB,KAAK,GAAL,CAAS,cAAT,CAAwB,GAAxB,EAA6B,OAA7B;IACH,CAlYuC;;IAoYxC;AACJ;AACA;IACI,YAAY,GAAG;MACX,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,IACE,EAAE,CAAC,iBAAH,CAAqB,qBADvB,GAEE,EAAE,CAAC,iBAAH,CAAqB,gBAFzC;IAGH,CA3YuC;;IA6YxC;AACJ;AACA;AACA;AACA;AACA;IACI,2BAA2B,GAAG;MAC1B,MAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,mBAAf,KAAuC,EAAxD;MACA,KAAK,YAAL,CAAkB,WAAlB,CAA8B,QAA9B,EAC+B,KAAK,KAAL,CAAW,GAAX,CAAe,uBAAf,CAD/B;MAGA,MAAM,YAAY,GAAI,QAAQ,CAAC,MAAT,GAAkB,CAAxC;;MACA,KAAK,cAAL,CAAoB,UAApB,CAA+B,YAA/B;MAEA;;;MACA,IAAI,KAAK,GAAG,KAAK,cAAjB;;MAEA,IAAI,YAAJ,EAAkB;QACd,KAAK,IAAI,KAAK,kBAAd;MACH;;MAED,IAAI,MAAJ;;MAEA,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAJ,EAA+B;QAC3B,MAAM,GAAG,KAAK,mBAAd;MACH,CAFD,MAEO,IAAI,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,UAA5B,CAAJ,EAA6C;QAChD,MAAM,GAAG,KAAK,uBAAd;MACH,CAFM,MAEA;QACH,MAAM,GAAG,KAAK,0BAAd;MACH;;MAED,KAAK,GAAL,CACK,KADL,CACW,KADX,EAEK,MAFL,CAEY,MAFZ;IAGH,CA/auC;;IAibxC;AACJ;AACA;AACA;AACA;IACI,aAAa,GAAG;MACZ,MAAM,MAAM,GAAG,KAAK,GAAL,CAAS,MAAT,EAAf;MACA,IAAI,KAAK,GAAG,KAAK,GAAL,CAAS,KAAT,EAAZ;MACA,IAAI,aAAa,GAAG,CAApB;;MAEA,IAAI,KAAK,cAAL,CAAoB,EAApB,CAAuB,UAAvB,CAAJ,EAAwC;QACpC,KAAK,cAAL,CACK,UADL,CACgB,KAAK,kBADrB,EAEK,WAFL,CAEiB,MAFjB,EAGK,IAHL,CAGU,CAHV,EAGa,CAHb,EAGgB,UAHhB;;QAKA,MAAM,aAAa,GAAG,KAAK,YAAL,CAAkB,GAAxC;QACA,aAAa,CAAC,MAAd,CAAqB,KAAK,cAAL,CAAoB,MAApB,KACA,aAAa,CAAC,QAAd,GAAyB,GAD9C;QAGA,aAAa,GAAG,KAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B,CAAhB;QACA,KAAK,IAAI,aAAT;MACH;;MAED,KAAK,WAAL,CACK,UADL,CACgB,KADhB,EAEK,WAFL,CAEiB,MAFjB,EAGK,IAHL,CAGU,aAHV,EAGyB,CAHzB,EAG4B,UAH5B;;MAKA,MAAM,UAAU,GAAG,KAAK,WAAL,CAAiB,GAApC;;MACA,KAAK,WAAL,CAAiB,OAAjB,CACK,KAAK,MAAL,CAAY,KAAZ,KACA,UAAU,CAAC,UAAX,CAAsB,GAAtB,EAA2B,IAA3B,CAFL,EAGK,KAAK,WAAL,CAAiB,MAAjB,KACA,KAAK,QAAL,CAAc,WAAd,EADA,GAEA,KAAK,gBAAL,CAAsB,WAAtB,EAFA,GAGA,KAAK,QAAL,CAAc,WAAd,EAHA,GAIA,UAAU,CAAC,UAAX,CAAsB,GAAtB,EAA2B,IAA3B,CAPL;IAQH,CAvduC;;IAydxC;AACJ;AACA;AACA;AACA;AACA;IACI,gBAAgB,GAAG;MACf,IAAI,UAAU,GAAG,IAAjB;;MAEA,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,CAAJ,EAA6B;QACzB,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC,iBAAH,CAAqB,eAAtB,CAApB;MACH;;MAED,IAAI,UAAJ,EAAgB;QACZ,KAAK,KAAL,CAAW,MAAX;QACA,KAAK,KAAL;MACH;IACJ,CA1euC;;IA4exC;AACJ;AACA;AACA;AACA;IACI,gBAAgB,GAAG;MACf,IAAI,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAAJ,EAAiC;QAC7B,KAAK,KAAL,CAAW,aAAX;QACA,KAAK,KAAL;MACH;IACJ,CAtfuC;;IAwfxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,cAAc,CAAC,CAAD,EAAI;MACd,CAAC,CAAC,eAAF;;MAEA,QAAQ,CAAC,CAAC,KAAV;QACI,KAAK,CAAC,CAAC,EAAF,CAAK,OAAL,CAAa,MAAlB;UACI,KAAK,gBAAL;;UACA,OAAO,KAAP;;QAEJ,KAAK,EAAL;QACA,KAAK,CAAC,CAAC,EAAF,CAAK,OAAL,CAAa,KAAlB;UACI;UACA,IAAI,CAAC,CAAC,OAAF,IAAa,CAAC,CAAC,OAAnB,EAA4B;YACxB,KAAK,IAAL;YACA,CAAC,CAAC,cAAF;YACA,CAAC,CAAC,eAAF;UACH;;UACD;;QAEJ,KAAK,EAAL;QACA,KAAK,GAAL;UACI;UACA,IAAI,CAAC,CAAC,OAAF,IAAa,CAAC,CAAC,MAAnB,EAA2B;YACvB;YACA,CAAC,CAAC,cAAF;YACA,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,EAA4B,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAA7B;UACH;;UACD;;QAEJ,KAAK,EAAL;QACA,KAAK,GAAL;UACI;UACA,IAAI,CAAC,CAAC,OAAF,IAAa,CAAC,CAAC,MAAnB,EAA2B;YACvB;YACA,CAAC,CAAC,cAAF;YACA,KAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,UAAf,CAA5B;UACH;;UACD;;QAEJ;UACI;MApCR;IAsCH;;EAjjBuC,CAArB,EAkjBpB;IACC;AACJ;AACA;IACI,SAAS,EAAE,IAJZ;;IAMC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAM,EAAE,YAAqB;MAAA,IAAZ,OAAY,uEAAJ,EAAI;MACzB,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,OAAvB,EAAgC,6BAAhC;MAEA,MAAM,mBAAmB,GACrB,OAAO,CAAC,mBAAR,IACA,EAAE,CAAC,WAAH,CAAe,OAAf,GAAyB,KAAzB,CAA+B,mBAFnC;MAIA,MAAM,GAAG,GAAG,IAAI,EAAE,CAAC,iBAAP,CAAyB;QACjC,OAAO,EAAE,OAAO,CAAC,OADgB;QAEjC,mBAAmB,EAAE,OAAO,CAAC,mBAAR,IACA,mBAAmB,CAAC,GAApB,CAAwB,qBAAxB,CAHY;QAIjC,KAAK,EAAE,IAAI,EAAE,CAAC,aAAP,CAAqB;UACxB,OAAO,EAAE,OAAO,CAAC,OADO;UAExB,aAAa,EAAE,mBAAmB,CAAC,GAApB,CAAwB,eAAxB,CAFS;UAGxB,mBAAmB,EAAE,mBAHG;UAIxB,iBAAiB,EAAE,OAAO,CAAC,iBAAR,IAA6B,SAJxB;UAKxB,qBAAqB,EAAE,OAAO,CAAC,qBAAR,IACA;QANC,CAArB;MAJ0B,CAAzB,CAAZ;MAcA,GAAG,CAAC,MAAJ,GAAa,GAAb,CACK,GADL,CACS,SADT,EACoB,GADpB,EACyB;MADzB,CAEK,QAFL,CAEc,OAAO,CAAC,SAAR,IAAqB,QAAQ,CAAC,IAF5C;MAIA,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,QAAR,IAAoB,EAAvC;;MAEA,IAAI,CAAC,CAAC,UAAF,CAAa,OAAO,CAAC,QAArB,CAAJ,EAAoC;QAChC,OAAO,CAAC,QAAR,CAAiB,GAAjB;MACH,CAFD,MAEO,IAAI,OAAO,CAAC,QAAR,CAAiB,MAArB,EAA6B;QAChC,GAAG,CAAC,cAAJ,CAAmB,OAAO,CAAC,QAAR,CAAiB,MAAjB,CAAwB,EAA3C,EACmB,OAAO,CAAC,QAAR,CAAiB,MADpC;MAEH,CAHM,MAGA;QACH,IAAI,CAAC,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAzB;QACA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAzB;;QAEA,IAAI,CAAC,KAAK,SAAV,EAAqB;UACjB;UACA,CAAC,GAAG,CAAC,CAAC,QAAD,CAAD,CAAY,UAAZ,KACA,CAAC,CAAC,CAAC,MAAD,CAAD,CAAU,KAAV,KAAoB,GAAG,CAAC,GAAJ,CAAQ,KAAR,EAArB,IAAwC,CAD5C;QAEH;;QAED,IAAI,CAAC,KAAK,SAAV,EAAqB;UACjB;UACA,CAAC,GAAG,CAAC,CAAC,QAAD,CAAD,CAAY,SAAZ,KACA,CAAC,CAAC,CAAC,MAAD,CAAD,CAAU,MAAV,KAAqB,GAAG,CAAC,GAAJ,CAAQ,MAAR,EAAtB,IAA0C,CAD9C;QAEH;;QAED,GAAG,CAAC,IAAJ,CAAS,CAAT,EAAY,CAAZ;MACH;;MAED,GAAG,CAAC,EAAJ,CAAO,QAAP,EAAiB,MAAM,EAAE,CAAC,iBAAH,CAAqB,SAArB,GAAiC,IAAxD;MAEA,MAAM,QAAQ,GAAG,EAAE,CAAC,iBAAH,CAAqB,SAAtC;;MACA,MAAM,cAAc,GAAG,SAAS,cAAT,GAA0B;QAC7C,IAAI;UACA,GAAG,CAAC,IAAJ;QACH,CAFD,CAEE,OAAM,CAAN,EAAS;UACP,GAAG,CAAC,KAAJ;UACA,MAAM,CAAN;QACH;;QAED,EAAE,CAAC,iBAAH,CAAqB,SAArB,GAAiC,GAAjC;MACH,CATD;;MAWA,IAAI,QAAJ,EAAc;QACV,QAAQ,CAAC,EAAT,CAAY,QAAZ,EAAsB,cAAtB;QACA,QAAQ,CAAC,KAAT;MACH,CAHD,MAGO;QACH,cAAc;MACjB;;MAED,OAAO,GAAP;IACH,CA5FF;IA8FC,WAAW,mBA9FZ;IA+FC,UAAU,kBA/FX;IAgGC,WAAW,mBAhGZ;IAiGC,yBAAyB,gHAjG1B;IAkGC,mBAAmB,mCAlGpB;IAmGC,kBAAkB,kEAnGnB;IAoGC,aAAa,qBApGd;IAqGC,gBAAgB,iCArGjB;IAsGC,iBAAiB,0BAtGlB;IAuGC,SAAS,iBAvGV;IAwGC,eAAe,qEAxGhB;IAyGC,gBAAgB,iCAzGjB;IA0GC,gBAAgB,yBA1GjB;IA2GC,qBAAqB;EA3GtB,CAljBoB,CAAvB;AAiqBC,CApyBD","file":"commentDialogView.js","sourcesContent":["(function() {\n\n\n/**\n * Displays a list of existing comments within a comment dialog.\n *\n * Each comment in the list is an existing, published comment that a user\n * has made. They will be displayed, along with any issue states and\n * identifying information, and links for viewing the comment on the review\n * or replying to it.\n *\n * This is used internally in CommentDialogView.\n */\nconst CommentsListView = Backbone.View.extend({\n    itemTemplate: _.template(dedent`\n        <li class=\"<%= itemClass %>\">\n         <h2>\n          <%- comment.user.name %>\n          <span class=\"actions\">\n           <a class=\"comment-list-view-action\" href=\"<%= comment.url %>\"><%- viewText %></a>\n           <a class=\"comment-list-reply-action\"\n              href=\"<%= reviewRequestURL %>?reply_id=<%= comment.reply_to_id || comment.comment_id %>&reply_type=<%= replyType %>\"\n              ><%- replyText %></a>\n          </span>\n         </h2>\n         <pre><%- comment.text %></pre>\n        </li>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     *\n     *     issuesInteractive (boolean):\n     *         Whether the user can interact with issues (they have permission\n     *         to change the state).\n     *\n     *     reviewRequestURL (string):\n     *         The URL of the review request.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Set the list of displayed comments.\n     *\n     * Args:\n     *     comments (Array of object):\n     *         The serialized comments.\n     *\n     *     replyType (string):\n     *         The type of comment, for use in creating replies.\n     */\n    setComments(comments, replyType) {\n        if (comments.length === 0) {\n            return;\n        }\n\n        const reviewRequestURL = this.options.reviewRequestURL;\n        const commentIssueManager = this.options.commentIssueManager;\n        const interactive = this.options.issuesInteractive;\n        let odd = true;\n        let $items = $();\n\n        _.each(comments, serializedComment => {\n            const commentID = serializedComment.comment_id;\n            const $item = $(this.itemTemplate({\n                comment: serializedComment,\n                itemClass: odd ? 'odd' : 'even',\n                reviewRequestURL: reviewRequestURL,\n                replyText: CommentsListView._replyText,\n                replyType: replyType,\n                viewText: CommentsListView._viewText,\n            }));\n\n            if (serializedComment.issue_opened) {\n                const commentIssueBar = new RB.CommentIssueBarView({\n                    reviewID: serializedComment.review_id,\n                    commentID: commentID,\n                    commentType: replyType,\n                    issueStatus: serializedComment.issue_status,\n                    interactive: interactive,\n                    commentIssueManager: commentIssueManager,\n                });\n                commentIssueBar.render().$el.appendTo($item);\n\n                /*\n                 * Update the serialized comment's issue status whenever\n                 * the real comment's status is changed so we will\n                 * display it correctly the next time we render it.\n                 */\n                this.listenTo(\n                    commentIssueManager, 'issueStatusUpdated', comment => {\n                        if (comment.id === commentID) {\n                            serializedComment.issue_status =\n                                comment.get('issueStatus');\n                        }\n                    });\n            }\n\n            $items = $items.add($item);\n            odd = !odd;\n        });\n\n        this.$el\n            .empty()\n            .append($items);\n    },\n},\n{\n    _replyText: gettext('Reply'),\n    _viewText: gettext('View'),\n});\n\n\n/**\n * A dialog that allows for creating, editing or deleting draft comments on\n * a diff or file attachment. The dialog can be moved around on the page.\n *\n * Any existing comments for the selected region will be displayed alongside\n * the dialog for reference. However, this dialog is not intended to be\n * used to reply to those comments.\n */\nRB.CommentDialogView = Backbone.View.extend({\n    DIALOG_TOTAL_HEIGHT: 350,\n    DIALOG_NON_EDITABLE_HEIGHT: 120,\n    DIALOG_READ_ONLY_HEIGHT: 104,\n    SLIDE_DISTANCE: 10,\n    COMMENTS_BOX_WIDTH: 280,\n    FORM_BOX_WIDTH: 450,\n\n    className: 'comment-dlg',\n    template: _.template(dedent`\n        <div class=\"other-comments\">\n         <h1 class=\"title\"><%- otherReviewsText %></h1>\n         <ul></ul>\n        </div>\n        <form method=\"post\">\n         <h1 class=\"comment-dlg-header\">\n          <span class=\"title\"></span>\n          <% if (authenticated && !hasDraft) { %>\n           <a class=\"markdown-info\" href=\"<%- markdownDocsURL %>\"\n              target=\"_blank\"><%- markdownText %></a>\n          <% } %>\n         </h1>\n         <% if (!authenticated) { %>\n          <p class=\"login-text\"><%= loginText %></p>\n         <% } else if (readOnly) { %>\n          <p class=\"read-only-text\"><%= readOnlyText %></p>\n         <% } else if (hasDraft) { %>\n          <p class=\"draft-warning\"><%= draftWarning %></p>\n         <% } %>\n         <div class=\"comment-dlg-body\">\n          <div class=\"comment-text-field\"></div>\n          <ul class=\"comment-dlg-options\">\n           <li class=\"comment-issue-options\">\n            <input type=\"checkbox\" id=\"comment_issue\">\n            <label for=\"comment_issue\" accesskey=\"i\"><%= openAnIssueText %></label>\n            <% if (showVerify) { %>\n             <input type=\"checkbox\" id=\"comment_issue_verify\">\n             <label for=\"comment_issue_verify\"><%= verifyIssueText %></label>\n            <% } %>\n           </li>\n           <li class=\"comment-markdown-options\">\n            <input type=\"checkbox\" id=\"enable_markdown\">\n            <label for=\"enable_markdown\" accesskey=\"m\"><%= enableMarkdownText %></label>\n           </li>\n          </ul>\n         </div>\n         <div class=\"comment-dlg-footer\">\n          <div class=\"buttons\">\n           <input type=\"button\" class=\"save\" value=\"<%- saveButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"cancel\" value=\"<%- cancelButton %>\">\n           <input type=\"button\" class=\"delete\" value=\"<%- deleteButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"close\" value=\"<%- closeButton %>\">\n          </div>\n         </div>\n        </form>\n    `),\n\n    events: {\n        'click .buttons .cancel': '_onCancelClicked',\n        'click .buttons .close': '_onCancelClicked',\n        'click .buttons .delete': '_onDeleteClicked',\n        'click .buttons .save': 'save',\n        'keydown .comment-text-field': '_onTextKeyDown',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     animate (boolean):\n     *         Whether to use animation.\n     *\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.CommentDialogView:\n     *     This object, for chaining.\n     */\n    render() {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('reviewRequest');\n        const reviewRequestEditor = this.model.get('reviewRequestEditor');\n\n        this.options.animate = (this.options.animate !== false);\n\n        this.$el\n            .hide()\n            .html(this.template({\n                authenticated: userSession.get('authenticated'),\n                hasDraft: reviewRequest.get('hasDraft'),\n                markdownDocsURL: MANUAL_URL + 'users/markdown/',\n                markdownText: RB.CommentDialogView._markdownText,\n                otherReviewsText: RB.CommentDialogView._otherReviewsText,\n                loginText: interpolate(\n                    RB.CommentDialogView._loginTextTemplate,\n                    [userSession.get('loginURL')]),\n                draftWarning: interpolate(\n                    RB.CommentDialogView._draftWarningTextTemplate,\n                    [reviewRequest.get('reviewURL')]),\n                openAnIssueText: RB.CommentDialogView._openAnIssueText,\n                enableMarkdownText: RB.CommentDialogView._enableMarkdownText,\n                saveButton: RB.CommentDialogView._saveText,\n                cancelButton: RB.CommentDialogView._cancelText,\n                deleteButton: RB.CommentDialogView._deleteText,\n                closeButton: RB.CommentDialogView._closeText,\n                readOnly: userSession.get('readOnly'),\n                readOnlyText: gettext('Review Board is currently in read-only mode.'),\n                showVerify: RB.EnabledFeatures.issueVerification,\n                verifyIssueText: RB.CommentDialogView._verifyIssueText,\n            }));\n\n        this._$commentsPane = this.$('.other-comments');\n        this._$draftForm = this.$('form');\n        this._$body = this._$draftForm.children('.comment-dlg-body');\n        this._$header = this._$draftForm.children('.comment-dlg-header');\n        this._$footer = this._$draftForm.children('.comment-dlg-footer');\n        this._$title = this._$header.children('.title');\n\n        this._$commentOptions = this._$body.children('.comment-dlg-options');\n\n        this._$issueOptions =\n            this._$commentOptions.children('.comment-issue-options')\n                .bindVisibility(this.model, 'canEdit');\n        this._$markdownOptions =\n            this._$commentOptions.children('.comment-markdown-options')\n                .bindVisibility(this.model, 'canEdit');\n\n        this._$issueField = this._$issueOptions\n            .find('#comment_issue')\n                .bindProperty('checked', this.model, 'openIssue')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$issueVerificationField = this._$issueOptions\n            .find('#comment_issue_verify')\n                .bindProperty('checked', this.model, 'requireVerification')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$enableMarkdownField = this._$markdownOptions\n            .find('#enable_markdown')\n                .bindProperty('checked', this.model, 'richText')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this.$buttons = this._$footer.find('.buttons');\n\n        this.$saveButton = this.$buttons.find('input.save')\n            .bindVisibility(this.model, 'canEdit')\n            .bindProperty('disabled', this.model, 'canSave', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$cancelButton = this.$buttons.find('input.cancel')\n            .bindVisibility(this.model, 'canEdit');\n\n        this.$deleteButton = this.$buttons.find('input.delete')\n            .bindVisibility(this.model, 'canDelete')\n            .bindProperty('disabled', this.model, 'canDelete', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$closeButton = this.$buttons.find('input.close')\n            .bindVisibility(this.model, 'canEdit', {\n                inverse: true,\n            });\n\n        this.commentsList = new CommentsListView({\n            el: this._$commentsPane.find('ul'),\n            reviewRequestURL: reviewRequest.get('reviewURL'),\n            commentIssueManager: this.options.commentIssueManager,\n            issuesInteractive: reviewRequestEditor.get('editable'),\n        });\n\n        /*\n         * We need to handle keypress here, rather than in events above,\n         * because jQuery will actually handle it. Backbone fails to.\n         */\n        this._textEditor = new RB.TextEditorView({\n            el: this._$draftForm.find('.comment-text-field'),\n            autoSize: false,\n            minHeight: 0,\n            text: this.model.get('text'),\n            bindRichText: {\n                model: this.model,\n                attrName: 'richText',\n            },\n        });\n        this._textEditor.render();\n        this._textEditor.show();\n        this._textEditor.$el.bindVisibility(this.model, 'canEdit');\n        this.listenTo(this._textEditor, 'change',\n                      () => this.model.set('text',\n                                           this._textEditor.getText()));\n        this._textEditor.bindRichTextCheckbox(this._$enableMarkdownField);\n        this._textEditor.bindRichTextVisibility(\n            this._$draftForm.find('.markdown-info'));\n\n        this.listenTo(this.model, 'change:text',\n                      () => this._textEditor.setText(this.model.get('text')));\n\n        this.listenTo(this.model, 'change:richText', this._handleResize);\n\n        this.$el\n            .css('position', 'absolute')\n            .mousedown(evt => {\n                /*\n                 * Prevent this from reaching the selection area, which will\n                 * swallow the default action for the mouse down.\n                 */\n                evt.stopPropagation();\n            })\n            .resizable({\n                handles: $.support.touch ? 'grip,se'\n                                         : 'grip,n,e,s,w,se,sw,ne,nw',\n                transparent: true,\n                resize: _.bind(this._handleResize, this),\n            })\n            .proxyTouchEvents();\n\n        this._$header.css('cursor', 'move');\n        this.$el.draggable({\n            handle: '.comment-dlg-header',\n        });\n\n        this.listenTo(this.model, 'change:dirty', this._updateTitle);\n        this._updateTitle();\n\n        this.listenTo(this.model, 'change:publishedComments',\n                      () => this._onPublishedCommentsChanged());\n        this._onPublishedCommentsChanged();\n\n        /* Add any hooks. */\n        RB.CommentDialogHook.each(hook => {\n            const HookViewType = hook.get('viewType');\n            const hookView = new HookViewType({\n                extension: hook.get('extension'),\n                commentDialog: this,\n                commentEditor: this.model,\n                el: this.el,\n            });\n\n            hookView.render();\n        });\n\n        return this;\n    },\n\n    /**\n     * Callback for when the Save button is pressed.\n     *\n     * Saves the comment, creating it if it's new, and closes the dialog.\n     */\n    save() {\n        /*\n         * Set this immediately, in case new text has been set in the editor\n         * that we haven't been notified about yet.\n         */\n        this.model.set('text', this._textEditor.getText());\n\n        if (this.model.get('canSave')) {\n            this.model.save({\n                error: (model, xhr) => {\n                    alert(gettext('Error saving comment: ') + xhr.errorText);\n                }\n            });\n            this.close();\n        }\n    },\n\n    /**\n     * Open the comment dialog and focuses the text field.\n     */\n    open() {\n        function openDialog() {\n            this.$el.scrollIntoView();\n            this._textEditor.focus();\n        }\n\n        this.$el\n            .css({\n                top: parseInt(this.$el.css('top'), 10) - this.SLIDE_DISTANCE,\n                opacity: 0,\n            })\n            .show();\n\n        this._handleResize();\n\n        if (this.model.get('canEdit')) {\n            this.model.beginEdit();\n        }\n\n        if (this.options.animate) {\n            this.$el.animate({\n                top: `+=${this.SLIDE_DISTANCE}px`,\n                opacity: 1,\n            }, 350, 'swing', _.bind(openDialog, this));\n        } else {\n            openDialog.call(this);\n        }\n    },\n\n    /**\n     * Close the comment dialog, discarding the comment block if empty.\n     *\n     * This can optionally take a callback and context to notify when the\n     * dialog has been closed.\n     *\n     * Args:\n     *     onClosed (function, optional):\n     *         An optional callback to call once the dialog has been closed.\n     *\n     *     context (object, optional):\n     *         Context to use when calling ``onClosed``.\n     */\n    close(onClosed=undefined, context={}) {\n        function closeDialog() {\n            this.model.close();\n            this.$el.remove();\n            this.trigger('closed');\n\n            if (_.isFunction(onClosed)) {\n                onClosed.call(context);\n            }\n        }\n\n        if (this.options.animate && this.$el.is(':visible')) {\n            this.$el.animate({\n                top: `-=${this.SLIDE_DISTANCE}px`,\n                opacity: 0,\n            }, 350, 'swing', _.bind(closeDialog, this));\n        } else {\n            closeDialog.call(this);\n        }\n    },\n\n    /**\n     * Move the comment dialog to the given coordinates.\n     *\n     * Args:\n     *     x (number):\n     *         The X-coordinate to move the dialog to.\n     *\n     *     y (number):\n     *         The Y-coordinate to move the dialog to.\n     */\n    move(x, y) {\n        this.$el.move(x, y);\n    },\n\n    /**\n     * Position the dialog beside an element.\n     *\n     * This takes the same arguments that $.fn.positionToSide takes.\n     *\n     * Args:\n     *     $el (jQuery):\n     *        The element to move the dialog next to.\n     *\n     *     options (object):\n     *         Options for the ``positionToSide`` call.\n     */\n    positionBeside($el, options) {\n        this.$el.positionToSide($el, options);\n    },\n\n    /**\n     * Update the title of the comment dialog, based on the current state.\n     */\n    _updateTitle() {\n        this._$title.text(this.model.get('dirty')\n                          ? RB.CommentDialogView._yourCommentDirtyText\n                          : RB.CommentDialogView._yourCommentText);\n    },\n\n    /**\n     * Callback for when the list of published comments changes.\n     *\n     * Sets the list of comments in the CommentsList, and factors in some\n     * new layout properties.\n     */\n    _onPublishedCommentsChanged() {\n        const comments = this.model.get('publishedComments') || [];\n        this.commentsList.setComments(comments,\n                                       this.model.get('publishedCommentsType'));\n\n        const showComments = (comments.length > 0);\n        this._$commentsPane.setVisible(showComments);\n\n        /* Do this here so that calculations can be done before open() */\n        let width = this.FORM_BOX_WIDTH;\n\n        if (showComments) {\n            width += this.COMMENTS_BOX_WIDTH;\n        }\n\n        let height;\n\n        if (this.model.get('canEdit')) {\n            height = this.DIALOG_TOTAL_HEIGHT;\n        } else if (RB.UserSession.instance.get('readOnly')) {\n            height = this.DIALOG_READ_ONLY_HEIGHT;\n        } else {\n            height = this.DIALOG_NON_EDITABLE_HEIGHT;\n        }\n\n        this.$el\n            .width(width)\n            .height(height);\n    },\n\n    /**\n     * Handle the resize of the comment dialog.\n     *\n     * This will lay out the elements in the dialog appropriately.\n     */\n    _handleResize() {\n        const height = this.$el.height();\n        let width = this.$el.width();\n        let commentsWidth = 0;\n\n        if (this._$commentsPane.is(':visible')) {\n            this._$commentsPane\n                .outerWidth(this.COMMENTS_BOX_WIDTH)\n                .outerHeight(height)\n                .move(0, 0, 'absolute');\n\n            const $commentsList = this.commentsList.$el;\n            $commentsList.height(this._$commentsPane.height() -\n                                 $commentsList.position().top);\n\n            commentsWidth = this._$commentsPane.outerWidth(true);\n            width -= commentsWidth;\n        }\n\n        this._$draftForm\n            .outerWidth(width)\n            .outerHeight(height)\n            .move(commentsWidth, 0, 'absolute');\n\n        const $textField = this._textEditor.$el;\n        this._textEditor.setSize(\n            (this._$body.width() -\n             $textField.getExtents('b', 'lr')),\n            (this._$draftForm.height() -\n             this._$header.outerHeight() -\n             this._$commentOptions.outerHeight() -\n             this._$footer.outerHeight() -\n             $textField.getExtents('b', 'tb')));\n    },\n\n    /**\n     * Callback for when the Cancel button is pressed.\n     *\n     * Cancels the comment (which may delete the comment block, if it's new)\n     * and closes the dialog.\n     */\n    _onCancelClicked() {\n        let shouldExit = true;\n\n        if (this.model.get('dirty')) {\n            shouldExit = confirm(RB.CommentDialogView._shouldExitText);\n        }\n\n        if (shouldExit) {\n            this.model.cancel();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for when the Delete button is pressed.\n     *\n     * Deletes the comment and closes the dialog.\n     */\n    _onDeleteClicked() {\n        if (this.model.get('canDelete')) {\n            this.model.deleteComment();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for keydown events in the text field.\n     *\n     * If the Escape key is pressed, the dialog will be closed.\n     * If the Control-Enter or Alt-I keys are pressed, we'll handle them\n     * specially. Control-Enter is the same thing as clicking Save.\n     *\n     * metaKey used as alternative for Mac key shortcut philosophy.\n     * metaKey is only fired on keydown in Chrome and Brave.\n     *\n     * The keydown event won't be propagated to the parent elements.\n     *\n     * Args:\n     *     e (Event):\n     *         The keydown event.\n     */\n    _onTextKeyDown(e) {\n        e.stopPropagation();\n\n        switch (e.which) {\n            case $.ui.keyCode.ESCAPE:\n                this._onCancelClicked();\n                return false;\n\n            case 10:\n            case $.ui.keyCode.ENTER:\n                /* Enter */\n                if (e.metaKey || e.ctrlKey) {\n                    this.save();\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n\n            case 73:\n            case 105:\n                /* I */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Firefox info window.\n                    e.preventDefault();\n                    this.model.set('openIssue', !this.model.get('openIssue'));\n                }\n                break;\n\n            case 77:\n            case 109:\n                /* M */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Mac's window minimize.\n                    e.preventDefault();\n                    this.model.set('richText', !this.model.get('richText'));\n                }\n                break;\n\n            default:\n                break;\n        }\n    },\n}, {\n    /**\n     * The singleton instance.\n     */\n    _instance: null,\n\n    /**\n     * Create and shows a new comment dialog and associated model.\n     *\n     * This is a class method that handles providing a comment dialog\n     * ready to use with the given state.\n     *\n     * Only one comment dialog can appear on the screen at any given time\n     * when using this.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view construction.\n     */\n    create: function(options={}) {\n        console.assert(options.comment, 'A comment must be specified');\n\n        const reviewRequestEditor =\n            options.reviewRequestEditor ||\n            RB.PageManager.getPage().model.reviewRequestEditor;\n\n        const dlg = new RB.CommentDialogView({\n            animate: options.animate,\n            commentIssueManager: options.commentIssueManager ||\n                                 reviewRequestEditor.get('commentIssueManager'),\n            model: new RB.CommentEditor({\n                comment: options.comment,\n                reviewRequest: reviewRequestEditor.get('reviewRequest'),\n                reviewRequestEditor: reviewRequestEditor,\n                publishedComments: options.publishedComments || undefined,\n                publishedCommentsType: options.publishedCommentsType ||\n                                       undefined,\n            })\n        });\n\n        dlg.render().$el\n            .css('z-index', 999) // XXX Use classes for z-indexes.\n            .appendTo(options.container || document.body);\n\n        options.position = options.position || {};\n\n        if (_.isFunction(options.position)) {\n            options.position(dlg);\n        } else if (options.position.beside) {\n            dlg.positionBeside(options.position.beside.el,\n                               options.position.beside);\n        } else {\n            let x = options.position.x;\n            let y = options.position.y;\n\n            if (x === undefined) {\n                /* Center it. */\n                x = $(document).scrollLeft() +\n                    ($(window).width() - dlg.$el.width()) / 2;\n            }\n\n            if (y === undefined) {\n                /* Center it. */\n                y = $(document).scrollTop() +\n                    ($(window).height() - dlg.$el.height()) / 2;\n            }\n\n            dlg.move(x, y);\n        }\n\n        dlg.on('closed', () => RB.CommentDialogView._instance = null);\n\n        const instance = RB.CommentDialogView._instance;\n        const showCommentDlg = function showCommentDlg() {\n            try {\n                dlg.open();\n            } catch(e) {\n                dlg.close();\n                throw e;\n            }\n\n            RB.CommentDialogView._instance = dlg;\n        };\n\n        if (instance) {\n            instance.on('closed', showCommentDlg);\n            instance.close();\n        } else {\n            showCommentDlg();\n        }\n\n        return dlg;\n    },\n\n    _cancelText: gettext('Cancel'),\n    _closeText: gettext('Close'),\n    _deleteText: gettext('Delete'),\n    _draftWarningTextTemplate: gettext('The review request\\'s current <a href=\"%s\">draft</a> needs to be published before you can comment.'),\n    _enableMarkdownText: gettext('Enable <u>M</u>arkdown'),\n    _loginTextTemplate: gettext('You must <a href=\"%s\">log in</a> to post a comment.'),\n    _markdownText: gettext('Markdown'),\n    _openAnIssueText: gettext('Open an <u>I</u>ssue'),\n    _otherReviewsText: gettext('Other reviews'),\n    _saveText: gettext('Save'),\n    _shouldExitText: gettext('You have unsaved changes. Are you sure you want to exit?'),\n    _verifyIssueText: gettext('Require Verification'),\n    _yourCommentText: gettext('Your comment'),\n    _yourCommentDirtyText: gettext('Your comment (unsaved)'),\n});\n\n\n})();\n"]}