{"version":3,"sources":["diffFragmentQueueViewTests.es6.js"],"names":[],"mappings":"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","file":"diffFragmentQueueViewTests.js","sourcesContent":["suite('rb/views/DiffFragmentQueueView', function() {\n    const URL_PREFIX = '/r/123/_fragments/diff-comments/';\n\n    let fragmentQueue;\n\n    beforeEach(function() {\n        fragmentQueue = new RB.DiffFragmentQueueView({\n            containerPrefix: 'container1',\n            reviewRequestPath: '/r/123/',\n            queueName: 'diff_fragments'\n        });\n    });\n\n    describe('Diff fragment loading', function() {\n        let $container1;\n        let $container2;\n        let $container3;\n        let $container4;\n\n        beforeEach(function() {\n            $container1 = $('<div id=\"container1_123\"/>')\n                .appendTo(window.$testsScratch);\n            $container2 = $('<div id=\"container1_124\"/>')\n                .appendTo(window.$testsScratch);\n            $container3 = $('<div id=\"container1_125\"/>')\n                .appendTo(window.$testsScratch);\n            $container4 = $('<div id=\"container1_126\"/>')\n                .appendTo(window.$testsScratch);\n\n            fragmentQueue.queueLoad('123', 'key1');\n            fragmentQueue.queueLoad('124', 'key1');\n            fragmentQueue.queueLoad('125', 'key1');\n            fragmentQueue.queueLoad('126', 'key2');\n        });\n\n        it('Fragment queueing', function() {\n            const queue = fragmentQueue._queue;\n\n            expect(queue.length).not.toBe(0);\n\n            expect(queue.key1.length).toBe(3);\n            expect(queue.key1).toContain({\n                commentID: '123',\n                onFragmentRendered: null,\n            });\n            expect(queue.key1).toContain({\n                commentID: '124',\n                onFragmentRendered: null,\n            });\n            expect(queue.key1).toContain({\n                commentID: '125',\n                onFragmentRendered: null,\n            });\n            expect(queue.key2.length).toBe(1);\n            expect(queue.key2).toContain({\n                commentID: '126',\n                onFragmentRendered: null,\n            });\n        });\n\n        it('Batch loading', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let blob;\n\n                if (url === `${URL_PREFIX}123,124,125/`) {\n                    const html1 = new Blob(['<span>Comment one</span>']);\n                    const html2 = new Blob(['<span>Comment two</span>']);\n                    const html3 = new Blob(['<span>Comment three</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [123, html1.size],\n                        }],\n                        html1,\n                        [{\n                            type: 'uint32',\n                            values: [124, html2.size],\n                        }],\n                        html2,\n                        [{\n                            type: 'uint32',\n                            values: [125, html3.size],\n                        }],\n                        html3,\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    const html = new Blob(['<span>Comment 4</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [126, html.size],\n                        }],\n                        html,\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                RB.DataUtils.readBlobAsArrayBuffer(blob, options.success);\n            });\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBeTruthy();\n                expect($container1.html()).toBe('<span>Comment one</span>');\n\n                expect($container2.data('diff-fragment-view')).toBeTruthy();\n                expect($container2.html()).toBe('<span>Comment two</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.html()).toBe('<span>Comment three</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>Comment 4</span>');\n\n                done();\n            });\n        });\n\n        it('With Unicode content', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let arrayBuffer;\n\n                if (url === `${URL_PREFIX}123,124,125/`) {\n                    /* UTF-8 bytes for \"<span>áéíóú 🔥</span>\" */\n                    const html1 = [\n                        60, 115, 112, 97, 110, 62, 195, 161, 195, 169,\n                        195, 173, 195, 179, 195, 186, 32, 240, 159, 148,\n                        165, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    /* UTF-8 bytes for \"<span>ÄËÏÖÜŸ 😱</span>\" */\n                    const html2 = [\n                        60, 115, 112, 97, 110, 62, 195, 132, 195, 139,\n                        195, 143, 195, 150, 195, 156, 197, 184, 32, 240,\n                        159, 152, 177, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    /* UTF-8 bytes for \"<span>🔥😱</span>\" */\n                    const html3 = [\n                        60, 115, 112, 97, 110, 62, 240, 159, 148, 165, 240,\n                        159, 152, 177, 60, 47, 115, 112, 97, 110, 62,\n                    ];\n\n                    expect(html1.length).toBe(28);\n                    expect(html2.length).toBe(30);\n                    expect(html3.length).toBe(21);\n\n                    arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                        {\n                            type: 'uint32',\n                            values: [123, html1.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html1,\n                        },\n                        {\n                            type: 'uint32',\n                            values: [124, html2.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html2,\n                        },\n                        {\n                            type: 'uint32',\n                            values: [125, html3.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html3,\n                        },\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    /* UTF-8 bytes for \"<span>ĀĒĪŌ 👿</span>\" */\n                    const html = [\n                        60, 115, 112, 97, 110, 62, 196, 128, 196, 146,\n                        196, 170, 197, 140, 32, 240, 159, 145, 191, 60,\n                        47, 115, 112, 97, 110, 62,\n                    ];\n\n                    expect(html.length).toBe(26);\n\n                    arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                        {\n                            type: 'uint32',\n                            values: [126, html.length],\n                        },\n                        {\n                            type: 'uint8',\n                            values: html,\n                        },\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                options.success(arrayBuffer);\n            });\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBeTruthy();\n                expect($container1.html()).toBe('<span>áéíóú 🔥</span>');\n\n                expect($container2.data('diff-fragment-view')).toBeTruthy();\n                expect($container2.html()).toBe('<span>ÄËÏÖÜŸ 😱</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.html()).toBe('<span>🔥😱</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>ĀĒĪŌ 👿</span>');\n\n                done();\n            });\n        });\n\n        it('With saved fragments', function(done) {\n            spyOn($, 'ajax').and.callFake(function(options) {\n                expect(options.dataType).toBe('arraybuffer');\n\n                const url = options.url;\n                let blob;\n\n                if (url === `${URL_PREFIX}124/`) {\n                    const html = new Blob(['<span>New comment 2</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [124, html.size],\n                        }],\n                        html,\n                    ]);\n                } else if (url === `${URL_PREFIX}126/`) {\n                    const html = new Blob(['<span>New comment 4</span>']);\n\n                    blob = RB.DataUtils.buildBlob([\n                        [{\n                            type: 'uint32',\n                            values: [126, html.size],\n                        }],\n                        html,\n                    ]);\n                } else {\n                    fail(`Unexpected URL ${url}`);\n                    return;\n                }\n\n                RB.DataUtils.readBlobAsArrayBuffer(blob, options.success);\n            });\n\n            /*\n             * We'll set up three containers, with the third being having its\n             * view disassociated and the fourth as a completely new container.\n             * The unsaved pre-loaded containers (2) and the new container (4)\n             * will be loaded. The disassociated container (3) will have a\n             * new view set up.\n             */\n            const view1 = new RB.DiffFragmentView();\n            $container1\n                .html('<span>Comment 1</span>')\n                .data('diff-fragment-view', view1);\n\n            const view2 = new RB.DiffFragmentView();\n            $container2\n                .html('<span>Comment 2</span>')\n                .data('diff-fragment-view', view2);\n\n            const view3 = new RB.DiffFragmentView();\n            $container3\n                .html('<span>Comment 3</span>')\n                .data('diff-fragment-view', view3);\n\n            /*\n             * We're going to save 123, 125, and 126 (which is not loaded).\n             * Only 123 and 125 will actually be saved.\n             */\n            fragmentQueue.saveFragment('123');\n            fragmentQueue.saveFragment('125');\n            fragmentQueue.saveFragment('126');\n\n            /* Disassociate container 3's view. */\n            $container3.removeData('diff-fragment-view');\n\n            fragmentQueue.loadFragments(() => {\n                expect($.ajax.calls.count()).toBe(2);\n\n                expect($container1.data('diff-fragment-view')).toBe(view1);\n                expect($container1.html()).toBe('<span>Comment 1</span>');\n\n                expect($container2.data('diff-fragment-view')).toBe(view2);\n                expect($container2.html()).toBe('<span>New comment 2</span>');\n\n                expect($container3.data('diff-fragment-view')).toBeTruthy();\n                expect($container3.data('diff-fragment-view')).not.toBe(view3);\n                expect($container3.html()).toBe('<span>Comment 3</span>');\n\n                expect($container4.data('diff-fragment-view')).toBeTruthy();\n                expect($container4.html()).toBe('<span>New comment 4</span>');\n\n                expect(fragmentQueue._saved).toEqual({});\n\n                done();\n            });\n        });\n    });\n});\n"]}