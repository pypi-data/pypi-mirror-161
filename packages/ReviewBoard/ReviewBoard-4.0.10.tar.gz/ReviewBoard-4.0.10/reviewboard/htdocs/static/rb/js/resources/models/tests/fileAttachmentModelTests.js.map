{"version":3,"sources":["fileAttachmentModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,oCAAD,EAAuC,YAAW;EACnD,IAAI,KAAJ;EAEA,UAAU,CAAC,YAAW;IAClB,KAAK,GAAG,IAAI,EAAE,CAAC,cAAP,CAAsB;MAC1B,YAAY,EAAE,IAAI,EAAE,CAAC,YAAP,CAAoB;QAC9B,UAAU;MADoB,CAApB;IADY,CAAtB,CAAR;EAKH,CANS,CAAV;EAQA,QAAQ,CAAC,QAAD,EAAW,YAAW;IAC1B,QAAQ,CAAC,eAAD,EAAkB,YAAW;MACjC,EAAE,CAAC,YAAD,EAAe,YAAW;QACxB,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,KAArB;QACA,MAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;QACA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,KAA1B;MACH,CAJC,CAAF;IAKH,CANO,CAAR;IAQA,QAAQ,CAAC,YAAD,EAAe,YAAW;MAC9B,EAAE,CAAC,0BAAD,EAA6B,YAAW;QACtC,MAAM,CAAC,KAAK,CAAC,KAAN,EAAD,CAAN,CAAsB,IAAtB,CAA2B,IAA3B;QAEA,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,KAAlB;QACA,MAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;QACA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,KAAvB;MACH,CANC,CAAF;MAQA,EAAE,CAAC,+BAAD,EAAkC,YAAW;QAC3C,KAAK,CAAC,EAAN,GAAW,GAAX;QACA,KAAK,CAAC,UAAN,CAAiB,EAAjB,GAAsB,GAAtB;QACA,MAAM,CAAC,KAAK,CAAC,KAAN,EAAD,CAAN,CAAsB,IAAtB,CAA2B,KAA3B;QAEA,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,KAAlB;QACA,MAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;QACA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,SAAvB;MACH,CARC,CAAF;IASH,CAlBO,CAAR;EAmBH,CA5BO,CAAR;EA8BA,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzB,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;QACrB,IAAI,EAAE,IADe;QAErB,eAAe,EAAE;UACb,EAAE,EAAE,EADS;UAEb,OAAO,EAAE,SAFI;UAGb,GAAG,EAAE,aAHQ;UAIb,QAAQ,EAAE,UAJG;UAKb,UAAU,EAAE,WALC;UAMb,QAAQ,EAAE,GANG;UAOb,SAAS,EAAE;QAPE;MAFI,CAAZ,CAAb;MAaA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;MACA,MAAM,CAAC,IAAI,CAAC,EAAN,CAAN,CAAgB,IAAhB,CAAqB,EAArB;MACA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,SAA1B;MACA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,aAA9B;MACA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,UAA3B;MACA,MAAM,CAAC,IAAI,CAAC,SAAN,CAAN,CAAuB,IAAvB,CAA4B,WAA5B;MACA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,GAA3B;MACA,MAAM,CAAC,IAAI,CAAC,aAAN,CAAN,CAA2B,IAA3B,CAAgC,eAAhC;IACH,CAtBC,CAAF;EAuBH,CAxBO,CAAR;AAyBH,CAlEI,CAAL","file":"fileAttachmentModelTests.js","sourcesContent":["suite('rb/resources/models/FileAttachment', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.FileAttachment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n\n        describe('file field', function() {\n            it('With new file attachment', function() {\n                expect(model.isNew()).toBe(true);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe('abc');\n            });\n\n            it('With existing file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe(undefined);\n            });\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                file_attachment: {\n                    id: 42,\n                    caption: 'caption',\n                    url: 'downloadURL',\n                    filename: 'filename',\n                    review_url: 'reviewURL',\n                    revision: 123,\n                    thumbnail: 'thumbnailHTML',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('caption');\n            expect(data.downloadURL).toBe('downloadURL');\n            expect(data.filename).toBe('filename');\n            expect(data.reviewURL).toBe('reviewURL');\n            expect(data.revision).toBe(123);\n            expect(data.thumbnailHTML).toBe('thumbnailHTML');\n        });\n    });\n});\n"]}