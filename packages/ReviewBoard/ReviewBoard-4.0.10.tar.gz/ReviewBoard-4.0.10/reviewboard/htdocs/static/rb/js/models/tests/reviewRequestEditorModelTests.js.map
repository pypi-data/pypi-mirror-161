{"version":3,"sources":["reviewRequestEditorModelTests.es6.js"],"names":[],"mappings":"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","file":"reviewRequestEditorModelTests.js","sourcesContent":["suite('rb/models/ReviewRequestEditor', function() {\n    let reviewRequest;\n    let editor;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            id: 1,\n        });\n\n        editor = new RB.ReviewRequestEditor({\n            reviewRequest: reviewRequest,\n        });\n    });\n\n    describe('Methods', function() {\n        describe('createFileAttachment', function() {\n            it('With new FileAttachment', function() {\n                const fileAttachments = editor.get('fileAttachments');\n\n                expect(fileAttachments.length).toBe(0);\n\n                const fileAttachment = editor.createFileAttachment();\n                expect(fileAttachments.length).toBe(1);\n\n                expect(fileAttachments.at(0)).toBe(fileAttachment);\n            });\n        });\n\n        describe('decr', function() {\n            it('With integer attribute', function() {\n                editor.set('myint', 1);\n\n                editor.decr('myint');\n                expect(editor.get('myint')).toBe(0);\n            });\n\n            it('With non-integer attribute', function() {\n                editor.set('foo', 'abc');\n\n                expect(() => editor.decr('foo')).toThrow();\n\n                expect(console.assert).toHaveBeenCalled();\n                expect(console.assert.calls.mostRecent().args[0]).toBe(false);\n                expect(editor.get('foo')).toBe('abc');\n            });\n\n            describe('editCount', function() {\n                it('When > 0', function() {\n                    editor.set('editCount', 1);\n\n                    editor.decr('editCount');\n                    expect(editor.get('editCount')).toBe(0);\n                    expect(editor.validationError).toBe(null);\n                });\n\n                it('When 0', function() {\n                    editor.set('editCount', 0);\n\n                    editor.decr('editCount');\n                    expect(editor.get('editCount')).toBe(0);\n                    expect(editor.validationError).toBe(\n                        RB.ReviewRequestEditor.strings.UNBALANCED_EDIT_COUNT);\n                });\n            });\n        });\n\n        describe('incr', function() {\n            it('With integer attribute', function() {\n                editor.set('myint', 0);\n                editor.incr('myint');\n                expect(editor.get('myint')).toBe(1);\n            });\n\n            it('With non-integer attribute', function() {\n                editor.set('foo', 'abc');\n\n                expect(() => editor.incr('foo')).toThrow();\n\n                expect(console.assert).toHaveBeenCalled();\n                expect(console.assert.calls.mostRecent().args[0]).toBe(false);\n                expect(editor.get('foo')).toBe('abc');\n            });\n        });\n\n        describe('getDraftField', function() {\n            it('For closeDescription', function() {\n                reviewRequest.set('closeDescription', 'Test');\n\n                const value = editor.getDraftField('closeDescription');\n                expect(value).toBe('Test');\n            });\n\n            it('For closeDescriptionRichText', function() {\n                reviewRequest.set('closeDescriptionRichText', true);\n\n                const value = editor.getDraftField('closeDescriptionRichText');\n                expect(value).toBe(true);\n            });\n\n            it('For draft fields', function() {\n                reviewRequest.draft.set('description', 'Test');\n\n                const value = editor.getDraftField('description');\n                expect(value).toBe('Test');\n            });\n\n            it('With useExtraData', function() {\n                const extraData = reviewRequest.draft.get('extraData');\n\n                extraData.foo = '**Test**';\n\n                const value = editor.getDraftField('foo', {\n                    useExtraData: true\n                });\n                expect(value).toBe('**Test**');\n            });\n\n            describe('With useExtraData and useRawTextValue', function() {\n                it('With field in rawTextFields', function() {\n                    const draft = reviewRequest.draft;\n                    const extraData = reviewRequest.draft.get('extraData');\n\n                    extraData.foo = '<b>Test</b>';\n                    draft.set('rawTextFields', {\n                        extra_data: {\n                            foo: '**Test**',\n                        },\n                    });\n\n                    const value = editor.getDraftField('foo', {\n                        useExtraData: true,\n                        useRawTextValue: true,\n                    });\n                    expect(value).toBe('**Test**');\n                });\n\n                it('With field not in rawTextFields', function() {\n                    const extraData = reviewRequest.draft.get('extraData');\n\n                    extraData.foo = '<b>Test</b>';\n\n                    const value = editor.getDraftField('foo', {\n                        useExtraData: true,\n                        useRawTextValue: true,\n                    });\n                    expect(value).toBe('<b>Test</b>');\n                });\n            });\n        });\n\n        describe('setDraftField', function() {\n            let callbacks;\n            let draft;\n\n            beforeEach(function() {\n                callbacks = {\n                    error: function() {},\n                    success: function() {},\n                };\n\n                spyOn(callbacks, 'error');\n                spyOn(callbacks, 'success');\n\n                draft = editor.get('reviewRequest').draft;\n            });\n\n            describe('When publishing', function() {\n                beforeEach(function() {\n                    spyOn(editor, 'publishDraft');\n\n                    editor.set({\n                        publishing: true,\n                        pendingSaveCount: 1,\n                    });\n                });\n\n                it('Successful saves', function() {\n                    spyOn(draft, 'save').and.callFake(\n                        (options, context) => options.success.call(context));\n\n                    editor.setDraftField('summary', 'My Summary', _.defaults({\n                        jsonFieldName: 'summary',\n                    }, callbacks));\n\n                    expect(callbacks.success).toHaveBeenCalled();\n                    expect(editor.get('publishing')).toBe(false);\n                    expect(editor.get('pendingSaveCount')).toBe(0);\n                    expect(editor.publishDraft).toHaveBeenCalled();\n                });\n\n                it('Field set errors', function() {\n                    spyOn(draft, 'save').and.callFake((options, context) =>\n                        options.error.call(context, draft, {\n                            errorPayload: {\n                                fields: {\n                                    summary: ['Something went wrong'],\n                                },\n                            },\n                        }));\n\n                    editor.setDraftField('summary', 'My Summary', _.defaults({\n                        jsonFieldName: 'summary',\n                    }, callbacks));\n\n                    expect(callbacks.error).toHaveBeenCalled();\n                    expect(editor.get('publishing')).toBe(false);\n                    expect(editor.get('pendingSaveCount')).toBe(1);\n                    expect(editor.publishDraft).not.toHaveBeenCalled();\n                });\n            });\n\n            describe('Rich text fields', function() {\n                describe('changeDescription', function() {\n                    describe('Draft description', function() {\n                        function testDraftDescription(richText, textType) {\n                            spyOn(reviewRequest, 'close');\n                            spyOn(reviewRequest.draft, 'save');\n\n                            editor.setDraftField(\n                                'changeDescription',\n                                'My description',\n                                {\n                                    allowMarkdown: true,\n                                    fieldID: 'changedescription',\n                                    richText: richText,\n                                    jsonFieldName: 'changedescription',\n                                    jsonTextTypeFieldName:\n                                        'changedescription_text_type'\n                                });\n\n                            expect(reviewRequest.close)\n                                .not.toHaveBeenCalled();\n                            expect(reviewRequest.draft.save)\n                                .toHaveBeenCalled();\n\n                            expect(\n                                reviewRequest.draft.save.calls.argsFor(0)[0].data\n                            ).toEqual({\n                                changedescription_text_type: textType,\n                                changedescription: 'My description',\n                                force_text_type: 'html',\n                                include_text_types: 'raw'\n                            });\n                        }\n\n                        it('For Markdown', function() {\n                            testDraftDescription(true, 'markdown');\n                        });\n\n                        it('For plain text', function() {\n                            testDraftDescription(false, 'plain');\n                        });\n                    });\n                });\n            });\n\n            describe('Special list fields', function() {\n                describe('targetGroups', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField('targetGroups', '', _.defaults({\n                            jsonFieldName: 'target_groups'\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With values', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField(\n                            'targetGroups', 'group1, group2',\n                           _.defaults({\n                                jsonFieldName: 'target_groups'\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid groups', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        target_groups: ['group1', 'group2'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField('targetGroups', 'group1, group2',\n                                             _.defaults({\n                            jsonFieldName: 'target_groups',\n                        }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'Groups \"group1\" and \"group2\" do ' +\n                                       'not exist.',\n                        });\n                    });\n                });\n\n                describe('targetPeople', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField('targetPeople', '', _.defaults({\n                            jsonFieldName: 'target_people',\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With values', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField(\n                            'targetPeople', 'user1, user2',\n                            _.defaults({\n                                jsonFieldName: 'target_people'\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid users', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        target_people: ['user1', 'user2'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField(\n                            'targetPeople', 'user1, user2',\n                            _.defaults({\n                                jsonFieldName: 'target_people',\n                            }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'Users \"user1\" and \"user2\" do not exist.',\n                        });\n                    });\n                });\n\n                describe('submitter', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake(\n                            (options, context) => options.success.call(context));\n\n                        editor.setDraftField('submitter', '', _.defaults({\n                            jsonFieldName: 'submitter',\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With value', function() {\n                        spyOn(draft, 'save').and.callFake(\n                            (options, context) => options.success.call(context));\n\n                        editor.setDraftField(\n                            'submitter', 'user1',\n                            _.defaults({\n                                jsonFieldName: 'submitter',\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid user', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        submitter: ['user1'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField(\n                            'submitter', 'user1',\n                            _.defaults({\n                                jsonFieldName: 'submitter',\n                            }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'User \"user1\" does not exist.',\n                        });\n                    });\n                });\n            });\n\n            describe('Custom fields', function() {\n                describe('Rich text fields', function() {\n                    function testFields(richText, textType) {\n                        spyOn(reviewRequest.draft, 'save');\n\n                        editor.setDraftField(\n                            'myField',\n                            'Test text.',\n                            {\n                                allowMarkdown: true,\n                                useExtraData: true,\n                                fieldID: 'myfield',\n                                richText: richText,\n                                jsonFieldName: 'myfield',\n                                jsonTextTypeFieldName:\n                                    'myfield_text_type'\n                            });\n\n                        expect(reviewRequest.draft.save)\n                            .toHaveBeenCalled();\n                        expect(\n                            reviewRequest.draft.save.calls.argsFor(0)[0].data\n                        ).toEqual({\n                            'extra_data.myfield_text_type': textType,\n                            'extra_data.myfield': 'Test text.',\n                            force_text_type: 'html',\n                            include_text_types: 'raw'\n                        });\n                    }\n\n                    it('For Markdown', function() {\n                        testFields(true, 'markdown');\n                    });\n\n                    it('For plain text', function() {\n                        testFields(false, 'plain');\n                    });\n                });\n            });\n        });\n    });\n\n    describe('Reviewed objects', function() {\n        describe('File attachments', function() {\n            it('Removed when destroyed', function(done) {\n                const fileAttachments = editor.get('fileAttachments');\n                const fileAttachment = editor.createFileAttachment();\n                const draft = editor.get('reviewRequest').draft;\n\n                spyOn(draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                expect(fileAttachments.at(0)).toBe(fileAttachment);\n\n                fileAttachment.destroy({\n                    success: function() {\n                        expect(fileAttachments.length).toBe(0);\n                        done();\n                    }\n                });\n            });\n        });\n\n        describe('Screenshots', function() {\n            it('Removed when destroyed', function(done) {\n                const screenshots = editor.get('screenshots');\n                const screenshot = reviewRequest.createScreenshot();\n\n                screenshots.add(screenshot);\n                expect(screenshots.at(0)).toBe(screenshot);\n\n                screenshot.destroy({\n                    success: () => {\n                        expect(screenshots.length).toBe(0);\n                        done();\n                    }\n                });\n            });\n        });\n    });\n\n    describe('Events', function() {\n        describe('saved', function() {\n            it('When new file attachment saved', function() {\n                const fileAttachment = editor.createFileAttachment();\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When new file attachment destroyed', function(done) {\n                const fileAttachment = editor.createFileAttachment();\n                const draft = editor.get('reviewRequest').draft;\n\n                spyOn(draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                fileAttachment.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n\n            it('When existing file attachment saved', function() {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When existing file attachment destroyed', function(done) {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(reviewRequest.draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                fileAttachment.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n\n            it('When existing screenshot saved', function() {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(editor, 'trigger');\n                screenshot.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When existing screenshot destroyed', function(done) {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(reviewRequest.draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                screenshot.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n        });\n\n        describe('saving', function() {\n            it('When new file attachment saving', function() {\n                const fileAttachment = editor.createFileAttachment();\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n\n            it('When existing file attachment saving', function() {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n\n            it('When screenshot saving', function() {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(editor, 'trigger');\n                screenshot.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n        });\n    });\n});\n"]}