{"version":3,"sources":["reviewRequestPageViewTests.es6.js"],"names":[],"mappings":"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","file":"reviewRequestPageViewTests.js","sourcesContent":["suite('rb/reviewRequestPage/views/ReviewRequestPageView', function() {\n    const template = dedent`\n        <div id=\"review-banner\"></div>\n        <a id=\"collapse-all\"></a>\n        <a id=\"expand-all\"></a>\n        <div>\n         <div class=\"review review-request-page-entry\" id=\"review123\">\n          <div class=\"review-request-page-entry-contents\">\n           <div class=\"body\">\n            <pre class=\"body_top\">Body Top</pre>\n            <div class=\"comment-section\" data-context-type=\"body_top\">\n            </div>\n            <div class=\"comment-section\" data-context-id=\"123\"\n                 data-context-type=\"diff_comments\">\n            </div>\n            <pre class=\"body_bottom\">Body Bottom</pre>\n            <div class=\"comment-section\" data-context-type=\"body_bottom\">\n            </div>\n           </div>\n         </div>\n         <div class=\"review review-request-page-entry\" id=\"review124\">\n          <div class=\"review-request-page-entry-contents\">\n           <div class=\"body\">\n            <pre class=\"body_top\">Body Top</pre>\n            <div class=\"comment-section\" data-context-type=\"body_top\">\n            </div>\n            <pre class=\"body_bottom\">Body Bottom</pre>\n            <div class=\"comment-section\" data-context-type=\"body_bottom\">\n            </div>\n           </div>\n          </div>\n         </div>\n        </div>\n    `;\n\n    let page;\n    let pageView;\n    let entry1;\n    let entry2;\n\n    beforeEach(function() {\n        const $el = $('<div/>')\n            .html(template)\n            .appendTo($testsScratch);\n\n        RB.DnDUploader.instance = null;\n\n        page = new RB.ReviewRequestPage.ReviewRequestPage({\n            checkForUpdates: false,\n            reviewRequestData: {},\n            editorData: {\n                fileAttachments: [],\n                mutableByUser: true,\n                showSendEmail: false,\n            },\n        }, {\n            parse: true,\n        });\n\n        pageView = new RB.ReviewRequestPage.ReviewRequestPageView({\n            el: $el,\n            model: page,\n        });\n\n        // Stub this out.\n        spyOn(RB.ReviewRequestPage.IssueSummaryTableView.prototype,\n              'render');\n\n        const reviewRequest = page.get('reviewRequest');\n\n        pageView.addEntryView(new RB.ReviewRequestPage.ReviewEntryView({\n            model: new RB.ReviewRequestPage.ReviewEntry({\n                review: reviewRequest.createReview(123, {\n                    shipIt: true,\n                    public: true,\n                    bodyTop: 'Body Top',\n                    bodyBottom: 'Body Bottom',\n                }),\n                reviewRequestEditor: pageView.reviewRequestEditor,\n            }),\n            el: $el.find('#review123'),\n        }));\n\n        pageView.addEntryView(new RB.ReviewRequestPage.ReviewEntryView({\n            model: new RB.ReviewRequestPage.ReviewEntry({\n                review: reviewRequest.createReview(124, {\n                    shipIt: false,\n                    public: true,\n                    bodyTop: 'Body Top',\n                    bodyBottom: 'Body Bottom',\n                }),\n                reviewRequestEditor: pageView.reviewRequestEditor,\n            }),\n            el: $el.find('#review124'),\n        }));\n\n        pageView.render();\n\n        expect(pageView._entryViews.length).toBe(2);\n        entry1 = pageView._entryViews[0];\n        entry2 = pageView._entryViews[1];\n    });\n\n    afterEach(function() {\n        RB.DnDUploader.instance = null;\n    });\n\n    describe('Actions', function() {\n        it('Collapse all', function() {\n            const $el1 = entry1.$el.find('.review-request-page-entry-contents');\n            const $el2 = entry2.$el.find('.review-request-page-entry-contents');\n\n            expect($el1.hasClass('collapsed')).toBe(false);\n            expect($el2.hasClass('collapsed')).toBe(false);\n\n            pageView.$('#collapse-all').click();\n\n            expect($el1.hasClass('collapsed')).toBe(true);\n            expect($el2.hasClass('collapsed')).toBe(true);\n        });\n\n        it('Expand all', function() {\n            const $el1 = entry1.$el.find('.review-request-page-entry-contents');\n            const $el2 = entry2.$el.find('.review-request-page-entry-contents');\n\n            $el1.addClass('collapsed');\n            $el2.addClass('collapsed');\n\n            pageView.$('#expand-all').click();\n\n            expect($el1.hasClass('collapsed')).toBe(false);\n            expect($el2.hasClass('collapsed')).toBe(false);\n        });\n    });\n\n    describe('Methods', function() {\n        describe('openCommentEditor', function() {\n            beforeEach(function() {\n                spyOn(RB.ReviewRequestPage.ReviewReplyEditorView.prototype,\n                      'openCommentEditor');\n                spyOn(entry1, 'getReviewReplyEditorView').and.callThrough();\n                spyOn(entry2, 'getReviewReplyEditorView').and.callThrough();\n            });\n\n            it('With body_top', function() {\n                pageView.openCommentEditor('body_top');\n\n                expect(entry1.getReviewReplyEditorView).toHaveBeenCalled();\n                expect(RB.ReviewRequestPage.ReviewReplyEditorView\n                       .prototype.openCommentEditor).toHaveBeenCalled();\n\n                /* We should have matched the first one. */\n                expect(entry2.getReviewReplyEditorView).not.toHaveBeenCalled();\n            });\n\n            it('With body_bottom', function() {\n                pageView.openCommentEditor('body_bottom');\n\n                expect(entry1.getReviewReplyEditorView).toHaveBeenCalled();\n                expect(RB.ReviewRequestPage.ReviewReplyEditorView\n                       .prototype.openCommentEditor).toHaveBeenCalled();\n\n                /* We should have matched the first one. */\n                expect(entry2.getReviewReplyEditorView).not.toHaveBeenCalled();\n            });\n\n            it('With comments', function() {\n                pageView.openCommentEditor('diff_comments', 123);\n\n                expect(entry1.getReviewReplyEditorView).toHaveBeenCalled();\n                expect(RB.ReviewRequestPage.ReviewReplyEditorView\n                       .prototype.openCommentEditor).toHaveBeenCalled();\n\n                /* We should have matched the first one. */\n                expect(entry2.getReviewReplyEditorView).not.toHaveBeenCalled();\n            });\n        });\n    });\n});\n"]}