{"version":3,"sources":["oauthClientSecretView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,qBAAH,GAA2B,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;EAC5C,MAAM,EAAE;IACJ,mCAAmC,gBAD/B;IAEJ,mCAAmC;EAF/B,CADoC;;EAM5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,UAAU,CAAC,OAAD,EAAU;IAChB,KAAK,OAAL,GAAe,OAAO,CAAC,MAAvB;EACH,CAnB2C;;EAqB5C;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,KAAK,OAAL,GAAe,KAAK,CAAL,CAAO,OAAP,CAAf;IACA,KAAK,OAAL,GAAe,KAAK,CAAL,CAAO,2BAAP,CAAf;IAEA,OAAO,IAAP;EACH,CAjC2C;;EAmC5C;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,cAAc,CAAC,CAAD,EAAI;IACd,CAAC,CAAC,cAAF;IACA,CAAC,CAAC,eAAF;;IAEA,KAAK,OAAL,CACK,KADL,GAEK,MAFL;;IAIA,QAAQ,CAAC,WAAT,CAAqB,MAArB;EACH,CAnD2C;;EAqD5C;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,oBAAoB,CAAC,CAAD,EAAI;IACpB,CAAC,CAAC,cAAF;IACA,CAAC,CAAC,eAAF;;IAEA,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,EAA8B,IAA9B;;IACA,EAAE,CAAC,OAAH,CAAW;MACP,GAAG,EAAE,KAAK,OADH;MAEP,MAAM,EAAE,KAFD;MAGP,IAAI,EAAE;QACF,4BAA4B;MAD1B,CAHC;MAMP,OAAO,EAAE,GAAG,IAAI;QACZ,KAAK,OAAL,CAAa,GAAb,CAAiB,GAAG,CAAC,SAAJ,CAAc,aAA/B;;QACA,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,EAA8B,KAA9B;MACH,CATM;MAUP,KAAK,EAAE,GAAG,IAAI;QACV,IAAI,GAAG,CAAC,SAAR,EAAmB;UACf,KAAK,CAAC,GAAG,CAAC,SAAL,CAAL;QACH;;QAED,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,EAA8B,KAA9B;MACH;IAhBM,CAAX;EAkBH;;AAnF2C,CAArB,CAA3B","file":"oauthClientSecretView.js","sourcesContent":["/**\n * A view for editing a client secret.\n *\n * This view hits the API to regenerate the associated application's\n * client secret and updates the ``<input>`` element with the updated value. It\n * also bundles a copy button so that the value can be copied to the user's\n * clipboard.\n */\nRB.OAuthClientSecretView = Backbone.View.extend({\n    events: {\n        'click .copyable-text-input-link': '_onCopyClicked',\n        'click .regenerate-secret-button': '_onRegenerateClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The view options.\n     *\n     * Option Args:\n     *     apiURL (string):\n     *         The URL of the API endpoint for the application.\n     */\n    initialize(options) {\n        this._apiURL = options.apiURL;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.OAuthClientSecretView:\n     *     This view.\n     */\n    render() {\n        this._$input = this.$('input');\n        this._$regen = this.$('.regenerate-secret-button');\n\n        return this;\n    },\n\n    /**\n     * Copy the client secret to the clipboard.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this handler.\n     */\n    _onCopyClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._$input\n            .focus()\n            .select();\n\n        document.execCommand('copy');\n    },\n\n    /**\n     * Regenerate the client secret.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this handler.\n     */\n    _onRegenerateClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._$regen.prop('disabled', true);\n        RB.apiCall({\n            url: this._apiURL,\n            method: 'PUT',\n            data: {\n                'regenerate_client_secret': 1,\n            },\n            success: rsp => {\n                this._$input.val(rsp.oauth_app.client_secret);\n                this._$regen.prop('disabled', false);\n            },\n            error: xhr => {\n                if (xhr.errorText) {\n                    alert(xhr.errorText);\n                }\n\n                this._$regen.prop('disabled', false);\n            }\n        });\n    }\n});\n"]}