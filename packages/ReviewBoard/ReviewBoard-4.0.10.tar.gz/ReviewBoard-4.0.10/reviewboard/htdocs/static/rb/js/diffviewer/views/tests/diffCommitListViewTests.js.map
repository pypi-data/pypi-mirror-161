{"version":3,"sources":["diffCommitListViewTests.es6.js"],"names":[],"mappings":"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","file":"diffCommitListViewTests.js","sourcesContent":["suite('rb/diffviewer/views/DiffCommitListView', function() {\n    function testRows($rows, options) {\n        expect($rows.length).toEqual(options.rowOptions.length);\n\n        const linkIndex = (\n            (options.haveHistory ? 1 : 0) +\n            (options.haveInterCommitDiffControls ? 2 : 0)\n        );\n\n        const valueStartIndex = (\n            linkIndex +\n            (options.haveExpandCollapse ? 1 : 0)\n        );\n\n        for (let i = 0; i < $rows.length; i++) {\n            const $row = $rows.eq(i).find('td');\n\n            const rowOptions = options.rowOptions[i];\n            const values = rowOptions.values;\n\n            expect($row.length).toEqual(values.length + valueStartIndex);\n\n            if (options.haveHistory) {\n                expect($row.eq(0).text().trim()).toEqual(\n                    rowOptions.historySymbol.trim());\n            }\n\n            if (options.haveInterCommitDiffControls) {\n                const $baseSelector = $row.eq(0).find('input');\n                expect($baseSelector.length).toEqual(1);\n                expect($baseSelector.attr('value')).toEqual((i + 1).toString());\n                expect($baseSelector.prop('checked')).toEqual(\n                    !!rowOptions.baseSelected);\n                expect($baseSelector.prop('disabled')).toEqual(\n                    !!rowOptions.baseDisabled);\n\n                const $tipSelector = $row.eq(1).find('input');\n                expect($tipSelector.length).toEqual(1);\n                expect($tipSelector.attr('value')).toEqual((i + 1).toString());\n                expect($tipSelector.prop('checked')).toEqual(\n                    rowOptions.tipSelected ? true : false);\n                expect($tipSelector.prop('disabled')).toEqual(\n                    !!rowOptions.tipDisabled);\n            }\n\n            if (options.haveExpandCollapse) {\n                const $link = $row.eq(linkIndex).find('a');\n\n                if (rowOptions.haveExpandCollapse) {\n                    expect($link.length).toEqual(1);\n\n                    const $span = $link.find('span');\n\n                    if (rowOptions.expanded) {\n                        expect($span.attr('class')).toEqual('fa fa-minus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Collapse commit message.'));\n                    } else {\n                        expect($span.attr('class')).toEqual('fa fa-plus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Expand commit message.'));\n                    }\n                }\n            }\n\n            for (let j = 0; j < values; j++) {\n                expect($row.eq(valueStartIndex + j).text().trim()).toEqual(values[j]);\n            }\n        }\n    }\n\n    let view;\n    let $container;\n\n    beforeEach(function() {\n        $container = $('<div class=\"diff-commit-list\" />')\n            .appendTo($testsScratch);\n    });\n\n    afterEach(function() {\n        view.remove();\n        view = null;\n        $container = null;\n    });\n\n    describe('Render', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 1',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 2',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                historyDiff: new RB.CommitHistoryDiffEntryCollection(),\n                isInterdiff: false,\n                baseCommitID: null,\n                tipCommitID: null,\n            });\n        });\n\n        it('Without expand/collapse column', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n        });\n\n        it('With expand/collapse column', function() {\n            model.get('commits').models[0].set({\n                commitMessage: 'Long commit message\\n\\n' +\n                               'This is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: false,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Updates when collection reset', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            let $table = $container.find('table');\n\n            let $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n\n            model.get('commits').reset([\n                {\n                    commit_id: 'r4',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4\\n\\nIt is very long',\n                },\n            ], {parse: true});\n\n            $table = $container.find('table');\n\n            $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Interdiff', function() {\n            model.get('historyDiff').reset([\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.REMOVED,\n                    old_commit_id: 1,\n                },\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.ADDED,\n                    new_commit_id: 2,\n                }\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(3);\n            expect($cols.eq(0).text().trim()).toEqual('');\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                haveHistory: true,\n                rowOptions: [\n                    {\n                        historySymbol: '-',\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        historySymbol: '+',\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff Controls', function() {\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff and Expand/Collapse Controls', function() {\n             model.get('commits').get(1).set({\n                commitMessage: 'Long commit message\\n' +\n                               '\\nThis is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        haveExpandCollapse: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With base and tip commit IDs set', function() {\n            const commits = model.get('commits');\n\n            commits.add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            model.set({\n                'baseCommitID': commits.findWhere({commitID: 'r2'}).id,\n                'tipCommitID': commits.findWhere({commitID: 'r3'}).id,\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        tipDisabled: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipDisabled: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                    {\n                        baseSelected: true,\n                        tipSelected: true,\n                        values: ['Commit message 3', 'Example Author'],\n\n                    },\n                    {\n                        baseDisabled: true,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n    });\n\n    describe('Event handlers', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Long commit message\\n\\n' +\n                                    'This is a long message.\\n',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Super long\\n\\nSo very long.',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                isInterdiff: false,\n            });\n        });\n\n        it('Expand/collapse', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            const $links = $table.find('a');\n\n            // Expand first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Long commit message\\n\\nThis is a long message.',\n                            'Example Author',\n                        ],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Collapse first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Expand second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Super long\\n\\nSo very long.',\n                            'Example Author',\n                        ],\n                    },\n                ],\n            });\n\n            // Collapse second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Select base/tip', function() {\n            model.get('commits').add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                showInterCommitDiffControls: true,\n                model: model,\n            });\n            view.render();\n\n            const $baseSelectors = $container.find('.base-commit-selector');\n            const $tipSelectors = $container.find('.tip-commit-selector');\n\n            expect($baseSelectors.length).toEqual(4);\n            expect($tipSelectors.length).toEqual(4);\n\n            // Select the interval (r4, r4].\n            $baseSelectors.eq(3).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(3);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r4].\n            $baseSelectors.eq(0).click();\n\n            for (let i = 0; i < 4; i++) {\n                expect($baseSelectors.eq(i).prop('disabled')).toEqual(false);\n                expect($tipSelectors.eq(i).prop('disabled')).toEqual(false);\n            }\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r1].\n            $tipSelectors.eq(0).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(1);\n\n            // Select the interval (r3, r3].\n            $tipSelectors.eq(2).click();\n            $baseSelectors.eq(2).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(2);\n            expect(model.get('tipCommitID')).toEqual(3);\n        });\n    });\n});\n"]}