{"version":3,"sources":["apiTokenModel.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,EAAE,CAAC,QAAH,GAAc,EAAE,CAAC,YAAH,CAAgB,MAAhB,CAAuB;EACjC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,QAAQ,GAAG;IACP,OAAO,CAAC,CAAC,QAAF,CAAW;MACd,UAAU,EAAE,IADE;MAEd,IAAI,EAAE,IAFQ;MAGd,MAAM,EAAE,EAHM;MAId,QAAQ,EAAE;IAJI,CAAX,EAKJ,EAAE,CAAC,YAAH,CAAgB,SAAhB,CAA0B,QAA1B,EALI,CAAP;EAMH,CAfgC;;EAiBjC,YAAY,EAAE,WAjBmB;;EAmBjC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,GAAG,GAAG;IACF,MAAM,GAAG,GAAG,SAAS,IAAI,KAAK,GAAL,CAAS,iBAAT,KAA+B,EAAnC,CAAT,GACA,YADA,GACe,KAAK,GAAL,CAAS,UAAT,CADf,GACsC,cADlD;IAGA,OAAO,KAAK,KAAL,KAAe,GAAf,aAAwB,GAAxB,SAA8B,KAAK,EAAnC,MAAP;EACH,CA/BgC;;EAiCjC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,GAAG;IACL,OAAO;MACH,IAAI,EAAE,KAAK,GAAL,CAAS,MAAT,CADH;MAEH,MAAM,EAAE,IAAI,CAAC,SAAL,CAAe,KAAK,GAAL,CAAS,QAAT,CAAf;IAFL,CAAP;EAIH,CA7CgC;;EA+CjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,iBAAiB,CAAC,GAAD,EAAM;IACnB,OAAO;MACH,UAAU,EAAE,GAAG,CAAC,KADb;MAEH,IAAI,EAAE,GAAG,CAAC,IAFP;MAGH,MAAM,EAAE,GAAG,CAAC;IAHT,CAAP;EAKH;;AAhEgC,CAAvB,EAiEX;EACC,eAAe,EAAE;IACb,SAAS,EAAE,EADE;IAEb,QAAQ,EAAE;MACN,SAAS,EAAE;QACP,KAAK;UACD,KAAK,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,CADN;UAED,KAAK,EAAE,CAAC,GAAD;QAFN;MADE;IADL,CAFG;IAUb,MAAM,EAAE;MACJ,SAAS,EAAE;QACP,KAAK;UACD,KAAK,EAAE,CAAC,GAAD,CADN;UAED,KAAK,EAAE;QAFN;MADE;IADP;EAVK;AADlB,CAjEW,CAAd","file":"apiTokenModel.js","sourcesContent":["/**\n * An API token.\n */\nRB.APIToken = RB.BaseResource.extend({\n    /**\n     * Return defaults for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The default values for new model instances.\n     */\n    defaults() {\n        return _.defaults({\n            tokenValue: null,\n            note: null,\n            policy: {},\n            userName: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'api_token',\n\n    /**\n     * Return the URL for syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when making HTTP requests.\n     */\n    url() {\n        const url = SITE_ROOT + (this.get('localSitePrefix') || '') +\n                    'api/users/' + this.get('userName') + '/api-tokens/';\n\n        return this.isNew() ? url : `${url}${this.id}/`;\n    },\n\n    /**\n     * Return a JSON-serializable representation of the model.\n     *\n     * Returns:\n     *     object:\n     *     An object suitable for passing into JSON.stringify.\n     */\n    toJSON() {\n        return {\n            note: this.get('note'),\n            policy: JSON.stringify(this.get('policy'))\n        };\n    },\n\n    /**\n     * Parse the response from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server API endpoint.\n     *\n     * Returns:\n     *     object:\n     *     The parsed attribute values.\n     */\n    parseResourceData(rsp) {\n        return {\n            tokenValue: rsp.token,\n            note: rsp.note,\n            policy: rsp.policy\n        };\n    }\n}, {\n    defaultPolicies: {\n        readWrite: {},\n        readOnly: {\n            resources: {\n                '*': {\n                    allow: ['GET', 'HEAD', 'OPTIONS'],\n                    block: ['*']\n                }\n            }\n        },\n        custom: {\n            resources: {\n                '*': {\n                    allow: ['*'],\n                    block: []\n                }\n            }\n        }\n    }\n});\n"]}