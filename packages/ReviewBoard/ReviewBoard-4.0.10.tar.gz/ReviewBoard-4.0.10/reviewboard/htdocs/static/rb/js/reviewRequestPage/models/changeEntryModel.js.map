{"version":3,"sources":["changeEntryModel.es6.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;EAGZ,MAAM,WAAW,GAAG,EAAE,CAAC,iBAAH,CAAqB,kBAAzC;EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACA,EAAE,CAAC,iBAAH,CAAqB,WAArB,GAAmC,WAAW,CAAC,MAAZ,CAAmB;IAClD;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,QAAQ,GAAG;MACP,OAAO,CAAC,CAAC,QAAF,CAAW;QACd,OAAO,EAAE;MADK,CAAX,EAEJ,WAAW,CAAC,SAAZ,CAAsB,QAAtB,CAA+B,IAA/B,CAAoC,IAApC,CAFI,CAAP;IAGH,CAZiD;;IAclD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,KAAK,CAAC,KAAD,EAAQ;MACT,MAAM,OAAO,GAAG,KAAK,CAAC,OAAN,GACV,IAAI,EAAE,CAAC,oBAAP,CAA4B,KAAK,CAAC,OAAlC,EAA2C;QAAC,KAAK,EAAE;MAAR,CAA3C,CADU,GAEV,IAFN;MAIA,OAAO,CAAC,CAAC,MAAF,CACH,WAAW,CAAC,SAAZ,CAAsB,KAAtB,CAA4B,IAA5B,CAAiC,IAAjC,EAAuC,KAAvC,CADG,EAEH;QACI,OAAO,EAAE;MADb,CAFG,CAAP;IAKH;;EApCiD,CAAnB,CAAnC;AAwCC,CA7DD","file":"changeEntryModel.js","sourcesContent":["(function() {\n\n\nconst parentModel = RB.ReviewRequestPage.StatusUpdatesEntry;\n\n\n/**\n * An entry on the review request page for review request changes.\n *\n * This stores state needed for change descriptions, including the status\n * updates on the change.\n *\n * Model Attributes:\n *     commits (RB.DiffCommitCollection):\n *         The collection of both old and new commits for this change entry.\n *\n * See Also:\n *     :js:class:`RB.ReviewRequestPage.StatusUpdatesEntry`:\n *         For additional model attribtues.\n *\n */\nRB.ReviewRequestPage.ChangeEntry = parentModel.extend({\n    /**\n     * Return the default attribute values.\n     *\n     * Returns:\n     *     object:\n     *     The default attribute values.\n     */\n    defaults() {\n        return _.defaults({\n            commits: null,\n        }, parentModel.prototype.defaults.call(this));\n    },\n\n    /**\n     * Parse attributes for the model.\n     *\n     * Args:\n     *     attrs (object):\n     *         The attributes provided when constructing the model\n     *         instance.\n     *\n     * Returns:\n     *     object:\n     *     The resulting attributes used for the model instance.\n     */\n    parse(attrs) {\n        const commits = attrs.commits\n            ? new RB.DiffCommitCollection(attrs.commits, {parse: true})\n            : null;\n\n        return _.extend(\n            parentModel.prototype.parse.call(this, attrs),\n            {\n                commits: commits,\n            });\n    },\n});\n\n\n})();\n"]}