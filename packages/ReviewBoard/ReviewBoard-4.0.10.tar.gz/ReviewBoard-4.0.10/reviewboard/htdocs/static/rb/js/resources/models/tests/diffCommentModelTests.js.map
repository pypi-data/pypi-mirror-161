{"version":3,"sources":["diffCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"diffCommentModelTests.js","sourcesContent":["suite('rb/resources/models/DiffComment', function() {\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.DiffComment({\n            fileDiffID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            })\n        });\n    });\n\n    it('getNumLines', function() {\n        model.set({\n            beginLineNum: 5,\n            endLineNum: 10,\n        });\n\n        expect(model.getNumLines()).toBe(6);\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                diff_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    first_line: 10,\n                    num_lines: 5,\n                    filediff: {\n                        id: 1,\n                        source_file: 'my-file',\n                    },\n                    interfilediff: {\n                        id: 2,\n                        source_file: 'my-file',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.beginLineNum).toBe(10);\n            expect(data.endLineNum).toBe(14);\n            expect(data.fileDiff).not.toBe(undefined);\n            expect(data.fileDiff.id).toBe(1);\n            expect(data.fileDiff.get('sourceFilename')).toBe('my-file');\n            expect(data.interFileDiff).not.toBe(undefined);\n            expect(data.interFileDiff.id).toBe(2);\n            expect(data.interFileDiff.get('sourceFilename')).toBe('my-file');\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        it('first_line field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 100\n            });\n\n            const data = model.toJSON();\n            expect(data.first_line).toBe(100);\n        });\n\n        it('num_lines field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 105\n            });\n\n            const data = model.toJSON();\n            expect(data.num_lines).toBe(6);\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('filediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(16);\n            });\n        });\n\n        describe('interfilediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set('interFileDiffID', 50);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(50);\n            });\n\n            it('When not loaded and unset', function() {\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('beginLineNum/endLineNum', function() {\n            describe('Valid values', function() {\n                it('beginLineNum == 0, endLineNum == 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 0,\n                        endLineNum: 0,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum == beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 10,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum > 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 11,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('beginLineNum < 0', function() {\n                    expect(model.validate({\n                        beginLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.BEGINLINENUM_GTE_0);\n                });\n\n                it('endLineNum < 0', function() {\n                    expect(model.validate({\n                        endLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.ENDLINENUM_GTE_0);\n                });\n\n                it('endLineNum < beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 20,\n                        endLineNum: 10,\n                    })).toBe(\n                        RB.DiffComment.strings.BEGINLINENUM_LTE_ENDLINENUM);\n                });\n            });\n        });\n\n        describe('fileDiffID', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    fileDiffID: 42,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    fileDiffID: null,\n                })).toBe(RB.DiffComment.strings.INVALID_FILEDIFF_ID);\n            });\n        });\n    });\n});\n"]}