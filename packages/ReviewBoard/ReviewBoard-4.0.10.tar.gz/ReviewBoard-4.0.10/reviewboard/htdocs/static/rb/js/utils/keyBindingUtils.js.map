{"version":3,"sources":["keyBindingUtils.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,gBAAH,GAAsB;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,mBAAmB,GAAG;IAClB,KAAK,GAAL,CAAS,EAAT,gCAAoC,KAAK,GAAzC,GAAgD,CAAC,CAAC,IAAF,CAAO,UAAS,GAAT,EAAc;MACjE,IAAI,GAAG,CAAC,MAAJ,IAAc,GAAG,CAAC,OAAlB,IAA6B,GAAG,CAAC,OAAjC,IACA,GAAG,CAAC,MAAJ,CAAW,OAAX,KAAuB,OADvB,IAEA,GAAG,CAAC,MAAJ,CAAW,OAAX,KAAuB,UAFvB,IAGA,GAAG,CAAC,MAAJ,CAAW,iBAHf,EAGkC;QAC9B;QACA;MACH;;MAED,MAAM,OAAO,GAAG,MAAM,CAAC,YAAP,CAAoB,GAAG,CAAC,KAAxB,CAAhB;;MAEA,KAAK,IAAI,IAAT,IAAiB,MAAM,CAAC,IAAP,CAAY,KAAK,WAAjB,CAAjB,EAAgD;QAC5C,IAAI,IAAI,CAAC,OAAL,CAAa,OAAb,MAA0B,CAAC,CAA/B,EAAkC;UAC9B,GAAG,CAAC,eAAJ;UACA,GAAG,CAAC,cAAJ;UAEA,IAAI,IAAI,GAAG,KAAK,WAAL,CAAiB,IAAjB,CAAX;;UAEA,IAAI,CAAC,CAAC,CAAC,UAAF,CAAa,IAAb,CAAL,EAAyB;YACrB,IAAI,GAAG,KAAK,IAAL,CAAP;UACH;;UAED,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,GAAhB;QACH;MACJ;IACJ,CAzB+C,EAyB7C,IAzB6C,CAAhD;EA0BH,CArCiB;;EAuClB;AACJ;AACA;AACA;AACA;EACI,qBAAqB,GAAG;IACpB,IAAI,KAAK,GAAT,EAAc;MACV,KAAK,GAAL,CAAS,GAAT,gCAAqC,KAAK,GAA1C;IACH;EACJ,CAhDiB;;EAkDlB;AACJ;AACA;AACA;AACA;AACA;EACI,cAAc,CAAC,MAAD,EAAS;IACnB,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,cAAxB,CAAuC,IAAvC,CAA4C,IAA5C,EAAkD,MAAlD,CAAf;IAEA,KAAK,mBAAL;IAEA,OAAO,MAAP;EACH,CA9DiB;;EAgElB;AACJ;AACA;AACA;AACA;AACA;EACI,gBAAgB,GAAG;IACf,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,gBAAxB,CAAyC,IAAzC,CAA8C,IAA9C,CAAf;IAEA,KAAK,qBAAL;IAEA,OAAO,MAAP;EACH;;AA5EiB,CAAtB","file":"keyBindingUtils.js","sourcesContent":["/**\n * A mixin for views that provides key binding functionality.\n *\n * Views using this mixin can provide a keyBindings map that maps a set of\n * key characters to a function.\n */\nRB.KeyBindingsMixin = {\n    /**\n     * Enable key bindings for the view.\n     *\n     * Begins listening for any key bindings registered in the view's\n     * keyBindings map, and calls the appropriate function.\n     *\n     * By default, this is called automatically when setting up the view,\n     * by way of delegateEvents.\n     */\n    delegateKeyBindings() {\n        this.$el.on(`keypress.keybindings.${this.cid}`, _.bind(function(evt) {\n            if (evt.altKey || evt.ctrlKey || evt.metaKey ||\n                evt.target.tagName === 'INPUT' ||\n                evt.target.tagName === 'TEXTAREA' ||\n                evt.target.isContentEditable) {\n                /* These are all unsupported, and things we want to ignore. */\n                return;\n            }\n\n            const keyChar = String.fromCharCode(evt.which);\n\n            for (let keys of Object.keys(this.keyBindings)) {\n                if (keys.indexOf(keyChar) !== -1) {\n                    evt.stopPropagation();\n                    evt.preventDefault();\n\n                    let func = this.keyBindings[keys];\n\n                    if (!_.isFunction(func)) {\n                        func = this[func];\n                    }\n\n                    func.call(this, evt);\n                }\n            }\n        }, this));\n    },\n\n    /**\n     * Disable key bindings for the view.\n     *\n     * By default, this is called automatically when calling undelegateEvents.\n     */\n    undelegateKeyBindings() {\n        if (this.$el) {\n            this.$el.off(`keypress.keybindings.${this.cid}`);\n        }\n    },\n\n    /**\n     * Delegate both DOM events and key binding events.\n     *\n     * This overrides the default Backbone.View.delegateEvents to automatically\n     * call delegateKeyBindings.\n     */\n    delegateEvents(events) {\n        const result = Backbone.View.prototype.delegateEvents.call(this, events);\n\n        this.delegateKeyBindings();\n\n        return result;\n    },\n\n    /**\n     * Undelegate both DOM events and key binding events.\n     *\n     * This overrides the default Backbone.View.undelegateEvents to\n     * automatically call undelegateKeyBindings.\n     */\n    undelegateEvents() {\n        const result = Backbone.View.prototype.undelegateEvents.call(this);\n\n        this.undelegateKeyBindings();\n\n        return result;\n    }\n};\n"]}