{"version":3,"sources":["postCommitViewTests.es6.js"],"names":[],"mappings":"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","file":"postCommitViewTests.js","sourcesContent":["suite('rb/newReviewRequest/views/PostCommitView', function() {\n    let repository;\n    let commits;\n    let model;\n    let view;\n\n    beforeEach(function() {\n        repository = new RB.Repository({\n            name: 'Repo',\n            supportsPostCommit: true,\n        });\n\n        spyOn(repository.branches, 'sync').and.callFake(\n            (method, collection, options) => {\n                options.success({\n                    stat: 'ok',\n                    branches: [\n                        {\n                            name: 'master',\n                            commit: '859d4e148ce3ce60bbda6622cdbe5c2c2f8d9817',\n                            'default': true,\n                        },\n                        {\n                            name: 'release-1.7.x',\n                            commit: '92463764015ef463b4b6d1a1825fee7aeec8cb15',\n                            'default': false,\n                        },\n                        {\n                            name: 'release-1.6.x',\n                            commit: 'a15d0e635064a2e1929ce1bf3bc8d4aa65738b64',\n                            'default': false,\n                        },\n                    ],\n                });\n            }\n        );\n\n        spyOn(repository, 'getCommits').and.callFake(options => {\n            commits = new RB.RepositoryCommits([], {\n                urlBase: _.result(this, 'url') + 'commits/',\n                start: options.start,\n                branch: options.branch,\n            });\n\n            spyOn(commits, 'sync').and.callFake(\n                (method, collection, options) => {\n                    options.success({\n                        stat: 'ok',\n                        commits: [\n                            {\n                                authorName: 'Author 1',\n                                date: '2013-07-22T03:51:50Z',\n                                id: '3',\n                                message: 'Summary 1\\n\\nMessage 1',\n                                parent: '2',\n                            },\n                            {\n                                authorName: 'Author 2',\n                                date: '2013-07-22T03:50:46Z',\n                                id: '2',\n                                message: 'Summary 2\\n\\nMessage 2',\n                                parent: '1',\n                            },\n                            {\n                                authorName: 'Author 3',\n                                date: '2013-07-21T08:05:45Z',\n                                id: '1',\n                                message: 'Summary 3\\n\\nMessage 3',\n                                parent: '',\n                            },\n                        ],\n                    });\n                }\n            );\n\n            return commits;\n        });\n\n        model = new RB.PostCommitModel({ repository: repository });\n        view = new RB.PostCommitView({\n            model: model,\n            $scrollContainer: $('<div>'),\n        });\n\n        spyOn(RB.PostCommitView.prototype, '_onCreateReviewRequest')\n            .and.callThrough();\n\n        expect(repository.branches.sync).toHaveBeenCalled();\n    });\n\n    it('Render', function() {\n        view.render();\n\n        expect(commits.sync).toHaveBeenCalled();\n\n        expect(view._branchesView.$el.children().length).toBe(3);\n        expect(view._commitsView.$el.children().length).toBe(3);\n    });\n\n    it('Create', function() {\n        view.render();\n\n        spyOn(RB.ReviewRequest.prototype, 'save').and.returnValue();\n\n        const commit = commits.models[1];\n        commit.trigger('create', commit);\n\n        expect(RB.PostCommitView.prototype._onCreateReviewRequest).toHaveBeenCalled();\n        expect(RB.ReviewRequest.prototype.save).toHaveBeenCalled();\n\n        expect(RB.ReviewRequest.prototype.save.calls.count()).toBe(1);\n\n        const call = RB.ReviewRequest.prototype.save.calls.mostRecent();\n        expect(call.object.get('commitID')).toBe(commit.get('id'));\n    });\n\n    describe('Error handling', function() {\n        describe('Branches', function() {\n            const xhr = { errorText: 'Oh no' };\n            let returnError;\n\n            beforeEach(function() {\n                spyOn(repository.branches, 'fetch').and.callFake(\n                    (options, context) => {\n                        if (returnError) {\n                            options.error.call(context, repository.branches,\n                                               xhr);\n                        } else {\n                            options.success.call(context);\n                        }\n                    });\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                view._loadBranches();\n            });\n\n            it('UI state', function() {\n                expect(repository.branches.fetch).toHaveBeenCalled();\n                expect(view._showLoadError).toHaveBeenCalledWith(\n                    'branches', xhr);\n                expect(view._branchesView.$el.css('display')).toBe('none');\n                expect(view._$error).toBeTruthy();\n                expect(view._$error.length).toBe(1);\n                expect(view._commitsView).toBeFalsy();\n                expect(view._$error.find('.error-text').text().strip())\n                    .toBe('Oh no');\n                expect(view._$error.find('a')[0].id).toBe('reload_branches');\n            });\n\n            it('Reloading', function() {\n                spyOn(view, '_loadBranches').and.callThrough();\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._$error).toBeTruthy();\n                const $reload = view._$error.find('#reload_branches');\n                expect($reload.length).toBe(1);\n                $reload.click();\n\n                expect(view._loadBranches).toHaveBeenCalled();\n\n                expect(view._$error).toBe(null);\n                expect(view._branchesView.$el.css('display')).not.toBe('none');\n            });\n        });\n\n        describe('Commits', function() {\n            const xhr = { errorText: 'Oh no' };\n            let returnError;\n\n            beforeEach(function() {\n                view.render();\n\n                spyOn(RB.RepositoryCommits.prototype, 'fetch').and.callFake(\n                    (options, context) => {\n                        if (returnError) {\n                            options.error.call(context, repository.commits,\n                                               xhr);\n                        } else {\n                            options.success.call(context);\n                        }\n                    });\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                view._loadCommits();\n            });\n\n            it('UI state', function() {\n                expect(view._commitsCollection.fetch).toHaveBeenCalled();\n                expect(view._showLoadError).toHaveBeenCalledWith(\n                    'commits', xhr);\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._$error).toBeTruthy();\n                expect(view._$error.length).toBe(1);\n                expect(view._commitsView).toBeTruthy();\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._$error.find('.error-text').text().strip())\n                    .toBe('Oh no');\n                expect(view._$error.find('a')[0].id).toBe('reload_commits');\n            });\n\n            it('Reloading', function() {\n                spyOn(view, '_loadCommits').and.callThrough();\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._$error).toBeTruthy();\n                const $reload = view._$error.find('#reload_commits');\n                expect($reload.length).toBe(1);\n                $reload.click();\n\n                expect(view._loadCommits).toHaveBeenCalled();\n\n                expect(view._$error).toBe(null);\n\n                /*\n                 * Chrome returns an empty string, while Firefox returns\n                 * \"block\".\n                 */\n                const display = view._commitsView.$el.css('display');\n                expect(display === 'block' || display === '').toBe(true);\n            });\n        });\n    });\n});\n"]}