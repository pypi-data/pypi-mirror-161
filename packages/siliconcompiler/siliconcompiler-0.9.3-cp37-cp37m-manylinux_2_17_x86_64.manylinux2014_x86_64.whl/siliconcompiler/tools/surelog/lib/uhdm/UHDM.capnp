@0xfff7299129556877;

struct ObjIndexType {
  index @0 : UInt64;
  type  @1 : UInt32;
}

struct UhdmRoot {
  designs @0 : List(Design);
  symbols @1 : List(Text);
  factoryAttribute @2 :List(Attribute);
  factoryVirtualinterfacevar @3 :List(Virtualinterfacevar);
  factoryLetdecl @4 :List(Letdecl);
  factoryAlways @5 :List(Always);
  factoryFinalstmt @6 :List(Finalstmt);
  factoryInitial @7 :List(Initial);
  factoryDelaycontrol @8 :List(Delaycontrol);
  factoryDelayterm @9 :List(Delayterm);
  factoryEventcontrol @10 :List(Eventcontrol);
  factoryRepeatcontrol @11 :List(Repeatcontrol);
  factoryBegin @12 :List(Begin);
  factoryNamedbegin @13 :List(Namedbegin);
  factoryNamedfork @14 :List(Namedfork);
  factoryForkstmt @15 :List(Forkstmt);
  factoryForstmt @16 :List(Forstmt);
  factoryIfstmt @17 :List(Ifstmt);
  factoryEventstmt @18 :List(Eventstmt);
  factoryThreadobj @19 :List(Threadobj);
  factoryForeverstmt @20 :List(Foreverstmt);
  factoryWaitstmt @21 :List(Waitstmt);
  factoryWaitfork @22 :List(Waitfork);
  factoryOrderedwait @23 :List(Orderedwait);
  factoryDisable @24 :List(Disable);
  factoryDisablefork @25 :List(Disablefork);
  factoryContinuestmt @26 :List(Continuestmt);
  factoryBreakstmt @27 :List(Breakstmt);
  factoryReturnstmt @28 :List(Returnstmt);
  factoryWhilestmt @29 :List(Whilestmt);
  factoryRepeat @30 :List(Repeat);
  factoryDowhile @31 :List(Dowhile);
  factoryIfelse @32 :List(Ifelse);
  factoryCasestmt @33 :List(Casestmt);
  factoryForce @34 :List(Force);
  factoryAssignstmt @35 :List(Assignstmt);
  factoryDeassign @36 :List(Deassign);
  factoryRelease @37 :List(Release);
  factoryNullstmt @38 :List(Nullstmt);
  factoryExpectstmt @39 :List(Expectstmt);
  factoryForeachstmt @40 :List(Foreachstmt);
  factoryGenscope @41 :List(Genscope);
  factoryGenvar @42 :List(Genvar);
  factoryGenscopearray @43 :List(Genscopearray);
  factoryAssertstmt @44 :List(Assertstmt);
  factoryCover @45 :List(Cover);
  factoryAssume @46 :List(Assume);
  factoryRestrict @47 :List(Restrict);
  factoryImmediateassert @48 :List(Immediateassert);
  factoryImmediateassume @49 :List(Immediateassume);
  factoryImmediatecover @50 :List(Immediatecover);
  factoryCaseitem @51 :List(Caseitem);
  factoryAssignment @52 :List(Assignment);
  factoryAnypattern @53 :List(Anypattern);
  factoryTaggedpattern @54 :List(Taggedpattern);
  factoryStructpattern @55 :List(Structpattern);
  factoryUnsupportedexpr @56 :List(Unsupportedexpr);
  factoryUnsupportedstmt @57 :List(Unsupportedstmt);
  factorySequenceinst @58 :List(Sequenceinst);
  factorySeqformaldecl @59 :List(Seqformaldecl);
  factorySequencedecl @60 :List(Sequencedecl);
  factoryPropformaldecl @61 :List(Propformaldecl);
  factoryPropertyinst @62 :List(Propertyinst);
  factoryPropertyspec @63 :List(Propertyspec);
  factoryPropertydecl @64 :List(Propertydecl);
  factoryClockedproperty @65 :List(Clockedproperty);
  factoryCasepropertyitem @66 :List(Casepropertyitem);
  factoryCaseproperty @67 :List(Caseproperty);
  factoryMulticlocksequenceexpr @68 :List(Multiclocksequenceexpr);
  factoryClockedseq @69 :List(Clockedseq);
  factoryConstant @70 :List(Constant);
  factoryLetexpr @71 :List(Letexpr);
  factoryOperation @72 :List(Operation);
  factoryPartselect @73 :List(Partselect);
  factoryIndexedpartselect @74 :List(Indexedpartselect);
  factoryRefobj @75 :List(Refobj);
  factoryHierpath @76 :List(Hierpath);
  factoryVarselect @77 :List(Varselect);
  factoryBitselect @78 :List(Bitselect);
  factoryRefvar @79 :List(Refvar);
  factoryShortrealvar @80 :List(Shortrealvar);
  factoryRealvar @81 :List(Realvar);
  factoryBytevar @82 :List(Bytevar);
  factoryShortintvar @83 :List(Shortintvar);
  factoryIntvar @84 :List(Intvar);
  factoryLongintvar @85 :List(Longintvar);
  factoryIntegervar @86 :List(Integervar);
  factoryTimevar @87 :List(Timevar);
  factoryArrayvar @88 :List(Arrayvar);
  factoryRegarray @89 :List(Regarray);
  factoryReg @90 :List(Reg);
  factoryPackedarrayvar @91 :List(Packedarrayvar);
  factoryBitvar @92 :List(Bitvar);
  factoryLogicvar @93 :List(Logicvar);
  factoryStructvar @94 :List(Structvar);
  factoryUnionvar @95 :List(Unionvar);
  factoryEnumvar @96 :List(Enumvar);
  factoryStringvar @97 :List(Stringvar);
  factoryChandlevar @98 :List(Chandlevar);
  factoryVarbit @99 :List(Varbit);
  factoryTask @100 :List(Task);
  factoryFunction @101 :List(Function);
  factoryModport @102 :List(Modport);
  factoryInterfacetfdecl @103 :List(Interfacetfdecl);
  factoryContassign @104 :List(Contassign);
  factoryContassignbit @105 :List(Contassignbit);
  factoryPort @106 :List(Port);
  factoryPortbit @107 :List(Portbit);
  factoryGate @108 :List(Gate);
  factorySwitchtran @109 :List(Switchtran);
  factoryUdp @110 :List(Udp);
  factoryModpath @111 :List(Modpath);
  factoryTchk @112 :List(Tchk);
  factoryRange @113 :List(Range);
  factoryUdpdefn @114 :List(Udpdefn);
  factoryTableentry @115 :List(Tableentry);
  factoryIodecl @116 :List(Iodecl);
  factoryAliasstmt @117 :List(Aliasstmt);
  factoryClockingblock @118 :List(Clockingblock);
  factoryClockingiodecl @119 :List(Clockingiodecl);
  factoryParamassign @120 :List(Paramassign);
  factoryInterfacearray @121 :List(Interfacearray);
  factoryProgramarray @122 :List(Programarray);
  factoryModulearray @123 :List(Modulearray);
  factoryGatearray @124 :List(Gatearray);
  factorySwitcharray @125 :List(Switcharray);
  factoryUdparray @126 :List(Udparray);
  factoryPrimterm @127 :List(Primterm);
  factoryPathterm @128 :List(Pathterm);
  factoryTchkterm @129 :List(Tchkterm);
  factoryNetbit @130 :List(Netbit);
  factoryStructnet @131 :List(Structnet);
  factoryEnumnet @132 :List(Enumnet);
  factoryIntegernet @133 :List(Integernet);
  factoryTimenet @134 :List(Timenet);
  factoryLogicnet @135 :List(Logicnet);
  factoryArraynet @136 :List(Arraynet);
  factoryPackedarraynet @137 :List(Packedarraynet);
  factoryEventtypespec @138 :List(Eventtypespec);
  factoryNamedevent @139 :List(Namedevent);
  factoryNamedeventarray @140 :List(Namedeventarray);
  factoryParameter @141 :List(Parameter);
  factoryDefparam @142 :List(Defparam);
  factorySpecparam @143 :List(Specparam);
  factoryClasstypespec @144 :List(Classtypespec);
  factoryExtends @145 :List(Extends);
  factoryClassdefn @146 :List(Classdefn);
  factoryClassobj @147 :List(Classobj);
  factoryClassvar @148 :List(Classvar);
  factoryInterface @149 :List(Interface);
  factoryProgram @150 :List(Program);
  factoryPackage @151 :List(Package);
  factoryModule @152 :List(Module);
  factoryShortrealtypespec @153 :List(Shortrealtypespec);
  factoryRealtypespec @154 :List(Realtypespec);
  factoryBytetypespec @155 :List(Bytetypespec);
  factoryShortinttypespec @156 :List(Shortinttypespec);
  factoryInttypespec @157 :List(Inttypespec);
  factoryLonginttypespec @158 :List(Longinttypespec);
  factoryIntegertypespec @159 :List(Integertypespec);
  factoryTimetypespec @160 :List(Timetypespec);
  factoryEnumtypespec @161 :List(Enumtypespec);
  factoryStringtypespec @162 :List(Stringtypespec);
  factoryChandletypespec @163 :List(Chandletypespec);
  factoryStructtypespec @164 :List(Structtypespec);
  factoryUniontypespec @165 :List(Uniontypespec);
  factoryLogictypespec @166 :List(Logictypespec);
  factoryPackedarraytypespec @167 :List(Packedarraytypespec);
  factoryArraytypespec @168 :List(Arraytypespec);
  factoryVoidtypespec @169 :List(Voidtypespec);
  factoryUnsupportedtypespec @170 :List(Unsupportedtypespec);
  factorySequencetypespec @171 :List(Sequencetypespec);
  factoryPropertytypespec @172 :List(Propertytypespec);
  factoryInterfacetypespec @173 :List(Interfacetypespec);
  factoryTypeparameter @174 :List(Typeparameter);
  factoryTypespecmember @175 :List(Typespecmember);
  factoryEnumconst @176 :List(Enumconst);
  factoryBittypespec @177 :List(Bittypespec);
  factoryUsersystf @178 :List(Usersystf);
  factorySysfunccall @179 :List(Sysfunccall);
  factorySystaskcall @180 :List(Systaskcall);
  factoryMethodfunccall @181 :List(Methodfunccall);
  factoryMethodtaskcall @182 :List(Methodtaskcall);
  factoryFunccall @183 :List(Funccall);
  factoryTaskcall @184 :List(Taskcall);
  factoryConstraintordering @185 :List(Constraintordering);
  factoryConstraint @186 :List(Constraint);
  factoryImport @187 :List(Import);
  factoryDistitem @188 :List(Distitem);
  factoryDistribution @189 :List(Distribution);
  factoryImplication @190 :List(Implication);
  factoryConstrif @191 :List(Constrif);
  factoryConstrifelse @192 :List(Constrifelse);
  factoryConstrforeach @193 :List(Constrforeach);
  factorySoftdisable @194 :List(Softdisable);
  factoryDesign @195 :List(Design);

}


struct Attribute {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiDefAttribute @9 :Bool;
  vpiValue @10 :UInt64;
  vpiDefFile @11 :UInt64;
  vpiDefLineNo @12 :Int64;
}
struct Virtualinterfacevar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Letdecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Always {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiAlwaysType @8 :Int64;
  stmt @9 :ObjIndexType;
  module @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Finalstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  stmt @8 :ObjIndexType;
  module @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Initial {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  stmt @8 :ObjIndexType;
  module @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Delaycontrol {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDelay @8 :UInt64;
  stmt @9 :ObjIndexType;
  delay @10 :ObjIndexType;
  vpiName @11 :UInt64;
  attributes @12 :List(UInt64);
}
struct Delayterm {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Eventcontrol {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  stmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Repeatcontrol {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  attributes @9 :List(UInt64);
}
struct Begin {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  stmts @8 :List(ObjIndexType);
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  propertydecls @11 :List(UInt64);
  sequencedecls @12 :List(UInt64);
  concurrentassertions @13 :List(ObjIndexType);
  namedevents @14 :List(UInt64);
  namedeventarrays @15 :List(UInt64);
  variables @16 :List(ObjIndexType);
  virtualinterfacevars @17 :List(UInt64);
  logicvars @18 :List(UInt64);
  arrayvars @19 :List(UInt64);
  arrayvarmems @20 :List(UInt64);
  parameters @21 :List(ObjIndexType);
  paramassigns @22 :List(UInt64);
  scopes @23 :List(ObjIndexType);
  typespecs @24 :List(ObjIndexType);
  instanceitems @25 :List(ObjIndexType);
  letdecls @26 :List(UInt64);
  attributes @27 :List(UInt64);
}
struct Namedbegin {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  stmts @8 :List(ObjIndexType);
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  propertydecls @11 :List(UInt64);
  sequencedecls @12 :List(UInt64);
  concurrentassertions @13 :List(ObjIndexType);
  namedevents @14 :List(UInt64);
  namedeventarrays @15 :List(UInt64);
  variables @16 :List(ObjIndexType);
  virtualinterfacevars @17 :List(UInt64);
  logicvars @18 :List(UInt64);
  arrayvars @19 :List(UInt64);
  arrayvarmems @20 :List(UInt64);
  parameters @21 :List(ObjIndexType);
  paramassigns @22 :List(UInt64);
  scopes @23 :List(ObjIndexType);
  typespecs @24 :List(ObjIndexType);
  instanceitems @25 :List(ObjIndexType);
  letdecls @26 :List(UInt64);
  attributes @27 :List(UInt64);
}
struct Namedfork {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiJoinType @8 :Int64;
  stmts @9 :List(ObjIndexType);
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  propertydecls @12 :List(UInt64);
  sequencedecls @13 :List(UInt64);
  concurrentassertions @14 :List(ObjIndexType);
  namedevents @15 :List(UInt64);
  namedeventarrays @16 :List(UInt64);
  variables @17 :List(ObjIndexType);
  virtualinterfacevars @18 :List(UInt64);
  logicvars @19 :List(UInt64);
  arrayvars @20 :List(UInt64);
  arrayvarmems @21 :List(UInt64);
  parameters @22 :List(ObjIndexType);
  paramassigns @23 :List(UInt64);
  scopes @24 :List(ObjIndexType);
  typespecs @25 :List(ObjIndexType);
  instanceitems @26 :List(ObjIndexType);
  letdecls @27 :List(UInt64);
  attributes @28 :List(UInt64);
}
struct Forkstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiJoinType @8 :Int64;
  stmts @9 :List(ObjIndexType);
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  propertydecls @12 :List(UInt64);
  sequencedecls @13 :List(UInt64);
  concurrentassertions @14 :List(ObjIndexType);
  namedevents @15 :List(UInt64);
  namedeventarrays @16 :List(UInt64);
  variables @17 :List(ObjIndexType);
  virtualinterfacevars @18 :List(UInt64);
  logicvars @19 :List(UInt64);
  arrayvars @20 :List(UInt64);
  arrayvarmems @21 :List(UInt64);
  parameters @22 :List(ObjIndexType);
  paramassigns @23 :List(UInt64);
  scopes @24 :List(ObjIndexType);
  typespecs @25 :List(ObjIndexType);
  instanceitems @26 :List(ObjIndexType);
  letdecls @27 :List(UInt64);
  attributes @28 :List(UInt64);
}
struct Forstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiLocalVarDecls @8 :Int64;
  vpiForInitStmts @9 :List(ObjIndexType);
  vpiForIncStmts @10 :List(ObjIndexType);
  vpiForInitStmt @11 :ObjIndexType;
  vpiCondition @12 :ObjIndexType;
  vpiForIncStmt @13 :ObjIndexType;
  vpiStmt @14 :ObjIndexType;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  propertydecls @17 :List(UInt64);
  sequencedecls @18 :List(UInt64);
  concurrentassertions @19 :List(ObjIndexType);
  namedevents @20 :List(UInt64);
  namedeventarrays @21 :List(UInt64);
  variables @22 :List(ObjIndexType);
  virtualinterfacevars @23 :List(UInt64);
  logicvars @24 :List(UInt64);
  arrayvars @25 :List(UInt64);
  arrayvarmems @26 :List(UInt64);
  parameters @27 :List(ObjIndexType);
  paramassigns @28 :List(UInt64);
  scopes @29 :List(ObjIndexType);
  typespecs @30 :List(ObjIndexType);
  instanceitems @31 :List(ObjIndexType);
  letdecls @32 :List(UInt64);
  attributes @33 :List(UInt64);
}
struct Ifstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiQualifier @8 :Int64;
  vpiCondition @9 :ObjIndexType;
  vpiStmt @10 :ObjIndexType;
  vpiName @11 :UInt64;
  attributes @12 :List(UInt64);
}
struct Eventstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiBlocking @8 :Bool;
  namedevent @9 :UInt64;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Threadobj {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Foreverstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiStmt @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Waitstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  vpiStmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Waitfork {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiStmt @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Orderedwait {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConditions @8 :List(ObjIndexType);
  vpiElseStmt @9 :ObjIndexType;
  vpiStmt @10 :ObjIndexType;
  vpiName @11 :UInt64;
  attributes @12 :List(UInt64);
}
struct Disable {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiExpr @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Disablefork {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  attributes @9 :List(UInt64);
}
struct Continuestmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  attributes @9 :List(UInt64);
}
struct Breakstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  attributes @9 :List(UInt64);
}
struct Returnstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Whilestmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  vpiStmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Repeat {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  vpiStmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Dowhile {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  vpiStmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Ifelse {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiQualifier @8 :Int64;
  vpiCondition @9 :ObjIndexType;
  vpiStmt @10 :ObjIndexType;
  vpiElseStmt @11 :ObjIndexType;
  vpiName @12 :UInt64;
  attributes @13 :List(UInt64);
}
struct Casestmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCaseType @8 :Int64;
  vpiQualifier @9 :Int64;
  vpiCondition @10 :ObjIndexType;
  caseitems @11 :List(UInt64);
  vpiName @12 :UInt64;
  attributes @13 :List(UInt64);
}
struct Force {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  rhs @8 :ObjIndexType;
  lhs @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Assignstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  rhs @8 :ObjIndexType;
  lhs @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Deassign {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  lhs @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Release {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  lhs @8 :ObjIndexType;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Nullstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  attributes @9 :List(UInt64);
}
struct Expectstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  stmt @8 :ObjIndexType;
  elsestmt @9 :ObjIndexType;
  vpiName @10 :UInt64;
  attributes @11 :List(UInt64);
}
struct Foreachstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  variable @8 :ObjIndexType;
  vpiLoopVars @9 :List(ObjIndexType);
  vpiStmt @10 :ObjIndexType;
  vpiName @11 :UInt64;
  vpiFullName @12 :UInt64;
  propertydecls @13 :List(UInt64);
  sequencedecls @14 :List(UInt64);
  concurrentassertions @15 :List(ObjIndexType);
  namedevents @16 :List(UInt64);
  namedeventarrays @17 :List(UInt64);
  variables @18 :List(ObjIndexType);
  virtualinterfacevars @19 :List(UInt64);
  logicvars @20 :List(UInt64);
  arrayvars @21 :List(UInt64);
  arrayvarmems @22 :List(UInt64);
  parameters @23 :List(ObjIndexType);
  paramassigns @24 :List(UInt64);
  scopes @25 :List(ObjIndexType);
  typespecs @26 :List(ObjIndexType);
  instanceitems @27 :List(ObjIndexType);
  letdecls @28 :List(UInt64);
  attributes @29 :List(UInt64);
}
struct Genscope {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIndex @8 :ObjIndexType;
  vpiArrayMember @9 :Bool;
  vpiProtected @10 :Bool;
  vpiImplicitDecl @11 :Bool;
  nets @12 :List(ObjIndexType);
  arraynets @13 :List(UInt64);
  process @14 :List(ObjIndexType);
  contassigns @15 :List(UInt64);
  modules @16 :List(UInt64);
  modulearrays @17 :List(UInt64);
  primitives @18 :List(ObjIndexType);
  primitivearrays @19 :List(ObjIndexType);
  defparams @20 :List(UInt64);
  genscopearrays @21 :List(UInt64);
  programs @22 :List(UInt64);
  programarrays @23 :List(UInt64);
  assertions @24 :List(ObjIndexType);
  interfaces @25 :List(UInt64);
  interfacearrays @26 :List(UInt64);
  aliasstmts @27 :List(UInt64);
  clockingblocks @28 :List(UInt64);
  vpiName @29 :UInt64;
  vpiFullName @30 :UInt64;
  propertydecls @31 :List(UInt64);
  sequencedecls @32 :List(UInt64);
  concurrentassertions @33 :List(ObjIndexType);
  namedevents @34 :List(UInt64);
  namedeventarrays @35 :List(UInt64);
  variables @36 :List(ObjIndexType);
  virtualinterfacevars @37 :List(UInt64);
  logicvars @38 :List(UInt64);
  arrayvars @39 :List(UInt64);
  arrayvarmems @40 :List(UInt64);
  parameters @41 :List(ObjIndexType);
  paramassigns @42 :List(UInt64);
  scopes @43 :List(ObjIndexType);
  typespecs @44 :List(ObjIndexType);
  instanceitems @45 :List(ObjIndexType);
  letdecls @46 :List(UInt64);
  attributes @47 :List(UInt64);
}
struct Genvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  genscopearrays @10 :List(UInt64);
}
struct Genscopearray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiSize @8 :Int64;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  genvar @11 :UInt64;
  genscopes @12 :List(UInt64);
  vpiInstance @13 :ObjIndexType;
}
struct Assertstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  elsestmt @8 :ObjIndexType;
  vpiStartLine @9 :Int64;
  vpiColumn @10 :Int64;
  vpiEndLine @11 :Int64;
  vpiEndColumn @12 :Int64;
  clockingblock @13 :UInt64;
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  vpiIsClockInferred @16 :Bool;
  clockingevent @17 :ObjIndexType;
  stmt @18 :ObjIndexType;
  vpiProperty @19 :ObjIndexType;
  attributes @20 :List(UInt64);
}
struct Cover {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIsCoverSequence @8 :Bool;
  vpiStartLine @9 :Int64;
  vpiColumn @10 :Int64;
  vpiEndLine @11 :Int64;
  vpiEndColumn @12 :Int64;
  clockingblock @13 :UInt64;
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  vpiIsClockInferred @16 :Bool;
  clockingevent @17 :ObjIndexType;
  stmt @18 :ObjIndexType;
  vpiProperty @19 :ObjIndexType;
  attributes @20 :List(UInt64);
}
struct Assume {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiStartLine @8 :Int64;
  vpiColumn @9 :Int64;
  vpiEndLine @10 :Int64;
  vpiEndColumn @11 :Int64;
  clockingblock @12 :UInt64;
  vpiName @13 :UInt64;
  vpiFullName @14 :UInt64;
  vpiIsClockInferred @15 :Bool;
  clockingevent @16 :ObjIndexType;
  stmt @17 :ObjIndexType;
  vpiProperty @18 :ObjIndexType;
  attributes @19 :List(UInt64);
}
struct Restrict {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiStartLine @8 :Int64;
  vpiColumn @9 :Int64;
  vpiEndLine @10 :Int64;
  vpiEndColumn @11 :Int64;
  clockingblock @12 :UInt64;
  vpiName @13 :UInt64;
  vpiFullName @14 :UInt64;
  vpiIsClockInferred @15 :Bool;
  clockingevent @16 :ObjIndexType;
  stmt @17 :ObjIndexType;
  vpiProperty @18 :ObjIndexType;
  attributes @19 :List(UInt64);
}
struct Immediateassert {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIsDeferred @8 :Int64;
  vpiIsFinal @9 :Int64;
  expr @10 :ObjIndexType;
  stmt @11 :ObjIndexType;
  elsestmt @12 :ObjIndexType;
  vpiStartLine @13 :Int64;
  vpiColumn @14 :Int64;
  vpiEndLine @15 :Int64;
  vpiEndColumn @16 :Int64;
  clockingblock @17 :UInt64;
  vpiName @18 :UInt64;
  attributes @19 :List(UInt64);
}
struct Immediateassume {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIsDeferred @8 :Int64;
  vpiIsFinal @9 :Int64;
  expr @10 :ObjIndexType;
  stmt @11 :ObjIndexType;
  elsestmt @12 :ObjIndexType;
  vpiStartLine @13 :Int64;
  vpiColumn @14 :Int64;
  vpiEndLine @15 :Int64;
  vpiEndColumn @16 :Int64;
  clockingblock @17 :UInt64;
  vpiName @18 :UInt64;
  attributes @19 :List(UInt64);
}
struct Immediatecover {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIsDeferred @8 :Int64;
  vpiIsFinal @9 :Int64;
  expr @10 :ObjIndexType;
  stmt @11 :ObjIndexType;
  vpiStartLine @12 :Int64;
  vpiColumn @13 :Int64;
  vpiEndLine @14 :Int64;
  vpiEndColumn @15 :Int64;
  clockingblock @16 :UInt64;
  vpiName @17 :UInt64;
  attributes @18 :List(UInt64);
}
struct Caseitem {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiExprs @8 :List(ObjIndexType);
  stmt @9 :ObjIndexType;
}
struct Assignment {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiOpType @8 :Int64;
  vpiBlocking @9 :Bool;
  rhs @10 :ObjIndexType;
  lhs @11 :ObjIndexType;
  delaycontrol @12 :UInt64;
  eventcontrol @13 :UInt64;
  repeatcontrol @14 :UInt64;
  vpiName @15 :UInt64;
  attributes @16 :List(UInt64);
}
struct Anypattern {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
}
struct Taggedpattern {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  pattern @9 :ObjIndexType;
  typespec @10 :ObjIndexType;
}
struct Structpattern {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  pattern @9 :ObjIndexType;
}
struct Unsupportedexpr {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDecompile @8 :UInt64;
  vpiSize @9 :Int64;
  vpiValue @10 :UInt64;
  typespec @11 :ObjIndexType;
}
struct Unsupportedstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiValue @8 :UInt64;
  vpiName @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Sequenceinst {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  sequencedecl @8 :UInt64;
  namedeventsequenceexprgroup @9 :ObjIndexType;
  vpiStartLine @10 :Int64;
  vpiColumn @11 :Int64;
  vpiEndLine @12 :Int64;
  vpiEndColumn @13 :Int64;
  vpiName @14 :UInt64;
  clockingblock @15 :UInt64;
}
struct Seqformaldecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiDirection @9 :Int64;
  attributes @10 :List(UInt64);
  namedeventsequenceexprgroup @11 :ObjIndexType;
  typespec @12 :ObjIndexType;
}
struct Sequencedecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  attributes @10 :List(UInt64);
  variables @11 :List(ObjIndexType);
  sequenceexprmulticlockgroup @12 :ObjIndexType;
  seqformaldecls @13 :List(UInt64);
}
struct Propformaldecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiDirection @9 :Int64;
  vpiExpr @10 :ObjIndexType;
  vpiTypespec @11 :ObjIndexType;
}
struct Propertyinst {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDisableCondition @8 :ObjIndexType;
  vpiArguments @9 :List(ObjIndexType);
  propertydecl @10 :UInt64;
  vpiStartLine @11 :Int64;
  vpiColumn @12 :Int64;
  vpiEndLine @13 :Int64;
  vpiEndColumn @14 :Int64;
  vpiName @15 :UInt64;
  clockingblock @16 :UInt64;
}
struct Propertyspec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDisableCondition @8 :ObjIndexType;
  vpiClockingEvent @9 :ObjIndexType;
  vpiPropertyExpr @10 :ObjIndexType;
}
struct Propertydecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  attributes @10 :List(UInt64);
  propformaldecls @11 :List(UInt64);
  variables @12 :List(ObjIndexType);
  propertyspec @13 :UInt64;
}
struct Clockedproperty {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiClockingEvent @8 :ObjIndexType;
  vpiPropertyExpr @9 :ObjIndexType;
}
struct Casepropertyitem {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  expressions @8 :List(ObjIndexType);
  propertyexpr @9 :ObjIndexType;
}
struct Caseproperty {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiCondition @8 :ObjIndexType;
  casepropertyitems @9 :List(UInt64);
}
struct Multiclocksequenceexpr {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  clockedseqs @8 :List(UInt64);
}
struct Clockedseq {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiClockingEvent @8 :ObjIndexType;
  vpiSequenceExpr @9 :ObjIndexType;
}
struct Constant {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstType @8 :Int64;
  vpiDecompile @9 :UInt64;
  vpiSize @10 :Int64;
  vpiValue @11 :UInt64;
  typespec @12 :ObjIndexType;
}
struct Letexpr {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDecompile @8 :UInt64;
  vpiSize @9 :Int64;
  vpiValue @10 :UInt64;
  typespec @11 :ObjIndexType;
}
struct Operation {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiOpType @8 :Int64;
  vpiReordered @9 :Bool;
  vpiFlattened @10 :Bool;
  vpiOpStrong @11 :Bool;
  operands @12 :List(ObjIndexType);
  attributes @13 :List(UInt64);
  vpiDecompile @14 :UInt64;
  vpiSize @15 :Int64;
  vpiValue @16 :UInt64;
  typespec @17 :ObjIndexType;
}
struct Partselect {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstantSelect @8 :Bool;
  leftrange @9 :ObjIndexType;
  rightrange @10 :ObjIndexType;
  vpiDecompile @11 :UInt64;
  vpiSize @12 :Int64;
  vpiValue @13 :UInt64;
  typespec @14 :ObjIndexType;
}
struct Indexedpartselect {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstantSelect @8 :Bool;
  vpiIndexedPartSelectType @9 :Int64;
  baseexpr @10 :ObjIndexType;
  widthexpr @11 :ObjIndexType;
  vpiDecompile @12 :UInt64;
  vpiSize @13 :Int64;
  vpiValue @14 :UInt64;
  typespec @15 :ObjIndexType;
}
struct Refobj {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  vpiDefName @10 :UInt64;
  vpiGeneric @11 :Bool;
  ports @12 :List(ObjIndexType);
  actualgroup @13 :ObjIndexType;
  instance @14 :ObjIndexType;
  taskfunc @15 :ObjIndexType;
  vpiStructMember @16 :Bool;
  vpiUses @17 :List(ObjIndexType);
  vpiDecompile @18 :UInt64;
  vpiSize @19 :Int64;
  vpiValue @20 :UInt64;
  typespec @21 :ObjIndexType;
}
struct Hierpath {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  pathelems @10 :List(ObjIndexType);
  vpiUses @11 :List(ObjIndexType);
  vpiDecompile @12 :UInt64;
  vpiSize @13 :Int64;
  vpiValue @14 :UInt64;
  typespec @15 :ObjIndexType;
}
struct Varselect {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstantSelect @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  expr @11 :ObjIndexType;
  exprs @12 :List(ObjIndexType);
  vpiUses @13 :List(ObjIndexType);
  vpiDecompile @14 :UInt64;
  vpiSize @15 :Int64;
  vpiValue @16 :UInt64;
  typespec @17 :ObjIndexType;
}
struct Bitselect {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstantSelect @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiIndex @11 :ObjIndexType;
  vpiUses @12 :List(ObjIndexType);
  vpiDecompile @13 :UInt64;
  vpiSize @14 :Int64;
  vpiValue @15 :UInt64;
  typespec @16 :ObjIndexType;
}
struct Refvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDefName @8 :UInt64;
  vpiGeneric @9 :Bool;
  actualgroup @10 :ObjIndexType;
  taskfunc @11 :ObjIndexType;
  vpiStructMember @12 :Bool;
  vpiArrayMember @13 :Bool;
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  vpiSigned @16 :Bool;
  vpiAutomatic @17 :Bool;
  vpiAllocScheme @18 :Int64;
  vpiConstantVariable @19 :Bool;
  vpiIsRandomized @20 :Bool;
  vpiRandType @21 :Int64;
  vpiStructUnionMember @22 :Bool;
  vpiScalar @23 :Bool;
  vpiVisibility @24 :Int64;
  vpiVector @25 :Bool;
  ports @26 :List(ObjIndexType);
  variabledrivers @27 :List(ObjIndexType);
  variableloads @28 :List(ObjIndexType);
  primterms @29 :List(UInt64);
  contassigns @30 :List(UInt64);
  pathterm @31 :UInt64;
  tchkterm @32 :UInt64;
  module @33 :UInt64;
  instance @34 :ObjIndexType;
  scope @35 :ObjIndexType;
  expr @36 :ObjIndexType;
  indexes @37 :List(ObjIndexType);
  attributes @38 :List(UInt64);
  vpiUses @39 :List(ObjIndexType);
  vpiDecompile @40 :UInt64;
  vpiSize @41 :Int64;
  vpiValue @42 :UInt64;
  typespec @43 :ObjIndexType;
}
struct Shortrealvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Realvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Bytevar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Shortintvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Intvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Longintvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Integervar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Timevar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Arrayvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  variables @8 :List(ObjIndexType);
  vpiArrayType @9 :Int64;
  varselects @10 :List(UInt64);
  ranges @11 :List(UInt64);
  leftexpr @12 :ObjIndexType;
  rightexpr @13 :ObjIndexType;
  vpiArrayMember @14 :Bool;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  vpiSigned @17 :Bool;
  vpiAutomatic @18 :Bool;
  vpiAllocScheme @19 :Int64;
  vpiConstantVariable @20 :Bool;
  vpiIsRandomized @21 :Bool;
  vpiRandType @22 :Int64;
  vpiStructUnionMember @23 :Bool;
  vpiScalar @24 :Bool;
  vpiVisibility @25 :Int64;
  vpiVector @26 :Bool;
  ports @27 :List(ObjIndexType);
  variabledrivers @28 :List(ObjIndexType);
  variableloads @29 :List(ObjIndexType);
  primterms @30 :List(UInt64);
  contassigns @31 :List(UInt64);
  pathterm @32 :UInt64;
  tchkterm @33 :UInt64;
  module @34 :UInt64;
  instance @35 :ObjIndexType;
  scope @36 :ObjIndexType;
  expr @37 :ObjIndexType;
  indexes @38 :List(ObjIndexType);
  attributes @39 :List(UInt64);
  vpiUses @40 :List(ObjIndexType);
  vpiDecompile @41 :UInt64;
  vpiSize @42 :Int64;
  vpiValue @43 :UInt64;
  typespec @44 :ObjIndexType;
}
struct Regarray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIsMemory @8 :Bool;
  leftexpr @9 :ObjIndexType;
  rightexpr @10 :ObjIndexType;
  regs @11 :List(UInt64);
}
struct Reg {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  leftexpr @8 :ObjIndexType;
  rightexpr @9 :ObjIndexType;
  index @10 :ObjIndexType;
}
struct Packedarrayvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPackedArrayMember @8 :Bool;
  vpiConstantSelect @9 :Bool;
  vpiPacked @10 :Bool;
  ranges @11 :List(UInt64);
  leftexpr @12 :ObjIndexType;
  rightexpr @13 :ObjIndexType;
  varbits @14 :List(UInt64);
  elements @15 :List(ObjIndexType);
  exprindex @16 :ObjIndexType;
  vpiArrayMember @17 :Bool;
  vpiName @18 :UInt64;
  vpiFullName @19 :UInt64;
  vpiSigned @20 :Bool;
  vpiAutomatic @21 :Bool;
  vpiAllocScheme @22 :Int64;
  vpiConstantVariable @23 :Bool;
  vpiIsRandomized @24 :Bool;
  vpiRandType @25 :Int64;
  vpiStructUnionMember @26 :Bool;
  vpiScalar @27 :Bool;
  vpiVisibility @28 :Int64;
  vpiVector @29 :Bool;
  ports @30 :List(ObjIndexType);
  variabledrivers @31 :List(ObjIndexType);
  variableloads @32 :List(ObjIndexType);
  primterms @33 :List(UInt64);
  contassigns @34 :List(UInt64);
  pathterm @35 :UInt64;
  tchkterm @36 :UInt64;
  module @37 :UInt64;
  instance @38 :ObjIndexType;
  scope @39 :ObjIndexType;
  expr @40 :ObjIndexType;
  indexes @41 :List(ObjIndexType);
  attributes @42 :List(UInt64);
  vpiUses @43 :List(ObjIndexType);
  vpiDecompile @44 :UInt64;
  vpiSize @45 :Int64;
  vpiValue @46 :UInt64;
  typespec @47 :ObjIndexType;
}
struct Bitvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  ranges @8 :List(UInt64);
  leftexpr @9 :ObjIndexType;
  rightexpr @10 :ObjIndexType;
  varbits @11 :List(UInt64);
  vpiArrayMember @12 :Bool;
  vpiName @13 :UInt64;
  vpiFullName @14 :UInt64;
  vpiSigned @15 :Bool;
  vpiAutomatic @16 :Bool;
  vpiAllocScheme @17 :Int64;
  vpiConstantVariable @18 :Bool;
  vpiIsRandomized @19 :Bool;
  vpiRandType @20 :Int64;
  vpiStructUnionMember @21 :Bool;
  vpiScalar @22 :Bool;
  vpiVisibility @23 :Int64;
  vpiVector @24 :Bool;
  ports @25 :List(ObjIndexType);
  variabledrivers @26 :List(ObjIndexType);
  variableloads @27 :List(ObjIndexType);
  primterms @28 :List(UInt64);
  contassigns @29 :List(UInt64);
  pathterm @30 :UInt64;
  tchkterm @31 :UInt64;
  module @32 :UInt64;
  instance @33 :ObjIndexType;
  scope @34 :ObjIndexType;
  expr @35 :ObjIndexType;
  indexes @36 :List(ObjIndexType);
  attributes @37 :List(UInt64);
  vpiUses @38 :List(ObjIndexType);
  vpiDecompile @39 :UInt64;
  vpiSize @40 :Int64;
  vpiValue @41 :UInt64;
  typespec @42 :ObjIndexType;
}
struct Logicvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  ranges @8 :List(UInt64);
  leftexpr @9 :ObjIndexType;
  rightexpr @10 :ObjIndexType;
  varbits @11 :List(UInt64);
  vpiArrayMember @12 :Bool;
  vpiName @13 :UInt64;
  vpiFullName @14 :UInt64;
  vpiSigned @15 :Bool;
  vpiAutomatic @16 :Bool;
  vpiAllocScheme @17 :Int64;
  vpiConstantVariable @18 :Bool;
  vpiIsRandomized @19 :Bool;
  vpiRandType @20 :Int64;
  vpiStructUnionMember @21 :Bool;
  vpiScalar @22 :Bool;
  vpiVisibility @23 :Int64;
  vpiVector @24 :Bool;
  ports @25 :List(ObjIndexType);
  variabledrivers @26 :List(ObjIndexType);
  variableloads @27 :List(ObjIndexType);
  primterms @28 :List(UInt64);
  contassigns @29 :List(UInt64);
  pathterm @30 :UInt64;
  tchkterm @31 :UInt64;
  module @32 :UInt64;
  instance @33 :ObjIndexType;
  scope @34 :ObjIndexType;
  expr @35 :ObjIndexType;
  indexes @36 :List(ObjIndexType);
  attributes @37 :List(UInt64);
  vpiUses @38 :List(ObjIndexType);
  vpiDecompile @39 :UInt64;
  vpiSize @40 :Int64;
  vpiValue @41 :UInt64;
  typespec @42 :ObjIndexType;
}
struct Structvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  variables @8 :List(ObjIndexType);
  vpiPackedArrayMember @9 :Bool;
  vpiConstantSelect @10 :Bool;
  varbits @11 :List(UInt64);
  exprindex @12 :ObjIndexType;
  vpiArrayMember @13 :Bool;
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  vpiSigned @16 :Bool;
  vpiAutomatic @17 :Bool;
  vpiAllocScheme @18 :Int64;
  vpiConstantVariable @19 :Bool;
  vpiIsRandomized @20 :Bool;
  vpiRandType @21 :Int64;
  vpiStructUnionMember @22 :Bool;
  vpiScalar @23 :Bool;
  vpiVisibility @24 :Int64;
  vpiVector @25 :Bool;
  ports @26 :List(ObjIndexType);
  variabledrivers @27 :List(ObjIndexType);
  variableloads @28 :List(ObjIndexType);
  primterms @29 :List(UInt64);
  contassigns @30 :List(UInt64);
  pathterm @31 :UInt64;
  tchkterm @32 :UInt64;
  module @33 :UInt64;
  instance @34 :ObjIndexType;
  scope @35 :ObjIndexType;
  expr @36 :ObjIndexType;
  indexes @37 :List(ObjIndexType);
  attributes @38 :List(UInt64);
  vpiUses @39 :List(ObjIndexType);
  vpiDecompile @40 :UInt64;
  vpiSize @41 :Int64;
  vpiValue @42 :UInt64;
  typespec @43 :ObjIndexType;
}
struct Unionvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  variables @8 :List(ObjIndexType);
  vpiPackedArrayMember @9 :Bool;
  vpiConstantSelect @10 :Bool;
  varbits @11 :List(UInt64);
  exprindex @12 :ObjIndexType;
  vpiArrayMember @13 :Bool;
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  vpiSigned @16 :Bool;
  vpiAutomatic @17 :Bool;
  vpiAllocScheme @18 :Int64;
  vpiConstantVariable @19 :Bool;
  vpiIsRandomized @20 :Bool;
  vpiRandType @21 :Int64;
  vpiStructUnionMember @22 :Bool;
  vpiScalar @23 :Bool;
  vpiVisibility @24 :Int64;
  vpiVector @25 :Bool;
  ports @26 :List(ObjIndexType);
  variabledrivers @27 :List(ObjIndexType);
  variableloads @28 :List(ObjIndexType);
  primterms @29 :List(UInt64);
  contassigns @30 :List(UInt64);
  pathterm @31 :UInt64;
  tchkterm @32 :UInt64;
  module @33 :UInt64;
  instance @34 :ObjIndexType;
  scope @35 :ObjIndexType;
  expr @36 :ObjIndexType;
  indexes @37 :List(ObjIndexType);
  attributes @38 :List(UInt64);
  vpiUses @39 :List(ObjIndexType);
  vpiDecompile @40 :UInt64;
  vpiSize @41 :Int64;
  vpiValue @42 :UInt64;
  typespec @43 :ObjIndexType;
}
struct Enumvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPackedArrayMember @8 :Bool;
  vpiConstantSelect @9 :Bool;
  exprindex @10 :ObjIndexType;
  vpiArrayMember @11 :Bool;
  vpiName @12 :UInt64;
  vpiFullName @13 :UInt64;
  vpiSigned @14 :Bool;
  vpiAutomatic @15 :Bool;
  vpiAllocScheme @16 :Int64;
  vpiConstantVariable @17 :Bool;
  vpiIsRandomized @18 :Bool;
  vpiRandType @19 :Int64;
  vpiStructUnionMember @20 :Bool;
  vpiScalar @21 :Bool;
  vpiVisibility @22 :Int64;
  vpiVector @23 :Bool;
  ports @24 :List(ObjIndexType);
  variabledrivers @25 :List(ObjIndexType);
  variableloads @26 :List(ObjIndexType);
  primterms @27 :List(UInt64);
  contassigns @28 :List(UInt64);
  pathterm @29 :UInt64;
  tchkterm @30 :UInt64;
  module @31 :UInt64;
  instance @32 :ObjIndexType;
  scope @33 :ObjIndexType;
  expr @34 :ObjIndexType;
  indexes @35 :List(ObjIndexType);
  attributes @36 :List(UInt64);
  vpiUses @37 :List(ObjIndexType);
  vpiDecompile @38 :UInt64;
  vpiSize @39 :Int64;
  vpiValue @40 :UInt64;
  typespec @41 :ObjIndexType;
}
struct Stringvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSigned @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiAllocScheme @13 :Int64;
  vpiConstantVariable @14 :Bool;
  vpiIsRandomized @15 :Bool;
  vpiRandType @16 :Int64;
  vpiStructUnionMember @17 :Bool;
  vpiScalar @18 :Bool;
  vpiVisibility @19 :Int64;
  vpiVector @20 :Bool;
  ports @21 :List(ObjIndexType);
  variabledrivers @22 :List(ObjIndexType);
  variableloads @23 :List(ObjIndexType);
  primterms @24 :List(UInt64);
  contassigns @25 :List(UInt64);
  pathterm @26 :UInt64;
  tchkterm @27 :UInt64;
  module @28 :UInt64;
  instance @29 :ObjIndexType;
  scope @30 :ObjIndexType;
  expr @31 :ObjIndexType;
  indexes @32 :List(ObjIndexType);
  attributes @33 :List(UInt64);
  vpiUses @34 :List(ObjIndexType);
  vpiDecompile @35 :UInt64;
  vpiSize @36 :Int64;
  vpiValue @37 :UInt64;
  typespec @38 :ObjIndexType;
}
struct Chandlevar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  actualgroup @8 :ObjIndexType;
  vpiArrayMember @9 :Bool;
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  vpiSigned @12 :Bool;
  vpiAutomatic @13 :Bool;
  vpiAllocScheme @14 :Int64;
  vpiConstantVariable @15 :Bool;
  vpiIsRandomized @16 :Bool;
  vpiRandType @17 :Int64;
  vpiStructUnionMember @18 :Bool;
  vpiScalar @19 :Bool;
  vpiVisibility @20 :Int64;
  vpiVector @21 :Bool;
  ports @22 :List(ObjIndexType);
  variabledrivers @23 :List(ObjIndexType);
  variableloads @24 :List(ObjIndexType);
  primterms @25 :List(UInt64);
  contassigns @26 :List(UInt64);
  pathterm @27 :UInt64;
  tchkterm @28 :UInt64;
  module @29 :UInt64;
  instance @30 :ObjIndexType;
  scope @31 :ObjIndexType;
  expr @32 :ObjIndexType;
  indexes @33 :List(ObjIndexType);
  attributes @34 :List(UInt64);
  vpiUses @35 :List(ObjIndexType);
  vpiDecompile @36 :UInt64;
  vpiSize @37 :Int64;
  vpiValue @38 :UInt64;
  typespec @39 :ObjIndexType;
}
struct Varbit {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstantSelect @8 :Bool;
  exprindex @9 :ObjIndexType;
  exprindexes @10 :List(ObjIndexType);
  vpiArrayMember @11 :Bool;
  vpiName @12 :UInt64;
  vpiFullName @13 :UInt64;
  vpiSigned @14 :Bool;
  vpiAutomatic @15 :Bool;
  vpiAllocScheme @16 :Int64;
  vpiConstantVariable @17 :Bool;
  vpiIsRandomized @18 :Bool;
  vpiRandType @19 :Int64;
  vpiStructUnionMember @20 :Bool;
  vpiScalar @21 :Bool;
  vpiVisibility @22 :Int64;
  vpiVector @23 :Bool;
  ports @24 :List(ObjIndexType);
  variabledrivers @25 :List(ObjIndexType);
  variableloads @26 :List(ObjIndexType);
  primterms @27 :List(UInt64);
  contassigns @28 :List(UInt64);
  pathterm @29 :UInt64;
  tchkterm @30 :UInt64;
  module @31 :UInt64;
  instance @32 :ObjIndexType;
  scope @33 :ObjIndexType;
  expr @34 :ObjIndexType;
  indexes @35 :List(ObjIndexType);
  attributes @36 :List(UInt64);
  vpiUses @37 :List(ObjIndexType);
  vpiDecompile @38 :UInt64;
  vpiSize @39 :Int64;
  vpiValue @40 :UInt64;
  typespec @41 :ObjIndexType;
}
struct Task {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiMethod @8 :Bool;
  vpiAccessType @9 :Int64;
  vpiVisibility @10 :Int64;
  vpiVirtual @11 :Bool;
  vpiAutomatic @12 :Bool;
  vpiDPIPure @13 :Bool;
  vpiDPIContext @14 :Bool;
  vpiDPICStr @15 :Int64;
  vpiDPICIdentifier @16 :UInt64;
  leftrange @17 :ObjIndexType;
  rightrange @18 :ObjIndexType;
  return @19 :ObjIndexType;
  classdefn @20 :UInt64;
  refobj @21 :UInt64;
  iodecls @22 :List(UInt64);
  stmt @23 :ObjIndexType;
  instance @24 :ObjIndexType;
  vpiName @25 :UInt64;
  vpiFullName @26 :UInt64;
  propertydecls @27 :List(UInt64);
  sequencedecls @28 :List(UInt64);
  concurrentassertions @29 :List(ObjIndexType);
  namedevents @30 :List(UInt64);
  namedeventarrays @31 :List(UInt64);
  variables @32 :List(ObjIndexType);
  virtualinterfacevars @33 :List(UInt64);
  logicvars @34 :List(UInt64);
  arrayvars @35 :List(UInt64);
  arrayvarmems @36 :List(UInt64);
  parameters @37 :List(ObjIndexType);
  paramassigns @38 :List(UInt64);
  scopes @39 :List(ObjIndexType);
  typespecs @40 :List(ObjIndexType);
  instanceitems @41 :List(ObjIndexType);
  letdecls @42 :List(UInt64);
  attributes @43 :List(UInt64);
}
struct Function {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiSigned @8 :Bool;
  vpiSize @9 :Int64;
  vpiFuncType @10 :Int64;
  vpiMethod @11 :Bool;
  vpiAccessType @12 :Int64;
  vpiVisibility @13 :Int64;
  vpiVirtual @14 :Bool;
  vpiAutomatic @15 :Bool;
  vpiDPIPure @16 :Bool;
  vpiDPIContext @17 :Bool;
  vpiDPICStr @18 :Int64;
  vpiDPICIdentifier @19 :UInt64;
  leftrange @20 :ObjIndexType;
  rightrange @21 :ObjIndexType;
  return @22 :ObjIndexType;
  classdefn @23 :UInt64;
  refobj @24 :UInt64;
  iodecls @25 :List(UInt64);
  stmt @26 :ObjIndexType;
  instance @27 :ObjIndexType;
  vpiName @28 :UInt64;
  vpiFullName @29 :UInt64;
  propertydecls @30 :List(UInt64);
  sequencedecls @31 :List(UInt64);
  concurrentassertions @32 :List(ObjIndexType);
  namedevents @33 :List(UInt64);
  namedeventarrays @34 :List(UInt64);
  variables @35 :List(ObjIndexType);
  virtualinterfacevars @36 :List(UInt64);
  logicvars @37 :List(UInt64);
  arrayvars @38 :List(UInt64);
  arrayvarmems @39 :List(UInt64);
  parameters @40 :List(ObjIndexType);
  paramassigns @41 :List(UInt64);
  scopes @42 :List(ObjIndexType);
  typespecs @43 :List(ObjIndexType);
  instanceitems @44 :List(ObjIndexType);
  letdecls @45 :List(UInt64);
  attributes @46 :List(UInt64);
}
struct Modport {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  iodecls @9 :List(UInt64);
  interface @10 :UInt64;
}
struct Interfacetfdecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiAccessType @8 :UInt64;
  tasks @9 :List(UInt64);
  functions @10 :List(UInt64);
}
struct Contassign {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiNetDeclAssign @8 :Bool;
  vpiStrength0 @9 :Int64;
  vpiStrength1 @10 :Int64;
  vpiValue @11 :UInt64;
  delay @12 :ObjIndexType;
  rhs @13 :ObjIndexType;
  lhs @14 :ObjIndexType;
  contassignbits @15 :List(UInt64);
}
struct Contassignbit {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiOffset @8 :Int64;
  vpiNetDeclAssign @9 :Bool;
  vpiStrength0 @10 :Int64;
  vpiStrength1 @11 :Int64;
  vpiValue @12 :UInt64;
  delay @13 :ObjIndexType;
  rhs @14 :ObjIndexType;
  lhs @15 :ObjIndexType;
}
struct Port {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  bits @8 :List(UInt64);
  attributes @9 :List(UInt64);
  vpiPortIndex @10 :Int64;
  vpiName @11 :UInt64;
  vpiPortType @12 :Int64;
  vpiScalar @13 :Bool;
  vpiVector @14 :Bool;
  vpiConnByName @15 :Bool;
  vpiDirection @16 :Int64;
  vpiSize @17 :Int64;
  vpiExplicitName @18 :UInt64;
  highconn @19 :ObjIndexType;
  lowconn @20 :ObjIndexType;
  typespec @21 :ObjIndexType;
  instance @22 :ObjIndexType;
  module @23 :UInt64;
}
struct Portbit {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPortIndex @8 :Int64;
  vpiName @9 :UInt64;
  vpiPortType @10 :Int64;
  vpiScalar @11 :Bool;
  vpiVector @12 :Bool;
  vpiConnByName @13 :Bool;
  vpiDirection @14 :Int64;
  vpiSize @15 :Int64;
  vpiExplicitName @16 :UInt64;
  highconn @17 :ObjIndexType;
  lowconn @18 :ObjIndexType;
  typespec @19 :ObjIndexType;
  instance @20 :ObjIndexType;
  module @21 :UInt64;
}
struct Gate {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiDefName @9 :UInt64;
  vpiDelay @10 :UInt64;
  vpiName @11 :UInt64;
  vpiFullName @12 :UInt64;
  vpiPrimType @13 :Int64;
  vpiStrength0 @14 :Int64;
  vpiStrength1 @15 :Int64;
  attributes @16 :List(UInt64);
  vpiValue @17 :UInt64;
  delay @18 :ObjIndexType;
  index @19 :ObjIndexType;
  primterms @20 :List(UInt64);
}
struct Switchtran {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiDefName @9 :UInt64;
  vpiDelay @10 :UInt64;
  vpiName @11 :UInt64;
  vpiFullName @12 :UInt64;
  vpiPrimType @13 :Int64;
  vpiStrength0 @14 :Int64;
  vpiStrength1 @15 :Int64;
  attributes @16 :List(UInt64);
  vpiValue @17 :UInt64;
  delay @18 :ObjIndexType;
  index @19 :ObjIndexType;
  primterms @20 :List(UInt64);
}
struct Udp {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  udpdefn @8 :UInt64;
  vpiArrayMember @9 :Bool;
  vpiDefName @10 :UInt64;
  vpiDelay @11 :UInt64;
  vpiName @12 :UInt64;
  vpiFullName @13 :UInt64;
  vpiPrimType @14 :Int64;
  vpiStrength0 @15 :Int64;
  vpiStrength1 @16 :Int64;
  attributes @17 :List(UInt64);
  vpiValue @18 :UInt64;
  delay @19 :ObjIndexType;
  index @20 :ObjIndexType;
  primterms @21 :List(UInt64);
}
struct Modpath {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  attributes @8 :List(UInt64);
}
struct Tchk {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  module @8 :UInt64;
  expr @9 :ObjIndexType;
  exprtchkterms @10 :List(ObjIndexType);
  tchkrefterm @11 :UInt64;
  tchkdataterm @12 :UInt64;
  reg @13 :UInt64;
  vpiDelay @14 :UInt64;
  vpiTchkType @15 :Int64;
  attributes @16 :List(UInt64);
}
struct Range {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiSize @8 :Int64;
  leftexpr @9 :ObjIndexType;
  rightexpr @10 :ObjIndexType;
}
struct Udpdefn {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDefName @8 :UInt64;
  vpiSize @9 :Int64;
  vpiProtected @10 :Bool;
  vpiPrimType @11 :Int64;
  attributes @12 :List(UInt64);
  iodecls @13 :List(UInt64);
  tableentrys @14 :List(UInt64);
  initial @15 :UInt64;
}
struct Tableentry {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiSize @8 :Int64;
  vpiValue @9 :UInt64;
  attributes @10 :List(UInt64);
}
struct Iodecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDirection @8 :Int64;
  vpiName @9 :UInt64;
  vpiScalar @10 :Bool;
  vpiSigned @11 :Bool;
  vpiSize @12 :Int64;
  vpiVector @13 :Bool;
  expr @14 :ObjIndexType;
  leftexpr @15 :ObjIndexType;
  rightexpr @16 :ObjIndexType;
  ranges @17 :List(UInt64);
  typespec @18 :ObjIndexType;
}
struct Aliasstmt {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Clockingblock {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiInputEdge @8 :Int64;
  vpiOutputEdge @9 :Int64;
  inputskew @10 :UInt64;
  outputskew @11 :UInt64;
  clockingevent @12 :UInt64;
  instance @13 :ObjIndexType;
  clockingiodecls @14 :List(UInt64);
  prefix @15 :UInt64;
  actual @16 :UInt64;
  vpiName @17 :UInt64;
  vpiFullName @18 :UInt64;
  propertydecls @19 :List(UInt64);
  sequencedecls @20 :List(UInt64);
  concurrentassertions @21 :List(ObjIndexType);
  namedevents @22 :List(UInt64);
  namedeventarrays @23 :List(UInt64);
  variables @24 :List(ObjIndexType);
  virtualinterfacevars @25 :List(UInt64);
  logicvars @26 :List(UInt64);
  arrayvars @27 :List(UInt64);
  arrayvarmems @28 :List(UInt64);
  parameters @29 :List(ObjIndexType);
  paramassigns @30 :List(UInt64);
  scopes @31 :List(ObjIndexType);
  typespecs @32 :List(ObjIndexType);
  instanceitems @33 :List(ObjIndexType);
  letdecls @34 :List(UInt64);
  attributes @35 :List(UInt64);
}
struct Clockingiodecl {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDirection @8 :Int64;
  vpiName @9 :UInt64;
  vpiInputEdge @10 :Int64;
  vpiOutputEdge @11 :Int64;
  inputskew @12 :UInt64;
  outputskew @13 :UInt64;
  expr @14 :ObjIndexType;
}
struct Paramassign {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConnByName @8 :Bool;
  vpiOverriden @9 :Bool;
  rhs @10 :ObjIndexType;
  lhs @11 :ObjIndexType;
  attributes @12 :List(UInt64);
}
struct Interfacearray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  paramassigns @8 :List(UInt64);
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSize @11 :Int64;
  expr @12 :ObjIndexType;
  ranges @13 :List(UInt64);
  leftexpr @14 :ObjIndexType;
  rightexpr @15 :ObjIndexType;
  instances @16 :List(ObjIndexType);
  modules @17 :List(UInt64);
}
struct Programarray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  vpiSize @10 :Int64;
  expr @11 :ObjIndexType;
  ranges @12 :List(UInt64);
  leftexpr @13 :ObjIndexType;
  rightexpr @14 :ObjIndexType;
  instances @15 :List(ObjIndexType);
  modules @16 :List(UInt64);
}
struct Modulearray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  paramassigns @8 :List(UInt64);
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiSize @11 :Int64;
  expr @12 :ObjIndexType;
  ranges @13 :List(UInt64);
  leftexpr @14 :ObjIndexType;
  rightexpr @15 :ObjIndexType;
  instances @16 :List(ObjIndexType);
  modules @17 :List(UInt64);
}
struct Gatearray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  delay @8 :ObjIndexType;
  primitives @9 :List(ObjIndexType);
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  vpiSize @12 :Int64;
  expr @13 :ObjIndexType;
  ranges @14 :List(UInt64);
  leftexpr @15 :ObjIndexType;
  rightexpr @16 :ObjIndexType;
  instances @17 :List(ObjIndexType);
  modules @18 :List(UInt64);
}
struct Switcharray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  delay @8 :ObjIndexType;
  primitives @9 :List(ObjIndexType);
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  vpiSize @12 :Int64;
  expr @13 :ObjIndexType;
  ranges @14 :List(UInt64);
  leftexpr @15 :ObjIndexType;
  rightexpr @16 :ObjIndexType;
  instances @17 :List(ObjIndexType);
  modules @18 :List(UInt64);
}
struct Udparray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  delay @8 :ObjIndexType;
  primitives @9 :List(ObjIndexType);
  vpiName @10 :UInt64;
  vpiFullName @11 :UInt64;
  vpiSize @12 :Int64;
  expr @13 :ObjIndexType;
  ranges @14 :List(UInt64);
  leftexpr @15 :ObjIndexType;
  rightexpr @16 :ObjIndexType;
  instances @17 :List(ObjIndexType);
  modules @18 :List(UInt64);
}
struct Primterm {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDirection @8 :Int64;
  vpiTermIndex @9 :Int64;
  vpiValue @10 :UInt64;
  attributes @11 :List(UInt64);
  expr @12 :ObjIndexType;
}
struct Pathterm {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  attributes @8 :List(UInt64);
}
struct Tchkterm {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  expr @8 :ObjIndexType;
  condition @9 :ObjIndexType;
  vpiEdge @10 :Int64;
}
struct Netbit {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  exprs @8 :List(ObjIndexType);
  vpiArrayMember @9 :Bool;
  vpiConstantSelect @10 :Bool;
  vpiExpanded @11 :Bool;
  vpiImplicitDecl @12 :Bool;
  vpiName @13 :UInt64;
  vpiFullName @14 :UInt64;
  vpiNetDeclAssign @15 :Bool;
  vpiNetType @16 :Int64;
  vpiResolvedNetType @17 :Int64;
  vpiScalar @18 :Bool;
  vpiExplicitScalared @19 :Bool;
  vpiSigned @20 :Bool;
  vpiStrength0 @21 :Int64;
  vpiStrength1 @22 :Int64;
  vpiChargeStrength @23 :Int64;
  vpiVector @24 :Bool;
  vpiExplicitVectored @25 :Bool;
  vpiStructUnionMember @26 :Bool;
  ports @27 :List(ObjIndexType);
  drivers @28 :List(ObjIndexType);
  loads @29 :List(ObjIndexType);
  localdrivers @30 :List(ObjIndexType);
  localloads @31 :List(ObjIndexType);
  primterms @32 :List(UInt64);
  contassigns @33 :List(UInt64);
  pathterms @34 :List(UInt64);
  tchkterms @35 :List(UInt64);
  simnet @36 :ObjIndexType;
  module @37 :UInt64;
  vpiUses @38 :List(ObjIndexType);
  vpiDecompile @39 :UInt64;
  vpiSize @40 :Int64;
  vpiValue @41 :UInt64;
  typespec @42 :ObjIndexType;
}
struct Structnet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPackedArrayMember @8 :Bool;
  nets @9 :List(ObjIndexType);
  netbits @10 :List(UInt64);
  attributes @11 :List(UInt64);
  exprs @12 :List(ObjIndexType);
  vpiArrayMember @13 :Bool;
  vpiConstantSelect @14 :Bool;
  vpiExpanded @15 :Bool;
  vpiImplicitDecl @16 :Bool;
  vpiName @17 :UInt64;
  vpiFullName @18 :UInt64;
  vpiNetDeclAssign @19 :Bool;
  vpiNetType @20 :Int64;
  vpiResolvedNetType @21 :Int64;
  vpiScalar @22 :Bool;
  vpiExplicitScalared @23 :Bool;
  vpiSigned @24 :Bool;
  vpiStrength0 @25 :Int64;
  vpiStrength1 @26 :Int64;
  vpiChargeStrength @27 :Int64;
  vpiVector @28 :Bool;
  vpiExplicitVectored @29 :Bool;
  vpiStructUnionMember @30 :Bool;
  ports @31 :List(ObjIndexType);
  drivers @32 :List(ObjIndexType);
  loads @33 :List(ObjIndexType);
  localdrivers @34 :List(ObjIndexType);
  localloads @35 :List(ObjIndexType);
  primterms @36 :List(UInt64);
  contassigns @37 :List(UInt64);
  pathterms @38 :List(UInt64);
  tchkterms @39 :List(UInt64);
  simnet @40 :ObjIndexType;
  module @41 :UInt64;
  vpiUses @42 :List(ObjIndexType);
  vpiDecompile @43 :UInt64;
  vpiSize @44 :Int64;
  vpiValue @45 :UInt64;
  typespec @46 :ObjIndexType;
}
struct Enumnet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPackedArrayMember @8 :Bool;
  netbits @9 :List(UInt64);
  attributes @10 :List(UInt64);
  exprs @11 :List(ObjIndexType);
  vpiArrayMember @12 :Bool;
  vpiConstantSelect @13 :Bool;
  vpiExpanded @14 :Bool;
  vpiImplicitDecl @15 :Bool;
  vpiName @16 :UInt64;
  vpiFullName @17 :UInt64;
  vpiNetDeclAssign @18 :Bool;
  vpiNetType @19 :Int64;
  vpiResolvedNetType @20 :Int64;
  vpiScalar @21 :Bool;
  vpiExplicitScalared @22 :Bool;
  vpiSigned @23 :Bool;
  vpiStrength0 @24 :Int64;
  vpiStrength1 @25 :Int64;
  vpiChargeStrength @26 :Int64;
  vpiVector @27 :Bool;
  vpiExplicitVectored @28 :Bool;
  vpiStructUnionMember @29 :Bool;
  ports @30 :List(ObjIndexType);
  drivers @31 :List(ObjIndexType);
  loads @32 :List(ObjIndexType);
  localdrivers @33 :List(ObjIndexType);
  localloads @34 :List(ObjIndexType);
  primterms @35 :List(UInt64);
  contassigns @36 :List(UInt64);
  pathterms @37 :List(UInt64);
  tchkterms @38 :List(UInt64);
  simnet @39 :ObjIndexType;
  module @40 :UInt64;
  vpiUses @41 :List(ObjIndexType);
  vpiDecompile @42 :UInt64;
  vpiSize @43 :Int64;
  vpiValue @44 :UInt64;
  typespec @45 :ObjIndexType;
}
struct Integernet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  netbits @8 :List(UInt64);
  attributes @9 :List(UInt64);
  exprs @10 :List(ObjIndexType);
  vpiArrayMember @11 :Bool;
  vpiConstantSelect @12 :Bool;
  vpiExpanded @13 :Bool;
  vpiImplicitDecl @14 :Bool;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  vpiNetDeclAssign @17 :Bool;
  vpiNetType @18 :Int64;
  vpiResolvedNetType @19 :Int64;
  vpiScalar @20 :Bool;
  vpiExplicitScalared @21 :Bool;
  vpiSigned @22 :Bool;
  vpiStrength0 @23 :Int64;
  vpiStrength1 @24 :Int64;
  vpiChargeStrength @25 :Int64;
  vpiVector @26 :Bool;
  vpiExplicitVectored @27 :Bool;
  vpiStructUnionMember @28 :Bool;
  ports @29 :List(ObjIndexType);
  drivers @30 :List(ObjIndexType);
  loads @31 :List(ObjIndexType);
  localdrivers @32 :List(ObjIndexType);
  localloads @33 :List(ObjIndexType);
  primterms @34 :List(UInt64);
  contassigns @35 :List(UInt64);
  pathterms @36 :List(UInt64);
  tchkterms @37 :List(UInt64);
  simnet @38 :ObjIndexType;
  module @39 :UInt64;
  vpiUses @40 :List(ObjIndexType);
  vpiDecompile @41 :UInt64;
  vpiSize @42 :Int64;
  vpiValue @43 :UInt64;
  typespec @44 :ObjIndexType;
}
struct Timenet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  netbits @8 :List(UInt64);
  attributes @9 :List(UInt64);
  exprs @10 :List(ObjIndexType);
  vpiArrayMember @11 :Bool;
  vpiConstantSelect @12 :Bool;
  vpiExpanded @13 :Bool;
  vpiImplicitDecl @14 :Bool;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  vpiNetDeclAssign @17 :Bool;
  vpiNetType @18 :Int64;
  vpiResolvedNetType @19 :Int64;
  vpiScalar @20 :Bool;
  vpiExplicitScalared @21 :Bool;
  vpiSigned @22 :Bool;
  vpiStrength0 @23 :Int64;
  vpiStrength1 @24 :Int64;
  vpiChargeStrength @25 :Int64;
  vpiVector @26 :Bool;
  vpiExplicitVectored @27 :Bool;
  vpiStructUnionMember @28 :Bool;
  ports @29 :List(ObjIndexType);
  drivers @30 :List(ObjIndexType);
  loads @31 :List(ObjIndexType);
  localdrivers @32 :List(ObjIndexType);
  localloads @33 :List(ObjIndexType);
  primterms @34 :List(UInt64);
  contassigns @35 :List(UInt64);
  pathterms @36 :List(UInt64);
  tchkterms @37 :List(UInt64);
  simnet @38 :ObjIndexType;
  module @39 :UInt64;
  vpiUses @40 :List(ObjIndexType);
  vpiDecompile @41 :UInt64;
  vpiSize @42 :Int64;
  vpiValue @43 :UInt64;
  typespec @44 :ObjIndexType;
}
struct Logicnet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  leftexpr @8 :ObjIndexType;
  rightexpr @9 :ObjIndexType;
  ranges @10 :List(UInt64);
  netbits @11 :List(UInt64);
  attributes @12 :List(UInt64);
  exprs @13 :List(ObjIndexType);
  vpiArrayMember @14 :Bool;
  vpiConstantSelect @15 :Bool;
  vpiExpanded @16 :Bool;
  vpiImplicitDecl @17 :Bool;
  vpiName @18 :UInt64;
  vpiFullName @19 :UInt64;
  vpiNetDeclAssign @20 :Bool;
  vpiNetType @21 :Int64;
  vpiResolvedNetType @22 :Int64;
  vpiScalar @23 :Bool;
  vpiExplicitScalared @24 :Bool;
  vpiSigned @25 :Bool;
  vpiStrength0 @26 :Int64;
  vpiStrength1 @27 :Int64;
  vpiChargeStrength @28 :Int64;
  vpiVector @29 :Bool;
  vpiExplicitVectored @30 :Bool;
  vpiStructUnionMember @31 :Bool;
  ports @32 :List(ObjIndexType);
  drivers @33 :List(ObjIndexType);
  loads @34 :List(ObjIndexType);
  localdrivers @35 :List(ObjIndexType);
  localloads @36 :List(ObjIndexType);
  primterms @37 :List(UInt64);
  contassigns @38 :List(UInt64);
  pathterms @39 :List(UInt64);
  tchkterms @40 :List(UInt64);
  simnet @41 :ObjIndexType;
  module @42 :UInt64;
  vpiUses @43 :List(ObjIndexType);
  vpiDecompile @44 :UInt64;
  vpiSize @45 :Int64;
  vpiValue @46 :UInt64;
  typespec @47 :ObjIndexType;
}
struct Arraynet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  nets @8 :List(ObjIndexType);
  ranges @9 :List(UInt64);
  attributes @10 :List(UInt64);
  vpiArrayMember @11 :Bool;
  vpiConstantSelect @12 :Bool;
  vpiExpanded @13 :Bool;
  vpiImplicitDecl @14 :Bool;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  vpiNetDeclAssign @17 :Bool;
  vpiNetType @18 :Int64;
  vpiResolvedNetType @19 :Int64;
  vpiScalar @20 :Bool;
  vpiExplicitScalared @21 :Bool;
  vpiSigned @22 :Bool;
  vpiStrength0 @23 :Int64;
  vpiStrength1 @24 :Int64;
  vpiChargeStrength @25 :Int64;
  vpiVector @26 :Bool;
  vpiExplicitVectored @27 :Bool;
  vpiStructUnionMember @28 :Bool;
  ports @29 :List(ObjIndexType);
  drivers @30 :List(ObjIndexType);
  loads @31 :List(ObjIndexType);
  localdrivers @32 :List(ObjIndexType);
  localloads @33 :List(ObjIndexType);
  primterms @34 :List(UInt64);
  contassigns @35 :List(UInt64);
  pathterms @36 :List(UInt64);
  tchkterms @37 :List(UInt64);
  simnet @38 :ObjIndexType;
  module @39 :UInt64;
  vpiUses @40 :List(ObjIndexType);
  vpiDecompile @41 :UInt64;
  vpiSize @42 :Int64;
  vpiValue @43 :UInt64;
  typespec @44 :ObjIndexType;
}
struct Packedarraynet {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPackedArrayMember @8 :Bool;
  leftexpr @9 :ObjIndexType;
  rightexpr @10 :ObjIndexType;
  ranges @11 :List(UInt64);
  elements @12 :List(ObjIndexType);
  netbits @13 :List(UInt64);
  attributes @14 :List(UInt64);
  exprs @15 :List(ObjIndexType);
  vpiArrayMember @16 :Bool;
  vpiConstantSelect @17 :Bool;
  vpiExpanded @18 :Bool;
  vpiImplicitDecl @19 :Bool;
  vpiName @20 :UInt64;
  vpiFullName @21 :UInt64;
  vpiNetDeclAssign @22 :Bool;
  vpiNetType @23 :Int64;
  vpiResolvedNetType @24 :Int64;
  vpiScalar @25 :Bool;
  vpiExplicitScalared @26 :Bool;
  vpiSigned @27 :Bool;
  vpiStrength0 @28 :Int64;
  vpiStrength1 @29 :Int64;
  vpiChargeStrength @30 :Int64;
  vpiVector @31 :Bool;
  vpiExplicitVectored @32 :Bool;
  vpiStructUnionMember @33 :Bool;
  ports @34 :List(ObjIndexType);
  drivers @35 :List(ObjIndexType);
  loads @36 :List(ObjIndexType);
  localdrivers @37 :List(ObjIndexType);
  localloads @38 :List(ObjIndexType);
  primterms @39 :List(UInt64);
  contassigns @40 :List(UInt64);
  pathterms @41 :List(UInt64);
  tchkterms @42 :List(UInt64);
  simnet @43 :ObjIndexType;
  module @44 :UInt64;
  vpiUses @45 :List(ObjIndexType);
  vpiDecompile @46 :UInt64;
  vpiSize @47 :Int64;
  vpiValue @48 :UInt64;
  typespec @49 :ObjIndexType;
}
struct Eventtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Namedevent {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayMember @8 :Bool;
  vpiName @9 :UInt64;
  vpiFullName @10 :UInt64;
  vpiAutomatic @11 :Bool;
  vpiAllocScheme @12 :Int64;
  attributes @13 :List(UInt64);
  eventtypespec @14 :UInt64;
  threads @15 :List(UInt64);
}
struct Namedeventarray {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Parameter {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiConstType @8 :Int64;
  vpiSigned @9 :Bool;
  expr @10 :ObjIndexType;
  ranges @11 :List(UInt64);
  leftrange @12 :ObjIndexType;
  rightrange @13 :ObjIndexType;
  vpiLocalParam @14 :Bool;
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  vpiImported @17 :UInt64;
  vpiUses @18 :List(ObjIndexType);
  vpiDecompile @19 :UInt64;
  vpiSize @20 :Int64;
  vpiValue @21 :UInt64;
  typespec @22 :ObjIndexType;
}
struct Defparam {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  rhs @8 :ObjIndexType;
  lhs @9 :UInt64;
}
struct Specparam {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  attributes @8 :List(UInt64);
  vpiUses @9 :List(ObjIndexType);
  vpiDecompile @10 :UInt64;
  vpiSize @11 :Int64;
  vpiValue @12 :UInt64;
  typespec @13 :ObjIndexType;
}
struct Classtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiClassType @8 :Int64;
  vpiAutomatic @9 :Bool;
  classtypespec @10 :UInt64;
  variables @11 :List(ObjIndexType);
  taskfuncs @12 :List(ObjIndexType);
  constraints @13 :List(UInt64);
  parameters @14 :List(ObjIndexType);
  paramassigns @15 :List(UInt64);
  virtualinterfacevars @16 :List(UInt64);
  namedevents @17 :List(UInt64);
  namedeventarrays @18 :List(UInt64);
  scopes @19 :List(ObjIndexType);
  classdefn @20 :UInt64;
  vpiName @21 :UInt64;
  typedefalias @22 :ObjIndexType;
  instance @23 :ObjIndexType;
}
struct Extends {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  classtypespec @8 :UInt64;
  arguments @9 :List(ObjIndexType);
}
struct Classdefn {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiVirtual @8 :Bool;
  vpiAutomatic @9 :Bool;
  extends @10 :UInt64;
  taskfuncs @11 :List(ObjIndexType);
  constraints @12 :List(UInt64);
  deriveds @13 :List(UInt64);
  classtypespecs @14 :List(UInt64);
  vpiName @15 :UInt64;
  vpiFullName @16 :UInt64;
  propertydecls @17 :List(UInt64);
  sequencedecls @18 :List(UInt64);
  concurrentassertions @19 :List(ObjIndexType);
  namedevents @20 :List(UInt64);
  namedeventarrays @21 :List(UInt64);
  variables @22 :List(ObjIndexType);
  virtualinterfacevars @23 :List(UInt64);
  logicvars @24 :List(UInt64);
  arrayvars @25 :List(UInt64);
  arrayvarmems @26 :List(UInt64);
  parameters @27 :List(ObjIndexType);
  paramassigns @28 :List(UInt64);
  scopes @29 :List(ObjIndexType);
  typespecs @30 :List(ObjIndexType);
  instanceitems @31 :List(ObjIndexType);
  letdecls @32 :List(UInt64);
  attributes @33 :List(UInt64);
}
struct Classobj {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiObjId @8 :Int64;
  classtypespec @9 :UInt64;
  threads @10 :List(UInt64);
  messages @11 :List(ObjIndexType);
  taskfuncs @12 :List(ObjIndexType);
  constraints @13 :List(UInt64);
  vpiName @14 :UInt64;
  vpiFullName @15 :UInt64;
  propertydecls @16 :List(UInt64);
  sequencedecls @17 :List(UInt64);
  concurrentassertions @18 :List(ObjIndexType);
  namedevents @19 :List(UInt64);
  namedeventarrays @20 :List(UInt64);
  variables @21 :List(ObjIndexType);
  virtualinterfacevars @22 :List(UInt64);
  logicvars @23 :List(UInt64);
  arrayvars @24 :List(UInt64);
  arrayvarmems @25 :List(UInt64);
  parameters @26 :List(ObjIndexType);
  paramassigns @27 :List(UInt64);
  scopes @28 :List(ObjIndexType);
  typespecs @29 :List(ObjIndexType);
  instanceitems @30 :List(ObjIndexType);
  letdecls @31 :List(UInt64);
  attributes @32 :List(UInt64);
}
struct Classvar {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiObjId @8 :Int64;
  classobj @9 :UInt64;
  vpiArrayMember @10 :Bool;
  vpiName @11 :UInt64;
  vpiFullName @12 :UInt64;
  vpiSigned @13 :Bool;
  vpiAutomatic @14 :Bool;
  vpiAllocScheme @15 :Int64;
  vpiConstantVariable @16 :Bool;
  vpiIsRandomized @17 :Bool;
  vpiRandType @18 :Int64;
  vpiStructUnionMember @19 :Bool;
  vpiScalar @20 :Bool;
  vpiVisibility @21 :Int64;
  vpiVector @22 :Bool;
  ports @23 :List(ObjIndexType);
  variabledrivers @24 :List(ObjIndexType);
  variableloads @25 :List(ObjIndexType);
  primterms @26 :List(UInt64);
  contassigns @27 :List(UInt64);
  pathterm @28 :UInt64;
  tchkterm @29 :UInt64;
  module @30 :UInt64;
  instance @31 :ObjIndexType;
  scope @32 :ObjIndexType;
  expr @33 :ObjIndexType;
  indexes @34 :List(ObjIndexType);
  attributes @35 :List(UInt64);
  vpiUses @36 :List(ObjIndexType);
  vpiDecompile @37 :UInt64;
  vpiSize @38 :Int64;
  vpiValue @39 :UInt64;
  typespec @40 :ObjIndexType;
}
struct Interface {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIndex @8 :Int64;
  interfacetfdecls @9 :List(UInt64);
  modports @10 :List(UInt64);
  globalclocking @11 :UInt64;
  defaultclocking @12 :UInt64;
  exprdist @13 :ObjIndexType;
  instancearray @14 :ObjIndexType;
  modpaths @15 :List(UInt64);
  contassigns @16 :List(UInt64);
  clockingblocks @17 :List(UInt64);
  interfaces @18 :List(UInt64);
  interfacearrays @19 :List(UInt64);
  process @20 :List(ObjIndexType);
  ports @21 :List(UInt64);
  genscopearrays @22 :List(UInt64);
  vpiDefName @23 :UInt64;
  vpiArrayMember @24 :Bool;
  vpiCellInstance @25 :Bool;
  vpiDefNetType @26 :Int64;
  vpiDefFile @27 :UInt64;
  vpiDefLineNo @28 :Int64;
  vpiDefDelayMode @29 :Int64;
  vpiProtected @30 :Bool;
  vpiTimePrecision @31 :Int64;
  vpiTimeUnit @32 :Int64;
  vpiUnconnDrive @33 :Int64;
  vpiLibrary @34 :UInt64;
  vpiCell @35 :UInt64;
  vpiConfig @36 :UInt64;
  vpiAutomatic @37 :Bool;
  vpiTop @38 :Bool;
  programs @39 :List(UInt64);
  programarrays @40 :List(UInt64);
  taskfuncs @41 :List(ObjIndexType);
  nets @42 :List(ObjIndexType);
  arraynets @43 :List(UInt64);
  specparams @44 :List(UInt64);
  assertions @45 :List(ObjIndexType);
  classdefns @46 :List(UInt64);
  module @47 :UInt64;
  instance @48 :ObjIndexType;
  vpiName @49 :UInt64;
  vpiFullName @50 :UInt64;
  propertydecls @51 :List(UInt64);
  sequencedecls @52 :List(UInt64);
  concurrentassertions @53 :List(ObjIndexType);
  namedevents @54 :List(UInt64);
  namedeventarrays @55 :List(UInt64);
  variables @56 :List(ObjIndexType);
  virtualinterfacevars @57 :List(UInt64);
  logicvars @58 :List(UInt64);
  arrayvars @59 :List(UInt64);
  arrayvarmems @60 :List(UInt64);
  parameters @61 :List(ObjIndexType);
  paramassigns @62 :List(UInt64);
  scopes @63 :List(ObjIndexType);
  typespecs @64 :List(ObjIndexType);
  instanceitems @65 :List(ObjIndexType);
  letdecls @66 :List(UInt64);
  attributes @67 :List(UInt64);
}
struct Program {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIndex @8 :Int64;
  defaultclocking @9 :UInt64;
  instancearray @10 :ObjIndexType;
  interfaces @11 :List(UInt64);
  exprdist @12 :ObjIndexType;
  interfacearrays @13 :List(UInt64);
  process @14 :List(ObjIndexType);
  contassigns @15 :List(UInt64);
  clockingblocks @16 :List(UInt64);
  ports @17 :List(UInt64);
  genscopearrays @18 :List(UInt64);
  vpiDefName @19 :UInt64;
  vpiArrayMember @20 :Bool;
  vpiCellInstance @21 :Bool;
  vpiDefNetType @22 :Int64;
  vpiDefFile @23 :UInt64;
  vpiDefLineNo @24 :Int64;
  vpiDefDelayMode @25 :Int64;
  vpiProtected @26 :Bool;
  vpiTimePrecision @27 :Int64;
  vpiTimeUnit @28 :Int64;
  vpiUnconnDrive @29 :Int64;
  vpiLibrary @30 :UInt64;
  vpiCell @31 :UInt64;
  vpiConfig @32 :UInt64;
  vpiAutomatic @33 :Bool;
  vpiTop @34 :Bool;
  programs @35 :List(UInt64);
  programarrays @36 :List(UInt64);
  taskfuncs @37 :List(ObjIndexType);
  nets @38 :List(ObjIndexType);
  arraynets @39 :List(UInt64);
  specparams @40 :List(UInt64);
  assertions @41 :List(ObjIndexType);
  classdefns @42 :List(UInt64);
  module @43 :UInt64;
  instance @44 :ObjIndexType;
  vpiName @45 :UInt64;
  vpiFullName @46 :UInt64;
  propertydecls @47 :List(UInt64);
  sequencedecls @48 :List(UInt64);
  concurrentassertions @49 :List(ObjIndexType);
  namedevents @50 :List(UInt64);
  namedeventarrays @51 :List(UInt64);
  variables @52 :List(ObjIndexType);
  virtualinterfacevars @53 :List(UInt64);
  logicvars @54 :List(UInt64);
  arrayvars @55 :List(UInt64);
  arrayvarmems @56 :List(UInt64);
  parameters @57 :List(ObjIndexType);
  paramassigns @58 :List(UInt64);
  scopes @59 :List(ObjIndexType);
  typespecs @60 :List(ObjIndexType);
  instanceitems @61 :List(ObjIndexType);
  letdecls @62 :List(UInt64);
  attributes @63 :List(UInt64);
}
struct Package {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiUnit @8 :Bool;
  vpiDefName @9 :UInt64;
  vpiArrayMember @10 :Bool;
  vpiCellInstance @11 :Bool;
  vpiDefNetType @12 :Int64;
  vpiDefFile @13 :UInt64;
  vpiDefLineNo @14 :Int64;
  vpiDefDelayMode @15 :Int64;
  vpiProtected @16 :Bool;
  vpiTimePrecision @17 :Int64;
  vpiTimeUnit @18 :Int64;
  vpiUnconnDrive @19 :Int64;
  vpiLibrary @20 :UInt64;
  vpiCell @21 :UInt64;
  vpiConfig @22 :UInt64;
  vpiAutomatic @23 :Bool;
  vpiTop @24 :Bool;
  programs @25 :List(UInt64);
  programarrays @26 :List(UInt64);
  taskfuncs @27 :List(ObjIndexType);
  nets @28 :List(ObjIndexType);
  arraynets @29 :List(UInt64);
  specparams @30 :List(UInt64);
  assertions @31 :List(ObjIndexType);
  classdefns @32 :List(UInt64);
  module @33 :UInt64;
  instance @34 :ObjIndexType;
  vpiName @35 :UInt64;
  vpiFullName @36 :UInt64;
  propertydecls @37 :List(UInt64);
  sequencedecls @38 :List(UInt64);
  concurrentassertions @39 :List(ObjIndexType);
  namedevents @40 :List(UInt64);
  namedeventarrays @41 :List(UInt64);
  variables @42 :List(ObjIndexType);
  virtualinterfacevars @43 :List(UInt64);
  logicvars @44 :List(UInt64);
  arrayvars @45 :List(UInt64);
  arrayvarmems @46 :List(UInt64);
  parameters @47 :List(ObjIndexType);
  paramassigns @48 :List(UInt64);
  scopes @49 :List(ObjIndexType);
  typespecs @50 :List(ObjIndexType);
  instanceitems @51 :List(ObjIndexType);
  letdecls @52 :List(UInt64);
  attributes @53 :List(UInt64);
}
struct Module {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiIndex @8 :Int64;
  vpiTopModule @9 :Bool;
  vpiDefDecayTime @10 :Int64;
  globalclocking @11 :UInt64;
  defaultclocking @12 :UInt64;
  exprdist @13 :ObjIndexType;
  modulearray @14 :UInt64;
  instancearray @15 :ObjIndexType;
  ports @16 :List(UInt64);
  interfaces @17 :List(UInt64);
  interfacearrays @18 :List(UInt64);
  process @19 :List(ObjIndexType);
  contassigns @20 :List(UInt64);
  modules @21 :List(UInt64);
  modulearrays @22 :List(UInt64);
  primitives @23 :List(ObjIndexType);
  primitivearrays @24 :List(ObjIndexType);
  modpaths @25 :List(UInt64);
  tchks @26 :List(UInt64);
  defparams @27 :List(UInt64);
  iodecls @28 :List(UInt64);
  aliasstmts @29 :List(UInt64);
  clockingblocks @30 :List(UInt64);
  genscopearrays @31 :List(UInt64);
  vpiDefName @32 :UInt64;
  vpiArrayMember @33 :Bool;
  vpiCellInstance @34 :Bool;
  vpiDefNetType @35 :Int64;
  vpiDefFile @36 :UInt64;
  vpiDefLineNo @37 :Int64;
  vpiDefDelayMode @38 :Int64;
  vpiProtected @39 :Bool;
  vpiTimePrecision @40 :Int64;
  vpiTimeUnit @41 :Int64;
  vpiUnconnDrive @42 :Int64;
  vpiLibrary @43 :UInt64;
  vpiCell @44 :UInt64;
  vpiConfig @45 :UInt64;
  vpiAutomatic @46 :Bool;
  vpiTop @47 :Bool;
  programs @48 :List(UInt64);
  programarrays @49 :List(UInt64);
  taskfuncs @50 :List(ObjIndexType);
  nets @51 :List(ObjIndexType);
  arraynets @52 :List(UInt64);
  specparams @53 :List(UInt64);
  assertions @54 :List(ObjIndexType);
  classdefns @55 :List(UInt64);
  module @56 :UInt64;
  instance @57 :ObjIndexType;
  vpiName @58 :UInt64;
  vpiFullName @59 :UInt64;
  propertydecls @60 :List(UInt64);
  sequencedecls @61 :List(UInt64);
  concurrentassertions @62 :List(ObjIndexType);
  namedevents @63 :List(UInt64);
  namedeventarrays @64 :List(UInt64);
  variables @65 :List(ObjIndexType);
  virtualinterfacevars @66 :List(UInt64);
  logicvars @67 :List(UInt64);
  arrayvars @68 :List(UInt64);
  arrayvarmems @69 :List(UInt64);
  parameters @70 :List(ObjIndexType);
  paramassigns @71 :List(UInt64);
  scopes @72 :List(ObjIndexType);
  typespecs @73 :List(ObjIndexType);
  instanceitems @74 :List(ObjIndexType);
  letdecls @75 :List(UInt64);
  attributes @76 :List(UInt64);
}
struct Shortrealtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Realtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Bytetypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Shortinttypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Inttypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiValue @8 :UInt64;
  vpiName @9 :UInt64;
  typedefalias @10 :ObjIndexType;
  instance @11 :ObjIndexType;
}
struct Longinttypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Integertypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiValue @8 :UInt64;
  vpiName @9 :UInt64;
  typedefalias @10 :ObjIndexType;
  instance @11 :ObjIndexType;
}
struct Timetypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Enumtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  basetypespec @8 :ObjIndexType;
  enumconsts @9 :List(UInt64);
  vpiName @10 :UInt64;
  typedefalias @11 :ObjIndexType;
  instance @12 :ObjIndexType;
}
struct Stringtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Chandletypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Structtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPacked @8 :Bool;
  members @9 :List(UInt64);
  vpiName @10 :UInt64;
  typedefalias @11 :ObjIndexType;
  instance @12 :ObjIndexType;
}
struct Uniontypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiPacked @8 :Bool;
  vpiTagged @9 :Bool;
  members @10 :List(UInt64);
  vpiName @11 :UInt64;
  typedefalias @12 :ObjIndexType;
  instance @13 :ObjIndexType;
}
struct Logictypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  typespec @8 :ObjIndexType;
  vpiVector @9 :Bool;
  logictypespec @10 :UInt64;
  ranges @11 :List(UInt64);
  leftexpr @12 :ObjIndexType;
  rightexpr @13 :ObjIndexType;
  vpiName @14 :UInt64;
  typedefalias @15 :ObjIndexType;
  instance @16 :ObjIndexType;
}
struct Packedarraytypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  typespec @8 :ObjIndexType;
  vpiVector @9 :Bool;
  ranges @10 :List(UInt64);
  leftexpr @11 :ObjIndexType;
  rightexpr @12 :ObjIndexType;
  elemtypespec @13 :ObjIndexType;
  vpiName @14 :UInt64;
  typedefalias @15 :ObjIndexType;
  instance @16 :ObjIndexType;
}
struct Arraytypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiArrayType @8 :Int64;
  ranges @9 :List(UInt64);
  leftexpr @10 :ObjIndexType;
  rightexpr @11 :ObjIndexType;
  indextypespec @12 :ObjIndexType;
  elemtypespec @13 :ObjIndexType;
  vpiName @14 :UInt64;
  typedefalias @15 :ObjIndexType;
  instance @16 :ObjIndexType;
}
struct Voidtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Unsupportedtypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Sequencetypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Propertytypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  typedefalias @9 :ObjIndexType;
  instance @10 :ObjIndexType;
}
struct Interfacetypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDefName @8 :UInt64;
  vpiIsModPort @9 :Bool;
  paramassigns @10 :List(UInt64);
  vpiName @11 :UInt64;
  typedefalias @12 :ObjIndexType;
  instance @13 :ObjIndexType;
}
struct Typeparameter {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  typespec @8 :ObjIndexType;
  vpiLocalParam @9 :Bool;
  vpiFullName @10 :UInt64;
  expr @11 :ObjIndexType;
  vpiImported @12 :UInt64;
  vpiName @13 :UInt64;
  typedefalias @14 :ObjIndexType;
  instance @15 :ObjIndexType;
}
struct Typespecmember {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiRandType @9 :Bool;
  typespec @10 :ObjIndexType;
  defaultvalue @11 :ObjIndexType;
}
struct Enumconst {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiValue @9 :UInt64;
  vpiDecompile @10 :UInt64;
  vpiSize @11 :Int64;
}
struct Bittypespec {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  typespec @8 :ObjIndexType;
  vpiVector @9 :Bool;
  bittypespec @10 :UInt64;
  ranges @11 :List(UInt64);
  leftexpr @12 :ObjIndexType;
  rightexpr @13 :ObjIndexType;
  vpiName @14 :UInt64;
  typedefalias @15 :ObjIndexType;
  instance @16 :ObjIndexType;
}
struct Usersystf {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
}
struct Sysfunccall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiFuncType @8 :Int64;
  vpiUserDefn @9 :Bool;
  usersystf @10 :UInt64;
  scope @11 :ObjIndexType;
  tfcallargs @12 :List(ObjIndexType);
  vpiName @13 :UInt64;
  vpiDecompile @14 :UInt64;
  vpiSize @15 :Int64;
  vpiValue @16 :UInt64;
  typespec @17 :ObjIndexType;
}
struct Systaskcall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiUserDefn @8 :Bool;
  usersystf @9 :UInt64;
  scope @10 :ObjIndexType;
  tfcallargs @11 :List(ObjIndexType);
  vpiName @12 :UInt64;
  vpiDecompile @13 :UInt64;
  vpiSize @14 :Int64;
  vpiValue @15 :UInt64;
  typespec @16 :ObjIndexType;
}
struct Methodfunccall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiUserDefn @8 :Bool;
  prefix @9 :ObjIndexType;
  with @10 :ObjIndexType;
  function @11 :UInt64;
  scope @12 :ObjIndexType;
  tfcallargs @13 :List(ObjIndexType);
  vpiName @14 :UInt64;
  vpiDecompile @15 :UInt64;
  vpiSize @16 :Int64;
  vpiValue @17 :UInt64;
  typespec @18 :ObjIndexType;
}
struct Methodtaskcall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiUserDefn @8 :Bool;
  prefix @9 :ObjIndexType;
  with @10 :ObjIndexType;
  task @11 :UInt64;
  scope @12 :ObjIndexType;
  tfcallargs @13 :List(ObjIndexType);
  vpiName @14 :UInt64;
  vpiDecompile @15 :UInt64;
  vpiSize @16 :Int64;
  vpiValue @17 :UInt64;
  typespec @18 :ObjIndexType;
}
struct Funccall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiFuncType @8 :Int64;
  function @9 :UInt64;
  scope @10 :ObjIndexType;
  tfcallargs @11 :List(ObjIndexType);
  vpiName @12 :UInt64;
  vpiDecompile @13 :UInt64;
  vpiSize @14 :Int64;
  vpiValue @15 :UInt64;
  typespec @16 :ObjIndexType;
}
struct Taskcall {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  task @8 :UInt64;
  scope @9 :ObjIndexType;
  tfcallargs @10 :List(ObjIndexType);
  vpiName @11 :UInt64;
  vpiDecompile @12 :UInt64;
  vpiSize @13 :Int64;
  vpiValue @14 :UInt64;
  typespec @15 :ObjIndexType;
}
struct Constraintordering {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  solvebefores @8 :List(ObjIndexType);
  solveafters @9 :List(ObjIndexType);
}
struct Constraint {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiName @8 :UInt64;
  vpiFullName @9 :UInt64;
  vpiVirtual @10 :Bool;
  vpiAutomatic @11 :Bool;
  vpiAllocScheme @12 :Int64;
  vpiAccessType @13 :Int64;
  attributes @14 :List(UInt64);
  vpiIsConstraintEnabled @15 :Bool;
  constraintitems @16 :List(ObjIndexType);
}
struct Import {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  item @8 :UInt64;
  vpiName @9 :UInt64;
  typedefalias @10 :ObjIndexType;
  instance @11 :ObjIndexType;
}
struct Distitem {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiDistType @8 :Int64;
  valuerange @9 :ObjIndexType;
  weight @10 :ObjIndexType;
}
struct Distribution {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiSoft @8 :Bool;
  distitems @9 :List(UInt64);
  expr @10 :ObjIndexType;
}
struct Implication {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  constraintexprs @8 :List(ObjIndexType);
  condition @9 :ObjIndexType;
}
struct Constrif {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  constraintexprs @8 :List(ObjIndexType);
  condition @9 :ObjIndexType;
}
struct Constrifelse {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  constraintexprs @8 :List(ObjIndexType);
  condition @9 :ObjIndexType;
  elseconstraintexprs @10 :List(ObjIndexType);
}
struct Constrforeach {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  constraintexprs @8 :List(ObjIndexType);
  variable @9 :ObjIndexType;
  vpiLoopVars @10 :List(ObjIndexType);
}
struct Softdisable {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  expr @8 :ObjIndexType;
}
struct Design {
  vpiParent @0 :UInt64;
  uhdmParentType @1 :UInt64;
  vpiFile @2 :UInt64;
  vpiLineNo @3 :UInt32;
  vpiColumnNo @4 :UInt16;
  vpiEndLineNo @5 :UInt32;
  vpiEndColumnNo @6 :UInt16;
  uhdmId @7 :UInt64;
  vpiElaborated @8 :Bool;
  vpiName @9 :UInt64;
  allPackages @10 :List(UInt64);
  allClasses @11 :List(UInt64);
  allInterfaces @12 :List(UInt64);
  allUdps @13 :List(UInt64);
  allPrograms @14 :List(UInt64);
  allModules @15 :List(UInt64);
  topModules @16 :List(UInt64);
  typespecs @17 :List(ObjIndexType);
  letdecls @18 :List(UInt64);
  taskfuncs @19 :List(ObjIndexType);
}

