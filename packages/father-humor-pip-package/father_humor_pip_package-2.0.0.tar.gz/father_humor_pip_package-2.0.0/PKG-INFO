Metadata-Version: 2.1
Name: father_humor_pip_package
Version: 2.0.0
Summary: father-humor is a PIP package that you can install to utilize the built-in import method and render dad jokes directly to your terminal or your project's front-end deployment.
Project-URL: Homepage, https://github.com/TheYoungAndTheRESTless/father_humor
Project-URL: Bug Tracker, https://github.com/orgs/TheYoungAndTheRESTless/projects/1/views/1
Author-email: Anthony Hill <anthonyhilldeveloper@gmail.com>, Brian Tarte <brianjtarte@gmail.com>, Ibraheem Ibraheem <iibraheem2001@gmail.com>, Brendon Hampton <brendonhampton1988@gmail.com>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown

<center style="font-family:'Brush Script MT', cursive">
<h1><span style="color:brown">⭐ ⭐ ⭐ </span>Father Humor<span style="color:brown"> ⭐ ⭐ ⭐</span></h1>
<h3>Description</h3>
<p style="max-width:500px">father-humor is a PIP package that you can install to utilize the built-in `import` method and render dad jokes directly to your terminal or your project's front-end deployment.
</p>
<h3>Authors:</h3>

Brendon Hampton
[GitHub](https://github.com/BrendonLH) | [LinkedIn](https://www.linkedin.com/in/brendon-hampton-37132899/)

Anthony Hill
[GitHub](https://github.com/anthonymhill23) | [LinkedIn](https://www.linkedin.com/in/anthonymhill23/)

Ibraheem Ibraheem
[GitHub](https://github.com/iibraheem2001) | [LinkedIn](https://www.linkedin.com/in/ibraheem-ibraheem/)

Brian Tarte
[GitHub](https://github.com/brianjtarte) | [LinkedIn](https://www.linkedin.com/in/brianjtarte/)



###  User Stories

<details>
<summary style="font-size:20px">Story 1</summary>

As a user I want to install a pip package named "father-humor" for ease of integration

**feature tasks**

user can install pip package named "father-humor"
           
**acceptance tests**

ensure that the user installs the package correctly
           
**scale** 
⭐ 1-2 hours 
</details>
<details>
<summary style="font-size:20px">Story 2</summary>

As a user I want to call an imported function(s) that return list(s) of scraped dad jokes

**feature tasks**

user can import function(s) named based on maturity level
             
 **acceptance tests**

 ensure user can import all three functions
 
**scale** 
⭐ ⭐ ⭐ 1-2 days 
</details>
<details>
<summary style="font-size:20px">Story 3</summary>

As a user I want to select the category of the jokes so I can deliver content to my audience

**feature tasks**

user can import "father-humor.{}"

user can import "father-humor.{}"

user can import "father-humor.{}" 
             
**acceptance tests**

**scale** 
⭐ ⭐  1 day
</details>
<details>
<summary style="font-size:20px">Story 4</summary>

As a user I want to scrape once and still have access to past scraped jokes so I don't have to keep scraping jokes.

**feature tasks**

when user calls function for the first time the scraped jokes are saved in a new file
when user calls function after first time, the file is updated
 
 **acceptance tests**

when function is called, text file exists

check if the jokes are in the file
 
**scale** 
⭐ ⭐ ⭐ 1-2 days
</details>

<details>
<summary style="font-size:20px">Story 5</summary>

As a user I want the jokes to display on the terminal so I have a visual representation of the joke

**feature tasks**

user can instantiate imported function(s) to get jokes to display on the terminal 
 
 **acceptance tests**

when user instantiates function, user gets returned joke(s)

**scale** 
⭐ 1-2 hours

</details>

## How to Use Our Application

### Links and URL's
[Live Package](https://pypi.org/project/father-humor-pip-package/) | The living Downloadable Package

[Test Package](https://test.pypi.org/project/father-humor-pip-package/) | Feature Testing

### Download Our Package at
[Father Humor pip Package](https://pypi.org/project/father-humor-pip-package/)

</center>
