Metadata-Version: 2.1
Name: mctinctools
Version: 0.1.4
Summary: Common tools for our organization.
Home-page: https://github.com/forums34/mctinctools
License: MIT
Author: forums34
Author-email: greg.wendel@hey.com
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Requires-Dist: Faker (>=13.15.1,<14.0.0)
Requires-Dist: Jinja2 (>=3.1.2,<4.0.0)
Requires-Dist: click (>=8.1.3,<9.0.0)
Requires-Dist: interrogate (>=1.5.0,<2.0.0)
Requires-Dist: mdx-gh-links (>=0.3,<0.4)
Requires-Dist: mkdocs-gen-files (>=0.3.5,<0.4.0)
Requires-Dist: mkdocs-literate-nav (>=0.4.1,<0.5.0)
Requires-Dist: mkdocs-material (>=8.3.9,<9.0.0)
Requires-Dist: mkdocstrings (>=0.19.0,<0.20.0)
Requires-Dist: mkdocstrings-python (>=0.7.1,<0.8.0)
Requires-Dist: pandas (>=1.4.3,<2.0.0)
Requires-Dist: pre-commit (>=2.20.0,<3.0.0)
Requires-Dist: pytest (>=7.1.2,<8.0.0)
Requires-Dist: python-dotenv (>=0.20.0,<0.21.0)
Requires-Dist: rich (>=12.5.1,<13.0.0)
Project-URL: Repository, https://github.com/forums34/mctinctools.git
Description-Content-Type: text/markdown

# README.md

## Base file using best practices
- pytest for testing
- precommit
- black formatting
- flake linting
  - includes bandit for security scanning
- mypy - type testing
- mkdocs for automatic document preparation based on code
- nox for automatic testing and building (python version of tox)
- scriv for automatic changelog generation

### Manual commands 
- Build requirements.txt from poetry

```bash
  poetry export -f requirements.txt > requirements.txt
```
- Build changelog data.
```
sciv create
```
- Edit file created.
```
edit changelog.d/AUTOGENERATEDFILENAME
add what you changed
```
- Collect the changelog to update CHANGELOG.rst
```
scriv collect

```

- Build package for upload to pypi.
  - Get pypi authentication ready prior to publish
  - Update version number in pyproject.toml prior to building
```
add env variables
put secret in env variables with
$POETRY_HTTP_BASIC_PYPI_TOKEN
export POETRY_HTTP_BASIC_PYPI_TOKEN=PYPIAPIGOESHERE
poetry config pypi-token.pypi $POETRY_HTTP_BASIC_PYPI_TOKEN
poetry build
poetry publish
```

