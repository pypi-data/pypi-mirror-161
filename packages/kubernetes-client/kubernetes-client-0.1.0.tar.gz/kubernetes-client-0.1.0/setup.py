import os
from setuptools import setup, find_packages
import datetime as dt
from pip._internal.req import parse_requirements
from pip._internal.network.session import PipSession


package_nm = 'kubernetes-client'
__version__ = "0.1.0"

req_file = os.path.join(
    os.path.dirname(__file__),
    "requirements.txt",
)
if os.path.exists(req_file):
    install_requires_gen = parse_requirements(
        req_file,
        session=PipSession(),
    )
    install_requires = [str(i.requirement) for i in install_requires_gen]
else:
    install_requires = []


with open(f'{package_nm}/__version__.py', 'w') as f:
    version_py_module = f'''#-*- coding: utf-8 -*-
# This file is automatically generated by 'setup.py'
"""
Modified on {dt.datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
"""
__all__ = ['__version__']

__version__ = '{__version__}'
'''
    f.write(version_py_module)

long_desc = ""

setup(
    name=package_nm,
    version=__version__,
    author_email='pydemia@gmail.com',
    url='',
    description='High-level functional API for Kubernetes Resources and 3rd party CRDs, based on the official kubernetes-client, and more.',
    long_description=long_desc,
    python_requires='>=3.8',
    packages=find_packages(
        exclude=['contrib', 'docs', 'tests'],
    ),
    install_requires=install_requires,
)
